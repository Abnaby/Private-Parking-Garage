
ECU1_EntranceGate.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002fcc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005a  00800060  00002fcc  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002f  008000ba  008000ba  000030ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000030ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000030ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000398  00000000  00000000  00003128  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c14  00000000  00000000  000034c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001103  00000000  00000000  000060d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000027aa  00000000  00000000  000071d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cd8  00000000  00000000  00009984  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001903  00000000  00000000  0000a65c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a36  00000000  00000000  0000bf5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000330  00000000  00000000  0000d995  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
       4:	0c 94 58 0d 	jmp	0x1ab0	; 0x1ab0 <__vector_1>
       8:	0c 94 89 0d 	jmp	0x1b12	; 0x1b12 <__vector_2>
       c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      28:	0c 94 b8 14 	jmp	0x2970	; 0x2970 <__vector_10>
      2c:	0c 94 37 16 	jmp	0x2c6e	; 0x2c6e <__vector_11>
      30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      34:	0c 94 70 16 	jmp	0x2ce0	; 0x2ce0 <__vector_13>
      38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      40:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      48:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <__vector_18>
      4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      54:	46 13       	cpse	r20, r22
      56:	4b 13       	cpse	r20, r27
      58:	52 13       	cpse	r21, r18
      5a:	59 13       	cpse	r21, r25
      5c:	60 13       	cpse	r22, r16
      5e:	67 13       	cpse	r22, r23
      60:	6e 13       	cpse	r22, r30
      62:	75 13       	cpse	r23, r21

00000064 <__ctors_end>:
      64:	11 24       	eor	r1, r1
      66:	1f be       	out	0x3f, r1	; 63
      68:	cf e5       	ldi	r28, 0x5F	; 95
      6a:	d4 e0       	ldi	r29, 0x04	; 4
      6c:	de bf       	out	0x3e, r29	; 62
      6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ec ec       	ldi	r30, 0xCC	; 204
      78:	ff e2       	ldi	r31, 0x2F	; 47
      7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0
      80:	aa 3b       	cpi	r26, 0xBA	; 186
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>

00000086 <__do_clear_bss>:
      86:	20 e0       	ldi	r18, 0x00	; 0
      88:	aa eb       	ldi	r26, 0xBA	; 186
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	01 c0       	rjmp	.+2      	; 0x90 <.do_clear_bss_start>

0000008e <.do_clear_bss_loop>:
      8e:	1d 92       	st	X+, r1

00000090 <.do_clear_bss_start>:
      90:	a9 3e       	cpi	r26, 0xE9	; 233
      92:	b2 07       	cpc	r27, r18
      94:	e1 f7       	brne	.-8      	; 0x8e <.do_clear_bss_loop>
      96:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <main>
      9a:	0c 94 e4 17 	jmp	0x2fc8	; 0x2fc8 <_exit>

0000009e <__bad_interrupt>:
      9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <Buzzer>:

};
// Buzzer

static void Buzzer( u8 copyNumberOfRepeatations)
{
      a2:	cf 93       	push	r28
      a4:	df 93       	push	r29
      a6:	cd b7       	in	r28, 0x3d	; 61
      a8:	de b7       	in	r29, 0x3e	; 62
      aa:	6e 97       	sbiw	r28, 0x1e	; 30
      ac:	0f b6       	in	r0, 0x3f	; 63
      ae:	f8 94       	cli
      b0:	de bf       	out	0x3e, r29	; 62
      b2:	0f be       	out	0x3f, r0	; 63
      b4:	cd bf       	out	0x3d, r28	; 61
      b6:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 LOC_u8Counter = 0 ;
      b8:	19 82       	std	Y+1, r1	; 0x01
	for(LOC_u8Counter ; LOC_u8Counter<copyNumberOfRepeatations ; LOC_u8Counter++)
      ba:	f1 c0       	rjmp	.+482    	; 0x29e <__EEPROM_REGION_LENGTH__+0x9e>
	{
		GPIO_voidSetPinValue(PORTC,PIN6,HIGH);
      bc:	41 e0       	ldi	r20, 0x01	; 1
      be:	66 e0       	ldi	r22, 0x06	; 6
      c0:	82 e0       	ldi	r24, 0x02	; 2
      c2:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
      c6:	80 e0       	ldi	r24, 0x00	; 0
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	a8 ec       	ldi	r26, 0xC8	; 200
      cc:	b2 e4       	ldi	r27, 0x42	; 66
      ce:	8a 83       	std	Y+2, r24	; 0x02
      d0:	9b 83       	std	Y+3, r25	; 0x03
      d2:	ac 83       	std	Y+4, r26	; 0x04
      d4:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
      d6:	20 e0       	ldi	r18, 0x00	; 0
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	4a e7       	ldi	r20, 0x7A	; 122
      dc:	55 e4       	ldi	r21, 0x45	; 69
      de:	6a 81       	ldd	r22, Y+2	; 0x02
      e0:	7b 81       	ldd	r23, Y+3	; 0x03
      e2:	8c 81       	ldd	r24, Y+4	; 0x04
      e4:	9d 81       	ldd	r25, Y+5	; 0x05
      e6:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
      ea:	dc 01       	movw	r26, r24
      ec:	cb 01       	movw	r24, r22
      ee:	8c 8b       	std	Y+20, r24	; 0x14
      f0:	9d 8b       	std	Y+21, r25	; 0x15
      f2:	ae 8b       	std	Y+22, r26	; 0x16
      f4:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
      f6:	20 e0       	ldi	r18, 0x00	; 0
      f8:	30 e0       	ldi	r19, 0x00	; 0
      fa:	40 e8       	ldi	r20, 0x80	; 128
      fc:	5f e3       	ldi	r21, 0x3F	; 63
      fe:	6c 89       	ldd	r22, Y+20	; 0x14
     100:	7d 89       	ldd	r23, Y+21	; 0x15
     102:	8e 89       	ldd	r24, Y+22	; 0x16
     104:	9f 89       	ldd	r25, Y+23	; 0x17
     106:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     10a:	88 23       	and	r24, r24
     10c:	2c f4       	brge	.+10     	; 0x118 <Buzzer+0x76>
		__ticks = 1;
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	99 8f       	std	Y+25, r25	; 0x19
     114:	88 8f       	std	Y+24, r24	; 0x18
     116:	3f c0       	rjmp	.+126    	; 0x196 <Buzzer+0xf4>
	else if (__tmp > 65535)
     118:	20 e0       	ldi	r18, 0x00	; 0
     11a:	3f ef       	ldi	r19, 0xFF	; 255
     11c:	4f e7       	ldi	r20, 0x7F	; 127
     11e:	57 e4       	ldi	r21, 0x47	; 71
     120:	6c 89       	ldd	r22, Y+20	; 0x14
     122:	7d 89       	ldd	r23, Y+21	; 0x15
     124:	8e 89       	ldd	r24, Y+22	; 0x16
     126:	9f 89       	ldd	r25, Y+23	; 0x17
     128:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     12c:	18 16       	cp	r1, r24
     12e:	4c f5       	brge	.+82     	; 0x182 <Buzzer+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     130:	20 e0       	ldi	r18, 0x00	; 0
     132:	30 e0       	ldi	r19, 0x00	; 0
     134:	40 e2       	ldi	r20, 0x20	; 32
     136:	51 e4       	ldi	r21, 0x41	; 65
     138:	6a 81       	ldd	r22, Y+2	; 0x02
     13a:	7b 81       	ldd	r23, Y+3	; 0x03
     13c:	8c 81       	ldd	r24, Y+4	; 0x04
     13e:	9d 81       	ldd	r25, Y+5	; 0x05
     140:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     144:	dc 01       	movw	r26, r24
     146:	cb 01       	movw	r24, r22
     148:	bc 01       	movw	r22, r24
     14a:	cd 01       	movw	r24, r26
     14c:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     150:	dc 01       	movw	r26, r24
     152:	cb 01       	movw	r24, r22
     154:	99 8f       	std	Y+25, r25	; 0x19
     156:	88 8f       	std	Y+24, r24	; 0x18
     158:	0f c0       	rjmp	.+30     	; 0x178 <Buzzer+0xd6>
     15a:	80 e9       	ldi	r24, 0x90	; 144
     15c:	91 e0       	ldi	r25, 0x01	; 1
     15e:	9b 8f       	std	Y+27, r25	; 0x1b
     160:	8a 8f       	std	Y+26, r24	; 0x1a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     162:	8a 8d       	ldd	r24, Y+26	; 0x1a
     164:	9b 8d       	ldd	r25, Y+27	; 0x1b
     166:	01 97       	sbiw	r24, 0x01	; 1
     168:	f1 f7       	brne	.-4      	; 0x166 <Buzzer+0xc4>
     16a:	9b 8f       	std	Y+27, r25	; 0x1b
     16c:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     16e:	88 8d       	ldd	r24, Y+24	; 0x18
     170:	99 8d       	ldd	r25, Y+25	; 0x19
     172:	01 97       	sbiw	r24, 0x01	; 1
     174:	99 8f       	std	Y+25, r25	; 0x19
     176:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     178:	88 8d       	ldd	r24, Y+24	; 0x18
     17a:	99 8d       	ldd	r25, Y+25	; 0x19
     17c:	89 2b       	or	r24, r25
     17e:	69 f7       	brne	.-38     	; 0x15a <Buzzer+0xb8>
     180:	14 c0       	rjmp	.+40     	; 0x1aa <Buzzer+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     182:	6c 89       	ldd	r22, Y+20	; 0x14
     184:	7d 89       	ldd	r23, Y+21	; 0x15
     186:	8e 89       	ldd	r24, Y+22	; 0x16
     188:	9f 89       	ldd	r25, Y+23	; 0x17
     18a:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     18e:	dc 01       	movw	r26, r24
     190:	cb 01       	movw	r24, r22
     192:	99 8f       	std	Y+25, r25	; 0x19
     194:	88 8f       	std	Y+24, r24	; 0x18
     196:	88 8d       	ldd	r24, Y+24	; 0x18
     198:	99 8d       	ldd	r25, Y+25	; 0x19
     19a:	9d 8f       	std	Y+29, r25	; 0x1d
     19c:	8c 8f       	std	Y+28, r24	; 0x1c
     19e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     1a0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <Buzzer+0x100>
     1a6:	9d 8f       	std	Y+29, r25	; 0x1d
     1a8:	8c 8f       	std	Y+28, r24	; 0x1c
		_delay_ms(100);
		GPIO_voidSetPinValue(PORTC,PIN6,LOW);
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	66 e0       	ldi	r22, 0x06	; 6
     1ae:	82 e0       	ldi	r24, 0x02	; 2
     1b0:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     1b4:	80 e0       	ldi	r24, 0x00	; 0
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	a8 ec       	ldi	r26, 0xC8	; 200
     1ba:	b2 e4       	ldi	r27, 0x42	; 66
     1bc:	8e 83       	std	Y+6, r24	; 0x06
     1be:	9f 83       	std	Y+7, r25	; 0x07
     1c0:	a8 87       	std	Y+8, r26	; 0x08
     1c2:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	4a e7       	ldi	r20, 0x7A	; 122
     1ca:	55 e4       	ldi	r21, 0x45	; 69
     1cc:	6e 81       	ldd	r22, Y+6	; 0x06
     1ce:	7f 81       	ldd	r23, Y+7	; 0x07
     1d0:	88 85       	ldd	r24, Y+8	; 0x08
     1d2:	99 85       	ldd	r25, Y+9	; 0x09
     1d4:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     1d8:	dc 01       	movw	r26, r24
     1da:	cb 01       	movw	r24, r22
     1dc:	8a 87       	std	Y+10, r24	; 0x0a
     1de:	9b 87       	std	Y+11, r25	; 0x0b
     1e0:	ac 87       	std	Y+12, r26	; 0x0c
     1e2:	bd 87       	std	Y+13, r27	; 0x0d
	if (__tmp < 1.0)
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	40 e8       	ldi	r20, 0x80	; 128
     1ea:	5f e3       	ldi	r21, 0x3F	; 63
     1ec:	6a 85       	ldd	r22, Y+10	; 0x0a
     1ee:	7b 85       	ldd	r23, Y+11	; 0x0b
     1f0:	8c 85       	ldd	r24, Y+12	; 0x0c
     1f2:	9d 85       	ldd	r25, Y+13	; 0x0d
     1f4:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     1f8:	88 23       	and	r24, r24
     1fa:	2c f4       	brge	.+10     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
		__ticks = 1;
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	9f 87       	std	Y+15, r25	; 0x0f
     202:	8e 87       	std	Y+14, r24	; 0x0e
     204:	3f c0       	rjmp	.+126    	; 0x284 <__EEPROM_REGION_LENGTH__+0x84>
	else if (__tmp > 65535)
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	3f ef       	ldi	r19, 0xFF	; 255
     20a:	4f e7       	ldi	r20, 0x7F	; 127
     20c:	57 e4       	ldi	r21, 0x47	; 71
     20e:	6a 85       	ldd	r22, Y+10	; 0x0a
     210:	7b 85       	ldd	r23, Y+11	; 0x0b
     212:	8c 85       	ldd	r24, Y+12	; 0x0c
     214:	9d 85       	ldd	r25, Y+13	; 0x0d
     216:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     21a:	18 16       	cp	r1, r24
     21c:	4c f5       	brge	.+82     	; 0x270 <__EEPROM_REGION_LENGTH__+0x70>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	40 e2       	ldi	r20, 0x20	; 32
     224:	51 e4       	ldi	r21, 0x41	; 65
     226:	6e 81       	ldd	r22, Y+6	; 0x06
     228:	7f 81       	ldd	r23, Y+7	; 0x07
     22a:	88 85       	ldd	r24, Y+8	; 0x08
     22c:	99 85       	ldd	r25, Y+9	; 0x09
     22e:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     232:	dc 01       	movw	r26, r24
     234:	cb 01       	movw	r24, r22
     236:	bc 01       	movw	r22, r24
     238:	cd 01       	movw	r24, r26
     23a:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     23e:	dc 01       	movw	r26, r24
     240:	cb 01       	movw	r24, r22
     242:	9f 87       	std	Y+15, r25	; 0x0f
     244:	8e 87       	std	Y+14, r24	; 0x0e
     246:	0f c0       	rjmp	.+30     	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
     248:	80 e9       	ldi	r24, 0x90	; 144
     24a:	91 e0       	ldi	r25, 0x01	; 1
     24c:	99 8b       	std	Y+17, r25	; 0x11
     24e:	88 8b       	std	Y+16, r24	; 0x10
     250:	88 89       	ldd	r24, Y+16	; 0x10
     252:	99 89       	ldd	r25, Y+17	; 0x11
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	f1 f7       	brne	.-4      	; 0x254 <__EEPROM_REGION_LENGTH__+0x54>
     258:	99 8b       	std	Y+17, r25	; 0x11
     25a:	88 8b       	std	Y+16, r24	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     25c:	8e 85       	ldd	r24, Y+14	; 0x0e
     25e:	9f 85       	ldd	r25, Y+15	; 0x0f
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	9f 87       	std	Y+15, r25	; 0x0f
     264:	8e 87       	std	Y+14, r24	; 0x0e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     266:	8e 85       	ldd	r24, Y+14	; 0x0e
     268:	9f 85       	ldd	r25, Y+15	; 0x0f
     26a:	89 2b       	or	r24, r25
     26c:	69 f7       	brne	.-38     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
     26e:	14 c0       	rjmp	.+40     	; 0x298 <__EEPROM_REGION_LENGTH__+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     270:	6a 85       	ldd	r22, Y+10	; 0x0a
     272:	7b 85       	ldd	r23, Y+11	; 0x0b
     274:	8c 85       	ldd	r24, Y+12	; 0x0c
     276:	9d 85       	ldd	r25, Y+13	; 0x0d
     278:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	9f 87       	std	Y+15, r25	; 0x0f
     282:	8e 87       	std	Y+14, r24	; 0x0e
     284:	8e 85       	ldd	r24, Y+14	; 0x0e
     286:	9f 85       	ldd	r25, Y+15	; 0x0f
     288:	9b 8b       	std	Y+19, r25	; 0x13
     28a:	8a 8b       	std	Y+18, r24	; 0x12
     28c:	8a 89       	ldd	r24, Y+18	; 0x12
     28e:	9b 89       	ldd	r25, Y+19	; 0x13
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <__EEPROM_REGION_LENGTH__+0x90>
     294:	9b 8b       	std	Y+19, r25	; 0x13
     296:	8a 8b       	std	Y+18, r24	; 0x12
// Buzzer

static void Buzzer( u8 copyNumberOfRepeatations)
{
	u8 LOC_u8Counter = 0 ;
	for(LOC_u8Counter ; LOC_u8Counter<copyNumberOfRepeatations ; LOC_u8Counter++)
     298:	89 81       	ldd	r24, Y+1	; 0x01
     29a:	8f 5f       	subi	r24, 0xFF	; 255
     29c:	89 83       	std	Y+1, r24	; 0x01
     29e:	99 81       	ldd	r25, Y+1	; 0x01
     2a0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2a2:	98 17       	cp	r25, r24
     2a4:	08 f4       	brcc	.+2      	; 0x2a8 <__EEPROM_REGION_LENGTH__+0xa8>
     2a6:	0a cf       	rjmp	.-492    	; 0xbc <Buzzer+0x1a>
		GPIO_voidSetPinValue(PORTC,PIN6,HIGH);
		_delay_ms(100);
		GPIO_voidSetPinValue(PORTC,PIN6,LOW);
		_delay_ms(100);		
	}	
}
     2a8:	00 00       	nop
     2aa:	6e 96       	adiw	r28, 0x1e	; 30
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <LCD_voidMainScreen>:
	PORTC , PIN4 ,
	//D7
	PORTC , PIN5
};
static void LCD_voidMainScreen()
{
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	cd b7       	in	r28, 0x3d	; 61
     2c2:	de b7       	in	r29, 0x3e	; 62
     2c4:	2e 97       	sbiw	r28, 0x0e	; 14
     2c6:	0f b6       	in	r0, 0x3f	; 63
     2c8:	f8 94       	cli
     2ca:	de bf       	out	0x3e, r29	; 62
     2cc:	0f be       	out	0x3f, r0	; 63
     2ce:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSetCursorType(&myLCD, CURS_OFF ) ;
     2d0:	6c e0       	ldi	r22, 0x0C	; 12
     2d2:	8a eb       	ldi	r24, 0xBA	; 186
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 76 08 	call	0x10ec	; 0x10ec <LCD_voidSetCursorType>
	LCD_voidClear(&myLCD);
     2da:	8a eb       	ldi	r24, 0xBA	; 186
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 df 08 	call	0x11be	; 0x11be <LCD_voidClear>
	LCD_voidSendString(&myLCD,addString("Entrance Gate"));
     2e2:	6f e7       	ldi	r22, 0x7F	; 127
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	8a eb       	ldi	r24, 0xBA	; 186
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 44 08 	call	0x1088	; 0x1088 <LCD_voidSendString>
	LCD_voidGotoXY(&myLCD,0,1);
     2ee:	41 e0       	ldi	r20, 0x01	; 1
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	8a eb       	ldi	r24, 0xBA	; 186
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 ab 08 	call	0x1156	; 0x1156 <LCD_voidGotoXY>
	LCD_voidSendString(&myLCD,addString("Low Power Mode "));
     2fa:	6d e8       	ldi	r22, 0x8D	; 141
     2fc:	70 e0       	ldi	r23, 0x00	; 0
     2fe:	8a eb       	ldi	r24, 0xBA	; 186
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	0e 94 44 08 	call	0x1088	; 0x1088 <LCD_voidSendString>
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	a6 e1       	ldi	r26, 0x16	; 22
     30c:	b3 e4       	ldi	r27, 0x43	; 67
     30e:	89 83       	std	Y+1, r24	; 0x01
     310:	9a 83       	std	Y+2, r25	; 0x02
     312:	ab 83       	std	Y+3, r26	; 0x03
     314:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     316:	20 e0       	ldi	r18, 0x00	; 0
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	4a e7       	ldi	r20, 0x7A	; 122
     31c:	55 e4       	ldi	r21, 0x45	; 69
     31e:	69 81       	ldd	r22, Y+1	; 0x01
     320:	7a 81       	ldd	r23, Y+2	; 0x02
     322:	8b 81       	ldd	r24, Y+3	; 0x03
     324:	9c 81       	ldd	r25, Y+4	; 0x04
     326:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     32a:	dc 01       	movw	r26, r24
     32c:	cb 01       	movw	r24, r22
     32e:	8d 83       	std	Y+5, r24	; 0x05
     330:	9e 83       	std	Y+6, r25	; 0x06
     332:	af 83       	std	Y+7, r26	; 0x07
     334:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	40 e8       	ldi	r20, 0x80	; 128
     33c:	5f e3       	ldi	r21, 0x3F	; 63
     33e:	6d 81       	ldd	r22, Y+5	; 0x05
     340:	7e 81       	ldd	r23, Y+6	; 0x06
     342:	8f 81       	ldd	r24, Y+7	; 0x07
     344:	98 85       	ldd	r25, Y+8	; 0x08
     346:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     34a:	88 23       	and	r24, r24
     34c:	2c f4       	brge	.+10     	; 0x358 <LCD_voidMainScreen+0x9c>
		__ticks = 1;
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	9a 87       	std	Y+10, r25	; 0x0a
     354:	89 87       	std	Y+9, r24	; 0x09
     356:	3f c0       	rjmp	.+126    	; 0x3d6 <LCD_voidMainScreen+0x11a>
	else if (__tmp > 65535)
     358:	20 e0       	ldi	r18, 0x00	; 0
     35a:	3f ef       	ldi	r19, 0xFF	; 255
     35c:	4f e7       	ldi	r20, 0x7F	; 127
     35e:	57 e4       	ldi	r21, 0x47	; 71
     360:	6d 81       	ldd	r22, Y+5	; 0x05
     362:	7e 81       	ldd	r23, Y+6	; 0x06
     364:	8f 81       	ldd	r24, Y+7	; 0x07
     366:	98 85       	ldd	r25, Y+8	; 0x08
     368:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     36c:	18 16       	cp	r1, r24
     36e:	4c f5       	brge	.+82     	; 0x3c2 <LCD_voidMainScreen+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	40 e2       	ldi	r20, 0x20	; 32
     376:	51 e4       	ldi	r21, 0x41	; 65
     378:	69 81       	ldd	r22, Y+1	; 0x01
     37a:	7a 81       	ldd	r23, Y+2	; 0x02
     37c:	8b 81       	ldd	r24, Y+3	; 0x03
     37e:	9c 81       	ldd	r25, Y+4	; 0x04
     380:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     384:	dc 01       	movw	r26, r24
     386:	cb 01       	movw	r24, r22
     388:	bc 01       	movw	r22, r24
     38a:	cd 01       	movw	r24, r26
     38c:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     390:	dc 01       	movw	r26, r24
     392:	cb 01       	movw	r24, r22
     394:	9a 87       	std	Y+10, r25	; 0x0a
     396:	89 87       	std	Y+9, r24	; 0x09
     398:	0f c0       	rjmp	.+30     	; 0x3b8 <LCD_voidMainScreen+0xfc>
     39a:	80 e9       	ldi	r24, 0x90	; 144
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	9c 87       	std	Y+12, r25	; 0x0c
     3a0:	8b 87       	std	Y+11, r24	; 0x0b
     3a2:	8b 85       	ldd	r24, Y+11	; 0x0b
     3a4:	9c 85       	ldd	r25, Y+12	; 0x0c
     3a6:	01 97       	sbiw	r24, 0x01	; 1
     3a8:	f1 f7       	brne	.-4      	; 0x3a6 <LCD_voidMainScreen+0xea>
     3aa:	9c 87       	std	Y+12, r25	; 0x0c
     3ac:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3ae:	89 85       	ldd	r24, Y+9	; 0x09
     3b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b2:	01 97       	sbiw	r24, 0x01	; 1
     3b4:	9a 87       	std	Y+10, r25	; 0x0a
     3b6:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3b8:	89 85       	ldd	r24, Y+9	; 0x09
     3ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     3bc:	89 2b       	or	r24, r25
     3be:	69 f7       	brne	.-38     	; 0x39a <LCD_voidMainScreen+0xde>
     3c0:	14 c0       	rjmp	.+40     	; 0x3ea <LCD_voidMainScreen+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3c2:	6d 81       	ldd	r22, Y+5	; 0x05
     3c4:	7e 81       	ldd	r23, Y+6	; 0x06
     3c6:	8f 81       	ldd	r24, Y+7	; 0x07
     3c8:	98 85       	ldd	r25, Y+8	; 0x08
     3ca:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     3ce:	dc 01       	movw	r26, r24
     3d0:	cb 01       	movw	r24, r22
     3d2:	9a 87       	std	Y+10, r25	; 0x0a
     3d4:	89 87       	std	Y+9, r24	; 0x09
     3d6:	89 85       	ldd	r24, Y+9	; 0x09
     3d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     3da:	9e 87       	std	Y+14, r25	; 0x0e
     3dc:	8d 87       	std	Y+13, r24	; 0x0d
     3de:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e0:	9e 85       	ldd	r25, Y+14	; 0x0e
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	f1 f7       	brne	.-4      	; 0x3e2 <LCD_voidMainScreen+0x126>
     3e6:	9e 87       	std	Y+14, r25	; 0x0e
     3e8:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(LCD_WAITING_TIME);
	LCD_voidSetDisplayState(&myLCD,DISP_OFF);
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	8a eb       	ldi	r24, 0xBA	; 186
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	0e 94 8b 08 	call	0x1116	; 0x1116 <LCD_voidSetDisplayState>
}
     3f4:	00 00       	nop
     3f6:	2e 96       	adiw	r28, 0x0e	; 14
     3f8:	0f b6       	in	r0, 0x3f	; 63
     3fa:	f8 94       	cli
     3fc:	de bf       	out	0x3e, r29	; 62
     3fe:	0f be       	out	0x3f, r0	; 63
     400:	cd bf       	out	0x3d, r28	; 61
     402:	df 91       	pop	r29
     404:	cf 91       	pop	r28
     406:	08 95       	ret

00000408 <LCD_voidSetup>:

static void LCD_voidSetup(void)
{
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
	myLCD.LCD_SIZE_Rows = 2 ;
     410:	82 e0       	ldi	r24, 0x02	; 2
     412:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__data_end>
	myLCD.LCD_SIZE_Cols = 16 ;
     416:	80 e1       	ldi	r24, 0x10	; 16
     418:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__data_end+0x1>
	myLCD.LCD_PortPins = LCD_PortPin ;
     41c:	87 e6       	ldi	r24, 0x67	; 103
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <__data_end+0x3>
     424:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end+0x2>
	LCD_voidInit(&myLCD);
     428:	8a eb       	ldi	r24, 0xBA	; 186
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 10 04 	call	0x820	; 0x820 <LCD_voidInit>
	/*	Main Screen	*/
	LCD_voidMainScreen();
     430:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_voidMainScreen>
}
     434:	00 00       	nop
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	08 95       	ret

0000043c <LCD_voidStateScreen>:

static void LCD_voidStateScreen(u8 copy_u8Selection)
{
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	cd b7       	in	r28, 0x3d	; 61
     442:	de b7       	in	r29, 0x3e	; 62
     444:	2f 97       	sbiw	r28, 0x0f	; 15
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	f8 94       	cli
     44a:	de bf       	out	0x3e, r29	; 62
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	cd bf       	out	0x3d, r28	; 61
     450:	8f 87       	std	Y+15, r24	; 0x0f
	LCD_voidSetCursorType(&myLCD, CURS_OFF ) ;
     452:	6c e0       	ldi	r22, 0x0C	; 12
     454:	8a eb       	ldi	r24, 0xBA	; 186
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	0e 94 76 08 	call	0x10ec	; 0x10ec <LCD_voidSetCursorType>
	LCD_voidClear(&myLCD);
     45c:	8a eb       	ldi	r24, 0xBA	; 186
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	0e 94 df 08 	call	0x11be	; 0x11be <LCD_voidClear>
	LCD_voidSendString(&myLCD,addString("Entrance Gate"));
     464:	6f e7       	ldi	r22, 0x7F	; 127
     466:	70 e0       	ldi	r23, 0x00	; 0
     468:	8a eb       	ldi	r24, 0xBA	; 186
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	0e 94 44 08 	call	0x1088	; 0x1088 <LCD_voidSendString>
	LCD_voidGotoXY(&myLCD,0,1);
     470:	41 e0       	ldi	r20, 0x01	; 1
     472:	60 e0       	ldi	r22, 0x00	; 0
     474:	8a eb       	ldi	r24, 0xBA	; 186
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 ab 08 	call	0x1156	; 0x1156 <LCD_voidGotoXY>
	switch(copy_u8Selection)
     47c:	8f 85       	ldd	r24, Y+15	; 0x0f
     47e:	88 2f       	mov	r24, r24
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	00 97       	sbiw	r24, 0x00	; 0
     484:	21 f0       	breq	.+8      	; 0x48e <__stack+0x2f>
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	09 f4       	brne	.+2      	; 0x48c <__stack+0x2d>
     48a:	7f c0       	rjmp	.+254    	; 0x58a <__stack+0x12b>
		case 1 : 
		LCD_voidSendString(&myLCD,addString("Invalid ID"));
		Buzzer(3);
		LCD_voidSetDisplayState(&myLCD,DISP_OFF);
		break ; 
		default : break ; 
     48c:	8d c0       	rjmp	.+282    	; 0x5a8 <__stack+0x149>
	LCD_voidSendString(&myLCD,addString("Entrance Gate"));
	LCD_voidGotoXY(&myLCD,0,1);
	switch(copy_u8Selection)
	{
		case 0 : 
		LCD_voidSendString(&myLCD,addString("Your ID is Valid "));	
     48e:	6d e9       	ldi	r22, 0x9D	; 157
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	8a eb       	ldi	r24, 0xBA	; 186
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	0e 94 44 08 	call	0x1088	; 0x1088 <LCD_voidSendString>
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	a8 e4       	ldi	r26, 0x48	; 72
     4a0:	b3 e4       	ldi	r27, 0x43	; 67
     4a2:	89 83       	std	Y+1, r24	; 0x01
     4a4:	9a 83       	std	Y+2, r25	; 0x02
     4a6:	ab 83       	std	Y+3, r26	; 0x03
     4a8:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	4a e7       	ldi	r20, 0x7A	; 122
     4b0:	55 e4       	ldi	r21, 0x45	; 69
     4b2:	69 81       	ldd	r22, Y+1	; 0x01
     4b4:	7a 81       	ldd	r23, Y+2	; 0x02
     4b6:	8b 81       	ldd	r24, Y+3	; 0x03
     4b8:	9c 81       	ldd	r25, Y+4	; 0x04
     4ba:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     4be:	dc 01       	movw	r26, r24
     4c0:	cb 01       	movw	r24, r22
     4c2:	8d 83       	std	Y+5, r24	; 0x05
     4c4:	9e 83       	std	Y+6, r25	; 0x06
     4c6:	af 83       	std	Y+7, r26	; 0x07
     4c8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	40 e8       	ldi	r20, 0x80	; 128
     4d0:	5f e3       	ldi	r21, 0x3F	; 63
     4d2:	6d 81       	ldd	r22, Y+5	; 0x05
     4d4:	7e 81       	ldd	r23, Y+6	; 0x06
     4d6:	8f 81       	ldd	r24, Y+7	; 0x07
     4d8:	98 85       	ldd	r25, Y+8	; 0x08
     4da:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     4de:	88 23       	and	r24, r24
     4e0:	2c f4       	brge	.+10     	; 0x4ec <__stack+0x8d>
		__ticks = 1;
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	9a 87       	std	Y+10, r25	; 0x0a
     4e8:	89 87       	std	Y+9, r24	; 0x09
     4ea:	3f c0       	rjmp	.+126    	; 0x56a <__stack+0x10b>
	else if (__tmp > 65535)
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	3f ef       	ldi	r19, 0xFF	; 255
     4f0:	4f e7       	ldi	r20, 0x7F	; 127
     4f2:	57 e4       	ldi	r21, 0x47	; 71
     4f4:	6d 81       	ldd	r22, Y+5	; 0x05
     4f6:	7e 81       	ldd	r23, Y+6	; 0x06
     4f8:	8f 81       	ldd	r24, Y+7	; 0x07
     4fa:	98 85       	ldd	r25, Y+8	; 0x08
     4fc:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     500:	18 16       	cp	r1, r24
     502:	4c f5       	brge	.+82     	; 0x556 <__stack+0xf7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	40 e2       	ldi	r20, 0x20	; 32
     50a:	51 e4       	ldi	r21, 0x41	; 65
     50c:	69 81       	ldd	r22, Y+1	; 0x01
     50e:	7a 81       	ldd	r23, Y+2	; 0x02
     510:	8b 81       	ldd	r24, Y+3	; 0x03
     512:	9c 81       	ldd	r25, Y+4	; 0x04
     514:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     518:	dc 01       	movw	r26, r24
     51a:	cb 01       	movw	r24, r22
     51c:	bc 01       	movw	r22, r24
     51e:	cd 01       	movw	r24, r26
     520:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     524:	dc 01       	movw	r26, r24
     526:	cb 01       	movw	r24, r22
     528:	9a 87       	std	Y+10, r25	; 0x0a
     52a:	89 87       	std	Y+9, r24	; 0x09
     52c:	0f c0       	rjmp	.+30     	; 0x54c <__stack+0xed>
     52e:	80 e9       	ldi	r24, 0x90	; 144
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	9c 87       	std	Y+12, r25	; 0x0c
     534:	8b 87       	std	Y+11, r24	; 0x0b
     536:	8b 85       	ldd	r24, Y+11	; 0x0b
     538:	9c 85       	ldd	r25, Y+12	; 0x0c
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <__stack+0xdb>
     53e:	9c 87       	std	Y+12, r25	; 0x0c
     540:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     542:	89 85       	ldd	r24, Y+9	; 0x09
     544:	9a 85       	ldd	r25, Y+10	; 0x0a
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	9a 87       	std	Y+10, r25	; 0x0a
     54a:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     54c:	89 85       	ldd	r24, Y+9	; 0x09
     54e:	9a 85       	ldd	r25, Y+10	; 0x0a
     550:	89 2b       	or	r24, r25
     552:	69 f7       	brne	.-38     	; 0x52e <__stack+0xcf>
     554:	14 c0       	rjmp	.+40     	; 0x57e <__stack+0x11f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     556:	6d 81       	ldd	r22, Y+5	; 0x05
     558:	7e 81       	ldd	r23, Y+6	; 0x06
     55a:	8f 81       	ldd	r24, Y+7	; 0x07
     55c:	98 85       	ldd	r25, Y+8	; 0x08
     55e:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     562:	dc 01       	movw	r26, r24
     564:	cb 01       	movw	r24, r22
     566:	9a 87       	std	Y+10, r25	; 0x0a
     568:	89 87       	std	Y+9, r24	; 0x09
     56a:	89 85       	ldd	r24, Y+9	; 0x09
     56c:	9a 85       	ldd	r25, Y+10	; 0x0a
     56e:	9e 87       	std	Y+14, r25	; 0x0e
     570:	8d 87       	std	Y+13, r24	; 0x0d
     572:	8d 85       	ldd	r24, Y+13	; 0x0d
     574:	9e 85       	ldd	r25, Y+14	; 0x0e
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <__stack+0x117>
     57a:	9e 87       	std	Y+14, r25	; 0x0e
     57c:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(200);
		LCD_voidSetDisplayState(&myLCD,DISP_OFF);
     57e:	60 e0       	ldi	r22, 0x00	; 0
     580:	8a eb       	ldi	r24, 0xBA	; 186
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	0e 94 8b 08 	call	0x1116	; 0x1116 <LCD_voidSetDisplayState>
		break ; 
     588:	0f c0       	rjmp	.+30     	; 0x5a8 <__stack+0x149>
		case 1 : 
		LCD_voidSendString(&myLCD,addString("Invalid ID"));
     58a:	6f ea       	ldi	r22, 0xAF	; 175
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	8a eb       	ldi	r24, 0xBA	; 186
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 44 08 	call	0x1088	; 0x1088 <LCD_voidSendString>
		Buzzer(3);
     596:	83 e0       	ldi	r24, 0x03	; 3
     598:	0e 94 51 00 	call	0xa2	; 0xa2 <Buzzer>
		LCD_voidSetDisplayState(&myLCD,DISP_OFF);
     59c:	60 e0       	ldi	r22, 0x00	; 0
     59e:	8a eb       	ldi	r24, 0xBA	; 186
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	0e 94 8b 08 	call	0x1116	; 0x1116 <LCD_voidSetDisplayState>
		break ; 
     5a6:	00 00       	nop
		default : break ; 
	}

}
     5a8:	00 00       	nop
     5aa:	2f 96       	adiw	r28, 0x0f	; 15
     5ac:	0f b6       	in	r0, 0x3f	; 63
     5ae:	f8 94       	cli
     5b0:	de bf       	out	0x3e, r29	; 62
     5b2:	0f be       	out	0x3f, r0	; 63
     5b4:	cd bf       	out	0x3d, r28	; 61
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <ECU1_Entance_APP_SETUP>:
*******************************************************************************/


/*				MAIN FCNs				*/
void ECU1_Entance_APP_SETUP(void) 
{
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	cd b7       	in	r28, 0x3d	; 61
     5c2:	de b7       	in	r29, 0x3e	; 62
	/*	MCAL INIT	*/
	// GPIO 
	GPIO_voidInit(); 
     5c4:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <GPIO_voidInit>
	GPIO_voidSetPinDirection(PORTA,PIN0,OUTPUT); //	For Trigger Master 
     5c8:	41 e0       	ldi	r20, 0x01	; 1
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
	GPIO_voidSetPinDirection(PORTC,PIN6,OUTPUT); // For Buzzer
     5d2:	41 e0       	ldi	r20, 0x01	; 1
     5d4:	66 e0       	ldi	r22, 0x06	; 6
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>

	
	// SPI
	GPIO_voidSPI_SlaveInit();
     5dc:	0e 94 07 12 	call	0x240e	; 0x240e <GPIO_voidSPI_SlaveInit>
	MCAL_SPI_voidInit(&mySPI);
     5e0:	81 e6       	ldi	r24, 0x61	; 97
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	0e 94 3b 14 	call	0x2876	; 0x2876 <MCAL_SPI_voidInit>
	
	/*	HAL Init	*/
	PIR_voidInit(); 
     5e8:	0e 94 8d 0c 	call	0x191a	; 0x191a <PIR_voidInit>
	
	RFID_voidInit();
     5ec:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <RFID_voidInit>
	RFID_voidGetData_Asynch(RFID_Callback);
     5f0:	8a e3       	ldi	r24, 0x3A	; 58
     5f2:	93 e0       	ldi	r25, 0x03	; 3
     5f4:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <RFID_voidGetData_Asynch>
	
	GateControl_voidInit(); 
     5f8:	0e 94 cc 03 	call	0x798	; 0x798 <GateControl_voidInit>
	
	LCD_voidSetup();
     5fc:	0e 94 04 02 	call	0x408	; 0x408 <LCD_voidSetup>
	
	
	/*	Global Interrupt	*/
	ENABLE_GLOBAL_INTERRUPT();
     600:	8f e5       	ldi	r24, 0x5F	; 95
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	2f e5       	ldi	r18, 0x5F	; 95
     606:	30 e0       	ldi	r19, 0x00	; 0
     608:	f9 01       	movw	r30, r18
     60a:	20 81       	ld	r18, Z
     60c:	20 68       	ori	r18, 0x80	; 128
     60e:	fc 01       	movw	r30, r24
     610:	20 83       	st	Z, r18

	
}
     612:	00 00       	nop
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	08 95       	ret

0000061a <ECU1_Entance_APP_LOOP>:
 #include<util/delay.h>
 #else 
#endif

void ECU1_Entance_APP_LOOP(void) 
{
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	cd b7       	in	r28, 0x3d	; 61
     620:	de b7       	in	r29, 0x3e	; 62
	// Stuck Here Until Get Valid ID
	while(Glob_ID_Valid !=  VALID_ID)
     622:	02 c0       	rjmp	.+4      	; 0x628 <ECU1_Entance_APP_LOOP+0xe>
	{
		GateControl_voidCloseGate() ;
     624:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <GateControl_voidCloseGate>
#endif

void ECU1_Entance_APP_LOOP(void) 
{
	// Stuck Here Until Get Valid ID
	while(Glob_ID_Valid !=  VALID_ID)
     628:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     62c:	81 33       	cpi	r24, 0x31	; 49
     62e:	d1 f7       	brne	.-12     	; 0x624 <ECU1_Entance_APP_LOOP+0xa>
		GateControl_voidCloseGate() ;
	}
	// If Glob_ID_Valid == VALID_ID
	{
		/* Disable Interrupts	*/
		DISABLE_GLOBAL_INTERRUPT();
     630:	8f e5       	ldi	r24, 0x5F	; 95
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	2f e5       	ldi	r18, 0x5F	; 95
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	f9 01       	movw	r30, r18
     63a:	20 81       	ld	r18, Z
     63c:	2f 77       	andi	r18, 0x7F	; 127
     63e:	fc 01       	movw	r30, r24
     640:	20 83       	st	Z, r18
		
		GateControl_voidOpenGate() ; 
     642:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <GateControl_voidOpenGate>
		while(PIR_u8ExistMovement() == 1) ; 
     646:	00 00       	nop
     648:	0e 94 9a 0c 	call	0x1934	; 0x1934 <PIR_u8ExistMovement>
     64c:	81 30       	cpi	r24, 0x01	; 1
     64e:	e1 f3       	breq	.-8      	; 0x648 <ECU1_Entance_APP_LOOP+0x2e>
		Glob_ID_Valid =  NOT_VALID_ID ; 
     650:	80 e3       	ldi	r24, 0x30	; 48
     652:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		/*	Clear Any Pending Flag of USART	*/
		MCAL_voidClearFlags();
     656:	0e 94 1d 16 	call	0x2c3a	; 0x2c3a <MCAL_voidClearFlags>
		/* Renable Interrupts	*/ 
		ENABLE_GLOBAL_INTERRUPT();
     65a:	8f e5       	ldi	r24, 0x5F	; 95
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	2f e5       	ldi	r18, 0x5F	; 95
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	f9 01       	movw	r30, r18
     664:	20 81       	ld	r18, Z
     666:	20 68       	ori	r18, 0x80	; 128
     668:	fc 01       	movw	r30, r24
     66a:	20 83       	st	Z, r18
	}


}
     66c:	00 00       	nop
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	08 95       	ret

00000674 <RFID_Callback>:
*******************************************************************************/



void RFID_Callback(u8 *ptr_Name , u8 *ptr_ID)
{
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	00 d0       	rcall	.+0      	; 0x67a <RFID_Callback+0x6>
     67a:	00 d0       	rcall	.+0      	; 0x67c <RFID_Callback+0x8>
     67c:	cd b7       	in	r28, 0x3d	; 61
     67e:	de b7       	in	r29, 0x3e	; 62
     680:	9a 83       	std	Y+2, r25	; 0x02
     682:	89 83       	std	Y+1, r24	; 0x01
     684:	7c 83       	std	Y+4, r23	; 0x04
     686:	6b 83       	std	Y+3, r22	; 0x03
			i++ ; 
		}
		 #else 
	#endif 
	
	APP_voidSendDataThroughSPI(ptr_Name , ptr_ID) ; 
     688:	2b 81       	ldd	r18, Y+3	; 0x03
     68a:	3c 81       	ldd	r19, Y+4	; 0x04
     68c:	89 81       	ldd	r24, Y+1	; 0x01
     68e:	9a 81       	ldd	r25, Y+2	; 0x02
     690:	b9 01       	movw	r22, r18
     692:	0e 94 53 03 	call	0x6a6	; 0x6a6 <APP_voidSendDataThroughSPI>
}
     696:	00 00       	nop
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0
     6a0:	df 91       	pop	r29
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <APP_voidSendDataThroughSPI>:
void APP_voidSendDataThroughSPI(u8 *ptr_Name , u8 *ptr_ID)
{
     6a6:	cf 93       	push	r28
     6a8:	df 93       	push	r29
     6aa:	00 d0       	rcall	.+0      	; 0x6ac <APP_voidSendDataThroughSPI+0x6>
     6ac:	00 d0       	rcall	.+0      	; 0x6ae <APP_voidSendDataThroughSPI+0x8>
     6ae:	cd b7       	in	r28, 0x3d	; 61
     6b0:	de b7       	in	r29, 0x3e	; 62
     6b2:	9a 83       	std	Y+2, r25	; 0x02
     6b4:	89 83       	std	Y+1, r24	; 0x01
     6b6:	7c 83       	std	Y+4, r23	; 0x04
     6b8:	6b 83       	std	Y+3, r22	; 0x03
	SPI_START_SEND();
     6ba:	60 e0       	ldi	r22, 0x00	; 0
     6bc:	80 e0       	ldi	r24, 0x00	; 0
     6be:	0e 94 8f 11 	call	0x231e	; 0x231e <GPIO_voidTogglePin>

	
	APP_voidSendStringThroughSPI(ptr_Name) ; 
     6c2:	89 81       	ldd	r24, Y+1	; 0x01
     6c4:	9a 81       	ldd	r25, Y+2	; 0x02
     6c6:	0e 94 99 03 	call	0x732	; 0x732 <APP_voidSendStringThroughSPI>
	APP_voidSendStringThroughSPI(ptr_ID) ;
     6ca:	8b 81       	ldd	r24, Y+3	; 0x03
     6cc:	9c 81       	ldd	r25, Y+4	; 0x04
     6ce:	0e 94 99 03 	call	0x732	; 0x732 <APP_voidSendStringThroughSPI>
	APP_IsValidID();	  
     6d2:	0e 94 73 03 	call	0x6e6	; 0x6e6 <APP_IsValidID>
}
     6d6:	00 00       	nop
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	0f 90       	pop	r0
     6de:	0f 90       	pop	r0
     6e0:	df 91       	pop	r29
     6e2:	cf 91       	pop	r28
     6e4:	08 95       	ret

000006e6 <APP_IsValidID>:

void APP_IsValidID(void)
{
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	1f 92       	push	r1
     6ec:	cd b7       	in	r28, 0x3d	; 61
     6ee:	de b7       	in	r29, 0x3e	; 62
	ID_Check_t LOC_Result = NOT_VALID_ID ; 
     6f0:	80 e3       	ldi	r24, 0x30	; 48
     6f2:	89 83       	std	Y+1, r24	; 0x01
	do
	{
		MCAL_SPI_voidByteExchangeAsynch(VALID_ID_SYMBOL , &LOC_Result);
     6f4:	ce 01       	movw	r24, r28
     6f6:	01 96       	adiw	r24, 0x01	; 1
     6f8:	bc 01       	movw	r22, r24
     6fa:	84 e2       	ldi	r24, 0x24	; 36
     6fc:	0e 94 8a 14 	call	0x2914	; 0x2914 <MCAL_SPI_voidByteExchangeAsynch>
	}while(!( LOC_Result == '1' || LOC_Result == '0') );
     700:	89 81       	ldd	r24, Y+1	; 0x01
     702:	81 33       	cpi	r24, 0x31	; 49
     704:	19 f0       	breq	.+6      	; 0x70c <APP_IsValidID+0x26>
     706:	89 81       	ldd	r24, Y+1	; 0x01
     708:	80 33       	cpi	r24, 0x30	; 48
     70a:	a1 f7       	brne	.-24     	; 0x6f4 <APP_IsValidID+0xe>
	Glob_ID_Valid = LOC_Result ; 
     70c:	89 81       	ldd	r24, Y+1	; 0x01
     70e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	(Glob_ID_Valid == VALID_ID) ? (LCD_voidStateScreen(0)) : (LCD_voidStateScreen(1)) ; 
     712:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     716:	81 33       	cpi	r24, 0x31	; 49
     718:	21 f4       	brne	.+8      	; 0x722 <APP_IsValidID+0x3c>
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	0e 94 1e 02 	call	0x43c	; 0x43c <LCD_voidStateScreen>

}
     720:	03 c0       	rjmp	.+6      	; 0x728 <APP_IsValidID+0x42>
	do
	{
		MCAL_SPI_voidByteExchangeAsynch(VALID_ID_SYMBOL , &LOC_Result);
	}while(!( LOC_Result == '1' || LOC_Result == '0') );
	Glob_ID_Valid = LOC_Result ; 
	(Glob_ID_Valid == VALID_ID) ? (LCD_voidStateScreen(0)) : (LCD_voidStateScreen(1)) ; 
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	0e 94 1e 02 	call	0x43c	; 0x43c <LCD_voidStateScreen>

}
     728:	00 00       	nop
     72a:	0f 90       	pop	r0
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	08 95       	ret

00000732 <APP_voidSendStringThroughSPI>:
void APP_voidSendStringThroughSPI(u8 *ptr_String)
{
     732:	cf 93       	push	r28
     734:	df 93       	push	r29
     736:	00 d0       	rcall	.+0      	; 0x738 <APP_voidSendStringThroughSPI+0x6>
     738:	00 d0       	rcall	.+0      	; 0x73a <APP_voidSendStringThroughSPI+0x8>
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
     73e:	9c 83       	std	Y+4, r25	; 0x04
     740:	8b 83       	std	Y+3, r24	; 0x03
	u8 LOC_u8DummyData = 0 ; 
     742:	1a 82       	std	Y+2, r1	; 0x02
	u8 i = 0;
     744:	19 82       	std	Y+1, r1	; 0x01
	while(ptr_String[i] != '\0' )
     746:	15 c0       	rjmp	.+42     	; 0x772 <APP_voidSendStringThroughSPI+0x40>
	{
		do
		{
			MCAL_SPI_voidByteExchangeAsynch(ptr_String[i] , &LOC_u8DummyData);
     748:	89 81       	ldd	r24, Y+1	; 0x01
     74a:	88 2f       	mov	r24, r24
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	2b 81       	ldd	r18, Y+3	; 0x03
     750:	3c 81       	ldd	r19, Y+4	; 0x04
     752:	82 0f       	add	r24, r18
     754:	93 1f       	adc	r25, r19
     756:	fc 01       	movw	r30, r24
     758:	20 81       	ld	r18, Z
     75a:	ce 01       	movw	r24, r28
     75c:	02 96       	adiw	r24, 0x02	; 2
     75e:	bc 01       	movw	r22, r24
     760:	82 2f       	mov	r24, r18
     762:	0e 94 8a 14 	call	0x2914	; 0x2914 <MCAL_SPI_voidByteExchangeAsynch>
				MCAL_USART_TxByteSynch('\n') ;
				MCAL_USART_TxByteSynch('\r') ;
			 #else 

			#endif
		}while(LOC_u8DummyData != MASTER_ACK);
     766:	8a 81       	ldd	r24, Y+2	; 0x02
     768:	8b 32       	cpi	r24, 0x2B	; 43
     76a:	71 f7       	brne	.-36     	; 0x748 <APP_voidSendStringThroughSPI+0x16>
		i++ ; 
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	8f 5f       	subi	r24, 0xFF	; 255
     770:	89 83       	std	Y+1, r24	; 0x01
}
void APP_voidSendStringThroughSPI(u8 *ptr_String)
{
	u8 LOC_u8DummyData = 0 ; 
	u8 i = 0;
	while(ptr_String[i] != '\0' )
     772:	89 81       	ldd	r24, Y+1	; 0x01
     774:	88 2f       	mov	r24, r24
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	2b 81       	ldd	r18, Y+3	; 0x03
     77a:	3c 81       	ldd	r19, Y+4	; 0x04
     77c:	82 0f       	add	r24, r18
     77e:	93 1f       	adc	r25, r19
     780:	fc 01       	movw	r30, r24
     782:	80 81       	ld	r24, Z
     784:	88 23       	and	r24, r24
     786:	01 f7       	brne	.-64     	; 0x748 <APP_voidSendStringThroughSPI+0x16>

			#endif
		}while(LOC_u8DummyData != MASTER_ACK);
		i++ ; 
	}
}
     788:	00 00       	nop
     78a:	0f 90       	pop	r0
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	0f 90       	pop	r0
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	08 95       	ret

00000798 <GateControl_voidInit>:
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
     79c:	cd b7       	in	r28, 0x3d	; 61
     79e:	de b7       	in	r29, 0x3e	; 62
     7a0:	83 e7       	ldi	r24, 0x73	; 115
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	0e 94 23 12 	call	0x2446	; 0x2446 <PWM_voidInit>
     7a8:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     7ac:	80 7a       	andi	r24, 0xA0	; 160
     7ae:	68 2f       	mov	r22, r24
     7b0:	83 e7       	ldi	r24, 0x73	; 115
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	0e 94 9a 13 	call	0x2734	; 0x2734 <PWM_voidSetOCPin>
     7b8:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     7bc:	87 70       	andi	r24, 0x07	; 7
     7be:	41 e0       	ldi	r20, 0x01	; 1
     7c0:	68 2f       	mov	r22, r24
     7c2:	83 e0       	ldi	r24, 0x03	; 3
     7c4:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     7c8:	00 00       	nop
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	08 95       	ret

000007d0 <GateControl_voidOpenGate>:
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	cd b7       	in	r28, 0x3d	; 61
     7d6:	de b7       	in	r29, 0x3e	; 62
     7d8:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     7dc:	80 7a       	andi	r24, 0xA0	; 160
     7de:	2c eb       	ldi	r18, 0xBC	; 188
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	43 ec       	ldi	r20, 0xC3	; 195
     7e4:	59 e0       	ldi	r21, 0x09	; 9
     7e6:	68 2f       	mov	r22, r24
     7e8:	83 e7       	ldi	r24, 0x73	; 115
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	0e 94 da 13 	call	0x27b4	; 0x27b4 <PWM_voidPhaseFrequencyCorrectSetValues>
     7f0:	00 00       	nop
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	08 95       	ret

000007f8 <GateControl_voidCloseGate>:
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	cd b7       	in	r28, 0x3d	; 61
     7fe:	de b7       	in	r29, 0x3e	; 62
     800:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     804:	80 7a       	andi	r24, 0xA0	; 160
     806:	2d e7       	ldi	r18, 0x7D	; 125
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	43 ec       	ldi	r20, 0xC3	; 195
     80c:	59 e0       	ldi	r21, 0x09	; 9
     80e:	68 2f       	mov	r22, r24
     810:	83 e7       	ldi	r24, 0x73	; 115
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	0e 94 da 13 	call	0x27b4	; 0x27b4 <PWM_voidPhaseFrequencyCorrectSetValues>
     818:	00 00       	nop
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	08 95       	ret

00000820 <LCD_voidInit>:
{

	LCD_voidSendChar(ptrLCD,storedCharIndex);
	
	
}
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
     828:	60 97       	sbiw	r28, 0x10	; 16
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	de bf       	out	0x3e, r29	; 62
     830:	0f be       	out	0x3f, r0	; 63
     832:	cd bf       	out	0x3d, r28	; 61
     834:	98 8b       	std	Y+16, r25	; 0x10
     836:	8f 87       	std	Y+15, r24	; 0x0f
     838:	8f 85       	ldd	r24, Y+15	; 0x0f
     83a:	98 89       	ldd	r25, Y+16	; 0x10
     83c:	fc 01       	movw	r30, r24
     83e:	82 81       	ldd	r24, Z+2	; 0x02
     840:	93 81       	ldd	r25, Z+3	; 0x03
     842:	05 96       	adiw	r24, 0x05	; 5
     844:	fc 01       	movw	r30, r24
     846:	20 81       	ld	r18, Z
     848:	8f 85       	ldd	r24, Y+15	; 0x0f
     84a:	98 89       	ldd	r25, Y+16	; 0x10
     84c:	fc 01       	movw	r30, r24
     84e:	82 81       	ldd	r24, Z+2	; 0x02
     850:	93 81       	ldd	r25, Z+3	; 0x03
     852:	04 96       	adiw	r24, 0x04	; 4
     854:	fc 01       	movw	r30, r24
     856:	80 81       	ld	r24, Z
     858:	41 e0       	ldi	r20, 0x01	; 1
     85a:	62 2f       	mov	r22, r18
     85c:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     860:	8f 85       	ldd	r24, Y+15	; 0x0f
     862:	98 89       	ldd	r25, Y+16	; 0x10
     864:	fc 01       	movw	r30, r24
     866:	82 81       	ldd	r24, Z+2	; 0x02
     868:	93 81       	ldd	r25, Z+3	; 0x03
     86a:	07 96       	adiw	r24, 0x07	; 7
     86c:	fc 01       	movw	r30, r24
     86e:	20 81       	ld	r18, Z
     870:	8f 85       	ldd	r24, Y+15	; 0x0f
     872:	98 89       	ldd	r25, Y+16	; 0x10
     874:	fc 01       	movw	r30, r24
     876:	82 81       	ldd	r24, Z+2	; 0x02
     878:	93 81       	ldd	r25, Z+3	; 0x03
     87a:	06 96       	adiw	r24, 0x06	; 6
     87c:	fc 01       	movw	r30, r24
     87e:	80 81       	ld	r24, Z
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	62 2f       	mov	r22, r18
     884:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     888:	8f 85       	ldd	r24, Y+15	; 0x0f
     88a:	98 89       	ldd	r25, Y+16	; 0x10
     88c:	fc 01       	movw	r30, r24
     88e:	82 81       	ldd	r24, Z+2	; 0x02
     890:	93 81       	ldd	r25, Z+3	; 0x03
     892:	09 96       	adiw	r24, 0x09	; 9
     894:	fc 01       	movw	r30, r24
     896:	20 81       	ld	r18, Z
     898:	8f 85       	ldd	r24, Y+15	; 0x0f
     89a:	98 89       	ldd	r25, Y+16	; 0x10
     89c:	fc 01       	movw	r30, r24
     89e:	82 81       	ldd	r24, Z+2	; 0x02
     8a0:	93 81       	ldd	r25, Z+3	; 0x03
     8a2:	08 96       	adiw	r24, 0x08	; 8
     8a4:	fc 01       	movw	r30, r24
     8a6:	80 81       	ld	r24, Z
     8a8:	41 e0       	ldi	r20, 0x01	; 1
     8aa:	62 2f       	mov	r22, r18
     8ac:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     8b0:	8f 85       	ldd	r24, Y+15	; 0x0f
     8b2:	98 89       	ldd	r25, Y+16	; 0x10
     8b4:	fc 01       	movw	r30, r24
     8b6:	82 81       	ldd	r24, Z+2	; 0x02
     8b8:	93 81       	ldd	r25, Z+3	; 0x03
     8ba:	0b 96       	adiw	r24, 0x0b	; 11
     8bc:	fc 01       	movw	r30, r24
     8be:	20 81       	ld	r18, Z
     8c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     8c2:	98 89       	ldd	r25, Y+16	; 0x10
     8c4:	fc 01       	movw	r30, r24
     8c6:	82 81       	ldd	r24, Z+2	; 0x02
     8c8:	93 81       	ldd	r25, Z+3	; 0x03
     8ca:	0a 96       	adiw	r24, 0x0a	; 10
     8cc:	fc 01       	movw	r30, r24
     8ce:	80 81       	ld	r24, Z
     8d0:	41 e0       	ldi	r20, 0x01	; 1
     8d2:	62 2f       	mov	r22, r18
     8d4:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     8d8:	8f 85       	ldd	r24, Y+15	; 0x0f
     8da:	98 89       	ldd	r25, Y+16	; 0x10
     8dc:	fc 01       	movw	r30, r24
     8de:	82 81       	ldd	r24, Z+2	; 0x02
     8e0:	93 81       	ldd	r25, Z+3	; 0x03
     8e2:	03 96       	adiw	r24, 0x03	; 3
     8e4:	fc 01       	movw	r30, r24
     8e6:	20 81       	ld	r18, Z
     8e8:	8f 85       	ldd	r24, Y+15	; 0x0f
     8ea:	98 89       	ldd	r25, Y+16	; 0x10
     8ec:	fc 01       	movw	r30, r24
     8ee:	82 81       	ldd	r24, Z+2	; 0x02
     8f0:	93 81       	ldd	r25, Z+3	; 0x03
     8f2:	02 96       	adiw	r24, 0x02	; 2
     8f4:	fc 01       	movw	r30, r24
     8f6:	80 81       	ld	r24, Z
     8f8:	41 e0       	ldi	r20, 0x01	; 1
     8fa:	62 2f       	mov	r22, r18
     8fc:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     900:	8f 85       	ldd	r24, Y+15	; 0x0f
     902:	98 89       	ldd	r25, Y+16	; 0x10
     904:	fc 01       	movw	r30, r24
     906:	82 81       	ldd	r24, Z+2	; 0x02
     908:	93 81       	ldd	r25, Z+3	; 0x03
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	fc 01       	movw	r30, r24
     90e:	20 81       	ld	r18, Z
     910:	8f 85       	ldd	r24, Y+15	; 0x0f
     912:	98 89       	ldd	r25, Y+16	; 0x10
     914:	fc 01       	movw	r30, r24
     916:	82 81       	ldd	r24, Z+2	; 0x02
     918:	93 81       	ldd	r25, Z+3	; 0x03
     91a:	fc 01       	movw	r30, r24
     91c:	80 81       	ld	r24, Z
     91e:	41 e0       	ldi	r20, 0x01	; 1
     920:	62 2f       	mov	r22, r18
     922:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
     926:	8f 85       	ldd	r24, Y+15	; 0x0f
     928:	98 89       	ldd	r25, Y+16	; 0x10
     92a:	62 e0       	ldi	r22, 0x02	; 2
     92c:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
     930:	8f 85       	ldd	r24, Y+15	; 0x0f
     932:	98 89       	ldd	r25, Y+16	; 0x10
     934:	68 e2       	ldi	r22, 0x28	; 40
     936:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
     93a:	8f 85       	ldd	r24, Y+15	; 0x0f
     93c:	98 89       	ldd	r25, Y+16	; 0x10
     93e:	61 e0       	ldi	r22, 0x01	; 1
     940:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
     944:	8f 85       	ldd	r24, Y+15	; 0x0f
     946:	98 89       	ldd	r25, Y+16	; 0x10
     948:	6f e0       	ldi	r22, 0x0F	; 15
     94a:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
     94e:	8f 85       	ldd	r24, Y+15	; 0x0f
     950:	98 89       	ldd	r25, Y+16	; 0x10
     952:	60 e8       	ldi	r22, 0x80	; 128
     954:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	a0 e0       	ldi	r26, 0x00	; 0
     95e:	b0 e4       	ldi	r27, 0x40	; 64
     960:	89 83       	std	Y+1, r24	; 0x01
     962:	9a 83       	std	Y+2, r25	; 0x02
     964:	ab 83       	std	Y+3, r26	; 0x03
     966:	bc 83       	std	Y+4, r27	; 0x04
     968:	20 e0       	ldi	r18, 0x00	; 0
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	4a e7       	ldi	r20, 0x7A	; 122
     96e:	55 e4       	ldi	r21, 0x45	; 69
     970:	69 81       	ldd	r22, Y+1	; 0x01
     972:	7a 81       	ldd	r23, Y+2	; 0x02
     974:	8b 81       	ldd	r24, Y+3	; 0x03
     976:	9c 81       	ldd	r25, Y+4	; 0x04
     978:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     97c:	dc 01       	movw	r26, r24
     97e:	cb 01       	movw	r24, r22
     980:	8d 83       	std	Y+5, r24	; 0x05
     982:	9e 83       	std	Y+6, r25	; 0x06
     984:	af 83       	std	Y+7, r26	; 0x07
     986:	b8 87       	std	Y+8, r27	; 0x08
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	40 e8       	ldi	r20, 0x80	; 128
     98e:	5f e3       	ldi	r21, 0x3F	; 63
     990:	6d 81       	ldd	r22, Y+5	; 0x05
     992:	7e 81       	ldd	r23, Y+6	; 0x06
     994:	8f 81       	ldd	r24, Y+7	; 0x07
     996:	98 85       	ldd	r25, Y+8	; 0x08
     998:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     99c:	88 23       	and	r24, r24
     99e:	2c f4       	brge	.+10     	; 0x9aa <LCD_voidInit+0x18a>
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	9a 87       	std	Y+10, r25	; 0x0a
     9a6:	89 87       	std	Y+9, r24	; 0x09
     9a8:	3f c0       	rjmp	.+126    	; 0xa28 <LCD_voidInit+0x208>
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	3f ef       	ldi	r19, 0xFF	; 255
     9ae:	4f e7       	ldi	r20, 0x7F	; 127
     9b0:	57 e4       	ldi	r21, 0x47	; 71
     9b2:	6d 81       	ldd	r22, Y+5	; 0x05
     9b4:	7e 81       	ldd	r23, Y+6	; 0x06
     9b6:	8f 81       	ldd	r24, Y+7	; 0x07
     9b8:	98 85       	ldd	r25, Y+8	; 0x08
     9ba:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     9be:	18 16       	cp	r1, r24
     9c0:	4c f5       	brge	.+82     	; 0xa14 <LCD_voidInit+0x1f4>
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	40 e2       	ldi	r20, 0x20	; 32
     9c8:	51 e4       	ldi	r21, 0x41	; 65
     9ca:	69 81       	ldd	r22, Y+1	; 0x01
     9cc:	7a 81       	ldd	r23, Y+2	; 0x02
     9ce:	8b 81       	ldd	r24, Y+3	; 0x03
     9d0:	9c 81       	ldd	r25, Y+4	; 0x04
     9d2:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     9d6:	dc 01       	movw	r26, r24
     9d8:	cb 01       	movw	r24, r22
     9da:	bc 01       	movw	r22, r24
     9dc:	cd 01       	movw	r24, r26
     9de:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     9e2:	dc 01       	movw	r26, r24
     9e4:	cb 01       	movw	r24, r22
     9e6:	9a 87       	std	Y+10, r25	; 0x0a
     9e8:	89 87       	std	Y+9, r24	; 0x09
     9ea:	0f c0       	rjmp	.+30     	; 0xa0a <LCD_voidInit+0x1ea>
     9ec:	80 e9       	ldi	r24, 0x90	; 144
     9ee:	91 e0       	ldi	r25, 0x01	; 1
     9f0:	9c 87       	std	Y+12, r25	; 0x0c
     9f2:	8b 87       	std	Y+11, r24	; 0x0b
     9f4:	8b 85       	ldd	r24, Y+11	; 0x0b
     9f6:	9c 85       	ldd	r25, Y+12	; 0x0c
     9f8:	01 97       	sbiw	r24, 0x01	; 1
     9fa:	f1 f7       	brne	.-4      	; 0x9f8 <LCD_voidInit+0x1d8>
     9fc:	9c 87       	std	Y+12, r25	; 0x0c
     9fe:	8b 87       	std	Y+11, r24	; 0x0b
     a00:	89 85       	ldd	r24, Y+9	; 0x09
     a02:	9a 85       	ldd	r25, Y+10	; 0x0a
     a04:	01 97       	sbiw	r24, 0x01	; 1
     a06:	9a 87       	std	Y+10, r25	; 0x0a
     a08:	89 87       	std	Y+9, r24	; 0x09
     a0a:	89 85       	ldd	r24, Y+9	; 0x09
     a0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     a0e:	89 2b       	or	r24, r25
     a10:	69 f7       	brne	.-38     	; 0x9ec <LCD_voidInit+0x1cc>
     a12:	14 c0       	rjmp	.+40     	; 0xa3c <LCD_voidInit+0x21c>
     a14:	6d 81       	ldd	r22, Y+5	; 0x05
     a16:	7e 81       	ldd	r23, Y+6	; 0x06
     a18:	8f 81       	ldd	r24, Y+7	; 0x07
     a1a:	98 85       	ldd	r25, Y+8	; 0x08
     a1c:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     a20:	dc 01       	movw	r26, r24
     a22:	cb 01       	movw	r24, r22
     a24:	9a 87       	std	Y+10, r25	; 0x0a
     a26:	89 87       	std	Y+9, r24	; 0x09
     a28:	89 85       	ldd	r24, Y+9	; 0x09
     a2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a2c:	9e 87       	std	Y+14, r25	; 0x0e
     a2e:	8d 87       	std	Y+13, r24	; 0x0d
     a30:	8d 85       	ldd	r24, Y+13	; 0x0d
     a32:	9e 85       	ldd	r25, Y+14	; 0x0e
     a34:	01 97       	sbiw	r24, 0x01	; 1
     a36:	f1 f7       	brne	.-4      	; 0xa34 <LCD_voidInit+0x214>
     a38:	9e 87       	std	Y+14, r25	; 0x0e
     a3a:	8d 87       	std	Y+13, r24	; 0x0d
     a3c:	00 00       	nop
     a3e:	60 96       	adiw	r28, 0x10	; 16
     a40:	0f b6       	in	r0, 0x3f	; 63
     a42:	f8 94       	cli
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	cd bf       	out	0x3d, r28	; 61
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	08 95       	ret

00000a50 <LCD_voidSendChar>:
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	cd b7       	in	r28, 0x3d	; 61
     a56:	de b7       	in	r29, 0x3e	; 62
     a58:	eb 97       	sbiw	r28, 0x3b	; 59
     a5a:	0f b6       	in	r0, 0x3f	; 63
     a5c:	f8 94       	cli
     a5e:	de bf       	out	0x3e, r29	; 62
     a60:	0f be       	out	0x3f, r0	; 63
     a62:	cd bf       	out	0x3d, r28	; 61
     a64:	9a af       	std	Y+58, r25	; 0x3a
     a66:	89 af       	std	Y+57, r24	; 0x39
     a68:	6b af       	std	Y+59, r22	; 0x3b
     a6a:	8b ad       	ldd	r24, Y+59	; 0x3b
     a6c:	82 95       	swap	r24
     a6e:	8f 70       	andi	r24, 0x0F	; 15
     a70:	38 2f       	mov	r19, r24
     a72:	31 70       	andi	r19, 0x01	; 1
     a74:	89 ad       	ldd	r24, Y+57	; 0x39
     a76:	9a ad       	ldd	r25, Y+58	; 0x3a
     a78:	fc 01       	movw	r30, r24
     a7a:	82 81       	ldd	r24, Z+2	; 0x02
     a7c:	93 81       	ldd	r25, Z+3	; 0x03
     a7e:	05 96       	adiw	r24, 0x05	; 5
     a80:	fc 01       	movw	r30, r24
     a82:	20 81       	ld	r18, Z
     a84:	89 ad       	ldd	r24, Y+57	; 0x39
     a86:	9a ad       	ldd	r25, Y+58	; 0x3a
     a88:	fc 01       	movw	r30, r24
     a8a:	82 81       	ldd	r24, Z+2	; 0x02
     a8c:	93 81       	ldd	r25, Z+3	; 0x03
     a8e:	04 96       	adiw	r24, 0x04	; 4
     a90:	fc 01       	movw	r30, r24
     a92:	80 81       	ld	r24, Z
     a94:	43 2f       	mov	r20, r19
     a96:	62 2f       	mov	r22, r18
     a98:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     a9c:	8b ad       	ldd	r24, Y+59	; 0x3b
     a9e:	82 95       	swap	r24
     aa0:	86 95       	lsr	r24
     aa2:	87 70       	andi	r24, 0x07	; 7
     aa4:	38 2f       	mov	r19, r24
     aa6:	31 70       	andi	r19, 0x01	; 1
     aa8:	89 ad       	ldd	r24, Y+57	; 0x39
     aaa:	9a ad       	ldd	r25, Y+58	; 0x3a
     aac:	fc 01       	movw	r30, r24
     aae:	82 81       	ldd	r24, Z+2	; 0x02
     ab0:	93 81       	ldd	r25, Z+3	; 0x03
     ab2:	07 96       	adiw	r24, 0x07	; 7
     ab4:	fc 01       	movw	r30, r24
     ab6:	20 81       	ld	r18, Z
     ab8:	89 ad       	ldd	r24, Y+57	; 0x39
     aba:	9a ad       	ldd	r25, Y+58	; 0x3a
     abc:	fc 01       	movw	r30, r24
     abe:	82 81       	ldd	r24, Z+2	; 0x02
     ac0:	93 81       	ldd	r25, Z+3	; 0x03
     ac2:	06 96       	adiw	r24, 0x06	; 6
     ac4:	fc 01       	movw	r30, r24
     ac6:	80 81       	ld	r24, Z
     ac8:	43 2f       	mov	r20, r19
     aca:	62 2f       	mov	r22, r18
     acc:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     ad0:	8b ad       	ldd	r24, Y+59	; 0x3b
     ad2:	82 95       	swap	r24
     ad4:	86 95       	lsr	r24
     ad6:	86 95       	lsr	r24
     ad8:	83 70       	andi	r24, 0x03	; 3
     ada:	38 2f       	mov	r19, r24
     adc:	31 70       	andi	r19, 0x01	; 1
     ade:	89 ad       	ldd	r24, Y+57	; 0x39
     ae0:	9a ad       	ldd	r25, Y+58	; 0x3a
     ae2:	fc 01       	movw	r30, r24
     ae4:	82 81       	ldd	r24, Z+2	; 0x02
     ae6:	93 81       	ldd	r25, Z+3	; 0x03
     ae8:	09 96       	adiw	r24, 0x09	; 9
     aea:	fc 01       	movw	r30, r24
     aec:	20 81       	ld	r18, Z
     aee:	89 ad       	ldd	r24, Y+57	; 0x39
     af0:	9a ad       	ldd	r25, Y+58	; 0x3a
     af2:	fc 01       	movw	r30, r24
     af4:	82 81       	ldd	r24, Z+2	; 0x02
     af6:	93 81       	ldd	r25, Z+3	; 0x03
     af8:	08 96       	adiw	r24, 0x08	; 8
     afa:	fc 01       	movw	r30, r24
     afc:	80 81       	ld	r24, Z
     afe:	43 2f       	mov	r20, r19
     b00:	62 2f       	mov	r22, r18
     b02:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     b06:	8b ad       	ldd	r24, Y+59	; 0x3b
     b08:	38 2f       	mov	r19, r24
     b0a:	33 1f       	adc	r19, r19
     b0c:	33 27       	eor	r19, r19
     b0e:	33 1f       	adc	r19, r19
     b10:	89 ad       	ldd	r24, Y+57	; 0x39
     b12:	9a ad       	ldd	r25, Y+58	; 0x3a
     b14:	fc 01       	movw	r30, r24
     b16:	82 81       	ldd	r24, Z+2	; 0x02
     b18:	93 81       	ldd	r25, Z+3	; 0x03
     b1a:	0b 96       	adiw	r24, 0x0b	; 11
     b1c:	fc 01       	movw	r30, r24
     b1e:	20 81       	ld	r18, Z
     b20:	89 ad       	ldd	r24, Y+57	; 0x39
     b22:	9a ad       	ldd	r25, Y+58	; 0x3a
     b24:	fc 01       	movw	r30, r24
     b26:	82 81       	ldd	r24, Z+2	; 0x02
     b28:	93 81       	ldd	r25, Z+3	; 0x03
     b2a:	0a 96       	adiw	r24, 0x0a	; 10
     b2c:	fc 01       	movw	r30, r24
     b2e:	80 81       	ld	r24, Z
     b30:	43 2f       	mov	r20, r19
     b32:	62 2f       	mov	r22, r18
     b34:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     b38:	89 ad       	ldd	r24, Y+57	; 0x39
     b3a:	9a ad       	ldd	r25, Y+58	; 0x3a
     b3c:	fc 01       	movw	r30, r24
     b3e:	82 81       	ldd	r24, Z+2	; 0x02
     b40:	93 81       	ldd	r25, Z+3	; 0x03
     b42:	03 96       	adiw	r24, 0x03	; 3
     b44:	fc 01       	movw	r30, r24
     b46:	20 81       	ld	r18, Z
     b48:	89 ad       	ldd	r24, Y+57	; 0x39
     b4a:	9a ad       	ldd	r25, Y+58	; 0x3a
     b4c:	fc 01       	movw	r30, r24
     b4e:	82 81       	ldd	r24, Z+2	; 0x02
     b50:	93 81       	ldd	r25, Z+3	; 0x03
     b52:	02 96       	adiw	r24, 0x02	; 2
     b54:	fc 01       	movw	r30, r24
     b56:	80 81       	ld	r24, Z
     b58:	41 e0       	ldi	r20, 0x01	; 1
     b5a:	62 2f       	mov	r22, r18
     b5c:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     b60:	89 ad       	ldd	r24, Y+57	; 0x39
     b62:	9a ad       	ldd	r25, Y+58	; 0x3a
     b64:	fc 01       	movw	r30, r24
     b66:	82 81       	ldd	r24, Z+2	; 0x02
     b68:	93 81       	ldd	r25, Z+3	; 0x03
     b6a:	01 96       	adiw	r24, 0x01	; 1
     b6c:	fc 01       	movw	r30, r24
     b6e:	20 81       	ld	r18, Z
     b70:	89 ad       	ldd	r24, Y+57	; 0x39
     b72:	9a ad       	ldd	r25, Y+58	; 0x3a
     b74:	fc 01       	movw	r30, r24
     b76:	82 81       	ldd	r24, Z+2	; 0x02
     b78:	93 81       	ldd	r25, Z+3	; 0x03
     b7a:	fc 01       	movw	r30, r24
     b7c:	80 81       	ld	r24, Z
     b7e:	41 e0       	ldi	r20, 0x01	; 1
     b80:	62 2f       	mov	r22, r18
     b82:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	a0 e8       	ldi	r26, 0x80	; 128
     b8c:	bf e3       	ldi	r27, 0x3F	; 63
     b8e:	89 83       	std	Y+1, r24	; 0x01
     b90:	9a 83       	std	Y+2, r25	; 0x02
     b92:	ab 83       	std	Y+3, r26	; 0x03
     b94:	bc 83       	std	Y+4, r27	; 0x04
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	4a e7       	ldi	r20, 0x7A	; 122
     b9c:	55 e4       	ldi	r21, 0x45	; 69
     b9e:	69 81       	ldd	r22, Y+1	; 0x01
     ba0:	7a 81       	ldd	r23, Y+2	; 0x02
     ba2:	8b 81       	ldd	r24, Y+3	; 0x03
     ba4:	9c 81       	ldd	r25, Y+4	; 0x04
     ba6:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     baa:	dc 01       	movw	r26, r24
     bac:	cb 01       	movw	r24, r22
     bae:	8f a7       	std	Y+47, r24	; 0x2f
     bb0:	98 ab       	std	Y+48, r25	; 0x30
     bb2:	a9 ab       	std	Y+49, r26	; 0x31
     bb4:	ba ab       	std	Y+50, r27	; 0x32
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	40 e8       	ldi	r20, 0x80	; 128
     bbc:	5f e3       	ldi	r21, 0x3F	; 63
     bbe:	6f a5       	ldd	r22, Y+47	; 0x2f
     bc0:	78 a9       	ldd	r23, Y+48	; 0x30
     bc2:	89 a9       	ldd	r24, Y+49	; 0x31
     bc4:	9a a9       	ldd	r25, Y+50	; 0x32
     bc6:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     bca:	88 23       	and	r24, r24
     bcc:	2c f4       	brge	.+10     	; 0xbd8 <LCD_voidSendChar+0x188>
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	9c ab       	std	Y+52, r25	; 0x34
     bd4:	8b ab       	std	Y+51, r24	; 0x33
     bd6:	3f c0       	rjmp	.+126    	; 0xc56 <LCD_voidSendChar+0x206>
     bd8:	20 e0       	ldi	r18, 0x00	; 0
     bda:	3f ef       	ldi	r19, 0xFF	; 255
     bdc:	4f e7       	ldi	r20, 0x7F	; 127
     bde:	57 e4       	ldi	r21, 0x47	; 71
     be0:	6f a5       	ldd	r22, Y+47	; 0x2f
     be2:	78 a9       	ldd	r23, Y+48	; 0x30
     be4:	89 a9       	ldd	r24, Y+49	; 0x31
     be6:	9a a9       	ldd	r25, Y+50	; 0x32
     be8:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     bec:	18 16       	cp	r1, r24
     bee:	4c f5       	brge	.+82     	; 0xc42 <LCD_voidSendChar+0x1f2>
     bf0:	20 e0       	ldi	r18, 0x00	; 0
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	40 e2       	ldi	r20, 0x20	; 32
     bf6:	51 e4       	ldi	r21, 0x41	; 65
     bf8:	69 81       	ldd	r22, Y+1	; 0x01
     bfa:	7a 81       	ldd	r23, Y+2	; 0x02
     bfc:	8b 81       	ldd	r24, Y+3	; 0x03
     bfe:	9c 81       	ldd	r25, Y+4	; 0x04
     c00:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     c04:	dc 01       	movw	r26, r24
     c06:	cb 01       	movw	r24, r22
     c08:	bc 01       	movw	r22, r24
     c0a:	cd 01       	movw	r24, r26
     c0c:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     c10:	dc 01       	movw	r26, r24
     c12:	cb 01       	movw	r24, r22
     c14:	9c ab       	std	Y+52, r25	; 0x34
     c16:	8b ab       	std	Y+51, r24	; 0x33
     c18:	0f c0       	rjmp	.+30     	; 0xc38 <LCD_voidSendChar+0x1e8>
     c1a:	80 e9       	ldi	r24, 0x90	; 144
     c1c:	91 e0       	ldi	r25, 0x01	; 1
     c1e:	9e ab       	std	Y+54, r25	; 0x36
     c20:	8d ab       	std	Y+53, r24	; 0x35
     c22:	8d a9       	ldd	r24, Y+53	; 0x35
     c24:	9e a9       	ldd	r25, Y+54	; 0x36
     c26:	01 97       	sbiw	r24, 0x01	; 1
     c28:	f1 f7       	brne	.-4      	; 0xc26 <LCD_voidSendChar+0x1d6>
     c2a:	9e ab       	std	Y+54, r25	; 0x36
     c2c:	8d ab       	std	Y+53, r24	; 0x35
     c2e:	8b a9       	ldd	r24, Y+51	; 0x33
     c30:	9c a9       	ldd	r25, Y+52	; 0x34
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	9c ab       	std	Y+52, r25	; 0x34
     c36:	8b ab       	std	Y+51, r24	; 0x33
     c38:	8b a9       	ldd	r24, Y+51	; 0x33
     c3a:	9c a9       	ldd	r25, Y+52	; 0x34
     c3c:	89 2b       	or	r24, r25
     c3e:	69 f7       	brne	.-38     	; 0xc1a <LCD_voidSendChar+0x1ca>
     c40:	14 c0       	rjmp	.+40     	; 0xc6a <LCD_voidSendChar+0x21a>
     c42:	6f a5       	ldd	r22, Y+47	; 0x2f
     c44:	78 a9       	ldd	r23, Y+48	; 0x30
     c46:	89 a9       	ldd	r24, Y+49	; 0x31
     c48:	9a a9       	ldd	r25, Y+50	; 0x32
     c4a:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     c4e:	dc 01       	movw	r26, r24
     c50:	cb 01       	movw	r24, r22
     c52:	9c ab       	std	Y+52, r25	; 0x34
     c54:	8b ab       	std	Y+51, r24	; 0x33
     c56:	8b a9       	ldd	r24, Y+51	; 0x33
     c58:	9c a9       	ldd	r25, Y+52	; 0x34
     c5a:	98 af       	std	Y+56, r25	; 0x38
     c5c:	8f ab       	std	Y+55, r24	; 0x37
     c5e:	8f a9       	ldd	r24, Y+55	; 0x37
     c60:	98 ad       	ldd	r25, Y+56	; 0x38
     c62:	01 97       	sbiw	r24, 0x01	; 1
     c64:	f1 f7       	brne	.-4      	; 0xc62 <LCD_voidSendChar+0x212>
     c66:	98 af       	std	Y+56, r25	; 0x38
     c68:	8f ab       	std	Y+55, r24	; 0x37
     c6a:	89 ad       	ldd	r24, Y+57	; 0x39
     c6c:	9a ad       	ldd	r25, Y+58	; 0x3a
     c6e:	fc 01       	movw	r30, r24
     c70:	82 81       	ldd	r24, Z+2	; 0x02
     c72:	93 81       	ldd	r25, Z+3	; 0x03
     c74:	01 96       	adiw	r24, 0x01	; 1
     c76:	fc 01       	movw	r30, r24
     c78:	20 81       	ld	r18, Z
     c7a:	89 ad       	ldd	r24, Y+57	; 0x39
     c7c:	9a ad       	ldd	r25, Y+58	; 0x3a
     c7e:	fc 01       	movw	r30, r24
     c80:	82 81       	ldd	r24, Z+2	; 0x02
     c82:	93 81       	ldd	r25, Z+3	; 0x03
     c84:	fc 01       	movw	r30, r24
     c86:	80 81       	ld	r24, Z
     c88:	40 e0       	ldi	r20, 0x00	; 0
     c8a:	62 2f       	mov	r22, r18
     c8c:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     c90:	80 e0       	ldi	r24, 0x00	; 0
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	a0 e8       	ldi	r26, 0x80	; 128
     c96:	bf e3       	ldi	r27, 0x3F	; 63
     c98:	8d 83       	std	Y+5, r24	; 0x05
     c9a:	9e 83       	std	Y+6, r25	; 0x06
     c9c:	af 83       	std	Y+7, r26	; 0x07
     c9e:	b8 87       	std	Y+8, r27	; 0x08
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	4a e7       	ldi	r20, 0x7A	; 122
     ca6:	55 e4       	ldi	r21, 0x45	; 69
     ca8:	6d 81       	ldd	r22, Y+5	; 0x05
     caa:	7e 81       	ldd	r23, Y+6	; 0x06
     cac:	8f 81       	ldd	r24, Y+7	; 0x07
     cae:	98 85       	ldd	r25, Y+8	; 0x08
     cb0:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     cb4:	dc 01       	movw	r26, r24
     cb6:	cb 01       	movw	r24, r22
     cb8:	8d a3       	std	Y+37, r24	; 0x25
     cba:	9e a3       	std	Y+38, r25	; 0x26
     cbc:	af a3       	std	Y+39, r26	; 0x27
     cbe:	b8 a7       	std	Y+40, r27	; 0x28
     cc0:	20 e0       	ldi	r18, 0x00	; 0
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	40 e8       	ldi	r20, 0x80	; 128
     cc6:	5f e3       	ldi	r21, 0x3F	; 63
     cc8:	6d a1       	ldd	r22, Y+37	; 0x25
     cca:	7e a1       	ldd	r23, Y+38	; 0x26
     ccc:	8f a1       	ldd	r24, Y+39	; 0x27
     cce:	98 a5       	ldd	r25, Y+40	; 0x28
     cd0:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     cd4:	88 23       	and	r24, r24
     cd6:	2c f4       	brge	.+10     	; 0xce2 <LCD_voidSendChar+0x292>
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	9a a7       	std	Y+42, r25	; 0x2a
     cde:	89 a7       	std	Y+41, r24	; 0x29
     ce0:	3f c0       	rjmp	.+126    	; 0xd60 <LCD_voidSendChar+0x310>
     ce2:	20 e0       	ldi	r18, 0x00	; 0
     ce4:	3f ef       	ldi	r19, 0xFF	; 255
     ce6:	4f e7       	ldi	r20, 0x7F	; 127
     ce8:	57 e4       	ldi	r21, 0x47	; 71
     cea:	6d a1       	ldd	r22, Y+37	; 0x25
     cec:	7e a1       	ldd	r23, Y+38	; 0x26
     cee:	8f a1       	ldd	r24, Y+39	; 0x27
     cf0:	98 a5       	ldd	r25, Y+40	; 0x28
     cf2:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     cf6:	18 16       	cp	r1, r24
     cf8:	4c f5       	brge	.+82     	; 0xd4c <LCD_voidSendChar+0x2fc>
     cfa:	20 e0       	ldi	r18, 0x00	; 0
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	40 e2       	ldi	r20, 0x20	; 32
     d00:	51 e4       	ldi	r21, 0x41	; 65
     d02:	6d 81       	ldd	r22, Y+5	; 0x05
     d04:	7e 81       	ldd	r23, Y+6	; 0x06
     d06:	8f 81       	ldd	r24, Y+7	; 0x07
     d08:	98 85       	ldd	r25, Y+8	; 0x08
     d0a:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     d0e:	dc 01       	movw	r26, r24
     d10:	cb 01       	movw	r24, r22
     d12:	bc 01       	movw	r22, r24
     d14:	cd 01       	movw	r24, r26
     d16:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     d1a:	dc 01       	movw	r26, r24
     d1c:	cb 01       	movw	r24, r22
     d1e:	9a a7       	std	Y+42, r25	; 0x2a
     d20:	89 a7       	std	Y+41, r24	; 0x29
     d22:	0f c0       	rjmp	.+30     	; 0xd42 <LCD_voidSendChar+0x2f2>
     d24:	80 e9       	ldi	r24, 0x90	; 144
     d26:	91 e0       	ldi	r25, 0x01	; 1
     d28:	9c a7       	std	Y+44, r25	; 0x2c
     d2a:	8b a7       	std	Y+43, r24	; 0x2b
     d2c:	8b a5       	ldd	r24, Y+43	; 0x2b
     d2e:	9c a5       	ldd	r25, Y+44	; 0x2c
     d30:	01 97       	sbiw	r24, 0x01	; 1
     d32:	f1 f7       	brne	.-4      	; 0xd30 <LCD_voidSendChar+0x2e0>
     d34:	9c a7       	std	Y+44, r25	; 0x2c
     d36:	8b a7       	std	Y+43, r24	; 0x2b
     d38:	89 a5       	ldd	r24, Y+41	; 0x29
     d3a:	9a a5       	ldd	r25, Y+42	; 0x2a
     d3c:	01 97       	sbiw	r24, 0x01	; 1
     d3e:	9a a7       	std	Y+42, r25	; 0x2a
     d40:	89 a7       	std	Y+41, r24	; 0x29
     d42:	89 a5       	ldd	r24, Y+41	; 0x29
     d44:	9a a5       	ldd	r25, Y+42	; 0x2a
     d46:	89 2b       	or	r24, r25
     d48:	69 f7       	brne	.-38     	; 0xd24 <LCD_voidSendChar+0x2d4>
     d4a:	14 c0       	rjmp	.+40     	; 0xd74 <LCD_voidSendChar+0x324>
     d4c:	6d a1       	ldd	r22, Y+37	; 0x25
     d4e:	7e a1       	ldd	r23, Y+38	; 0x26
     d50:	8f a1       	ldd	r24, Y+39	; 0x27
     d52:	98 a5       	ldd	r25, Y+40	; 0x28
     d54:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     d58:	dc 01       	movw	r26, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	9a a7       	std	Y+42, r25	; 0x2a
     d5e:	89 a7       	std	Y+41, r24	; 0x29
     d60:	89 a5       	ldd	r24, Y+41	; 0x29
     d62:	9a a5       	ldd	r25, Y+42	; 0x2a
     d64:	9e a7       	std	Y+46, r25	; 0x2e
     d66:	8d a7       	std	Y+45, r24	; 0x2d
     d68:	8d a5       	ldd	r24, Y+45	; 0x2d
     d6a:	9e a5       	ldd	r25, Y+46	; 0x2e
     d6c:	01 97       	sbiw	r24, 0x01	; 1
     d6e:	f1 f7       	brne	.-4      	; 0xd6c <LCD_voidSendChar+0x31c>
     d70:	9e a7       	std	Y+46, r25	; 0x2e
     d72:	8d a7       	std	Y+45, r24	; 0x2d
     d74:	8b ad       	ldd	r24, Y+59	; 0x3b
     d76:	38 2f       	mov	r19, r24
     d78:	31 70       	andi	r19, 0x01	; 1
     d7a:	89 ad       	ldd	r24, Y+57	; 0x39
     d7c:	9a ad       	ldd	r25, Y+58	; 0x3a
     d7e:	fc 01       	movw	r30, r24
     d80:	82 81       	ldd	r24, Z+2	; 0x02
     d82:	93 81       	ldd	r25, Z+3	; 0x03
     d84:	05 96       	adiw	r24, 0x05	; 5
     d86:	fc 01       	movw	r30, r24
     d88:	20 81       	ld	r18, Z
     d8a:	89 ad       	ldd	r24, Y+57	; 0x39
     d8c:	9a ad       	ldd	r25, Y+58	; 0x3a
     d8e:	fc 01       	movw	r30, r24
     d90:	82 81       	ldd	r24, Z+2	; 0x02
     d92:	93 81       	ldd	r25, Z+3	; 0x03
     d94:	04 96       	adiw	r24, 0x04	; 4
     d96:	fc 01       	movw	r30, r24
     d98:	80 81       	ld	r24, Z
     d9a:	43 2f       	mov	r20, r19
     d9c:	62 2f       	mov	r22, r18
     d9e:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     da2:	8b ad       	ldd	r24, Y+59	; 0x3b
     da4:	86 95       	lsr	r24
     da6:	38 2f       	mov	r19, r24
     da8:	31 70       	andi	r19, 0x01	; 1
     daa:	89 ad       	ldd	r24, Y+57	; 0x39
     dac:	9a ad       	ldd	r25, Y+58	; 0x3a
     dae:	fc 01       	movw	r30, r24
     db0:	82 81       	ldd	r24, Z+2	; 0x02
     db2:	93 81       	ldd	r25, Z+3	; 0x03
     db4:	07 96       	adiw	r24, 0x07	; 7
     db6:	fc 01       	movw	r30, r24
     db8:	20 81       	ld	r18, Z
     dba:	89 ad       	ldd	r24, Y+57	; 0x39
     dbc:	9a ad       	ldd	r25, Y+58	; 0x3a
     dbe:	fc 01       	movw	r30, r24
     dc0:	82 81       	ldd	r24, Z+2	; 0x02
     dc2:	93 81       	ldd	r25, Z+3	; 0x03
     dc4:	06 96       	adiw	r24, 0x06	; 6
     dc6:	fc 01       	movw	r30, r24
     dc8:	80 81       	ld	r24, Z
     dca:	43 2f       	mov	r20, r19
     dcc:	62 2f       	mov	r22, r18
     dce:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     dd2:	8b ad       	ldd	r24, Y+59	; 0x3b
     dd4:	86 95       	lsr	r24
     dd6:	86 95       	lsr	r24
     dd8:	38 2f       	mov	r19, r24
     dda:	31 70       	andi	r19, 0x01	; 1
     ddc:	89 ad       	ldd	r24, Y+57	; 0x39
     dde:	9a ad       	ldd	r25, Y+58	; 0x3a
     de0:	fc 01       	movw	r30, r24
     de2:	82 81       	ldd	r24, Z+2	; 0x02
     de4:	93 81       	ldd	r25, Z+3	; 0x03
     de6:	09 96       	adiw	r24, 0x09	; 9
     de8:	fc 01       	movw	r30, r24
     dea:	20 81       	ld	r18, Z
     dec:	89 ad       	ldd	r24, Y+57	; 0x39
     dee:	9a ad       	ldd	r25, Y+58	; 0x3a
     df0:	fc 01       	movw	r30, r24
     df2:	82 81       	ldd	r24, Z+2	; 0x02
     df4:	93 81       	ldd	r25, Z+3	; 0x03
     df6:	08 96       	adiw	r24, 0x08	; 8
     df8:	fc 01       	movw	r30, r24
     dfa:	80 81       	ld	r24, Z
     dfc:	43 2f       	mov	r20, r19
     dfe:	62 2f       	mov	r22, r18
     e00:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     e04:	8b ad       	ldd	r24, Y+59	; 0x3b
     e06:	86 95       	lsr	r24
     e08:	86 95       	lsr	r24
     e0a:	86 95       	lsr	r24
     e0c:	38 2f       	mov	r19, r24
     e0e:	31 70       	andi	r19, 0x01	; 1
     e10:	89 ad       	ldd	r24, Y+57	; 0x39
     e12:	9a ad       	ldd	r25, Y+58	; 0x3a
     e14:	fc 01       	movw	r30, r24
     e16:	82 81       	ldd	r24, Z+2	; 0x02
     e18:	93 81       	ldd	r25, Z+3	; 0x03
     e1a:	0b 96       	adiw	r24, 0x0b	; 11
     e1c:	fc 01       	movw	r30, r24
     e1e:	20 81       	ld	r18, Z
     e20:	89 ad       	ldd	r24, Y+57	; 0x39
     e22:	9a ad       	ldd	r25, Y+58	; 0x3a
     e24:	fc 01       	movw	r30, r24
     e26:	82 81       	ldd	r24, Z+2	; 0x02
     e28:	93 81       	ldd	r25, Z+3	; 0x03
     e2a:	0a 96       	adiw	r24, 0x0a	; 10
     e2c:	fc 01       	movw	r30, r24
     e2e:	80 81       	ld	r24, Z
     e30:	43 2f       	mov	r20, r19
     e32:	62 2f       	mov	r22, r18
     e34:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     e38:	89 ad       	ldd	r24, Y+57	; 0x39
     e3a:	9a ad       	ldd	r25, Y+58	; 0x3a
     e3c:	fc 01       	movw	r30, r24
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	03 96       	adiw	r24, 0x03	; 3
     e44:	fc 01       	movw	r30, r24
     e46:	20 81       	ld	r18, Z
     e48:	89 ad       	ldd	r24, Y+57	; 0x39
     e4a:	9a ad       	ldd	r25, Y+58	; 0x3a
     e4c:	fc 01       	movw	r30, r24
     e4e:	82 81       	ldd	r24, Z+2	; 0x02
     e50:	93 81       	ldd	r25, Z+3	; 0x03
     e52:	02 96       	adiw	r24, 0x02	; 2
     e54:	fc 01       	movw	r30, r24
     e56:	80 81       	ld	r24, Z
     e58:	41 e0       	ldi	r20, 0x01	; 1
     e5a:	62 2f       	mov	r22, r18
     e5c:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     e60:	89 ad       	ldd	r24, Y+57	; 0x39
     e62:	9a ad       	ldd	r25, Y+58	; 0x3a
     e64:	fc 01       	movw	r30, r24
     e66:	82 81       	ldd	r24, Z+2	; 0x02
     e68:	93 81       	ldd	r25, Z+3	; 0x03
     e6a:	01 96       	adiw	r24, 0x01	; 1
     e6c:	fc 01       	movw	r30, r24
     e6e:	20 81       	ld	r18, Z
     e70:	89 ad       	ldd	r24, Y+57	; 0x39
     e72:	9a ad       	ldd	r25, Y+58	; 0x3a
     e74:	fc 01       	movw	r30, r24
     e76:	82 81       	ldd	r24, Z+2	; 0x02
     e78:	93 81       	ldd	r25, Z+3	; 0x03
     e7a:	fc 01       	movw	r30, r24
     e7c:	80 81       	ld	r24, Z
     e7e:	41 e0       	ldi	r20, 0x01	; 1
     e80:	62 2f       	mov	r22, r18
     e82:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     e86:	80 e0       	ldi	r24, 0x00	; 0
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	a0 e8       	ldi	r26, 0x80	; 128
     e8c:	bf e3       	ldi	r27, 0x3F	; 63
     e8e:	89 87       	std	Y+9, r24	; 0x09
     e90:	9a 87       	std	Y+10, r25	; 0x0a
     e92:	ab 87       	std	Y+11, r26	; 0x0b
     e94:	bc 87       	std	Y+12, r27	; 0x0c
     e96:	20 e0       	ldi	r18, 0x00	; 0
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	4a e7       	ldi	r20, 0x7A	; 122
     e9c:	55 e4       	ldi	r21, 0x45	; 69
     e9e:	69 85       	ldd	r22, Y+9	; 0x09
     ea0:	7a 85       	ldd	r23, Y+10	; 0x0a
     ea2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ea4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ea6:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     eaa:	dc 01       	movw	r26, r24
     eac:	cb 01       	movw	r24, r22
     eae:	8b 8f       	std	Y+27, r24	; 0x1b
     eb0:	9c 8f       	std	Y+28, r25	; 0x1c
     eb2:	ad 8f       	std	Y+29, r26	; 0x1d
     eb4:	be 8f       	std	Y+30, r27	; 0x1e
     eb6:	20 e0       	ldi	r18, 0x00	; 0
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	40 e8       	ldi	r20, 0x80	; 128
     ebc:	5f e3       	ldi	r21, 0x3F	; 63
     ebe:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ec0:	7c 8d       	ldd	r23, Y+28	; 0x1c
     ec2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ec4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ec6:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     eca:	88 23       	and	r24, r24
     ecc:	2c f4       	brge	.+10     	; 0xed8 <LCD_voidSendChar+0x488>
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	98 a3       	std	Y+32, r25	; 0x20
     ed4:	8f 8f       	std	Y+31, r24	; 0x1f
     ed6:	3f c0       	rjmp	.+126    	; 0xf56 <LCD_voidSendChar+0x506>
     ed8:	20 e0       	ldi	r18, 0x00	; 0
     eda:	3f ef       	ldi	r19, 0xFF	; 255
     edc:	4f e7       	ldi	r20, 0x7F	; 127
     ede:	57 e4       	ldi	r21, 0x47	; 71
     ee0:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ee2:	7c 8d       	ldd	r23, Y+28	; 0x1c
     ee4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ee6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ee8:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     eec:	18 16       	cp	r1, r24
     eee:	4c f5       	brge	.+82     	; 0xf42 <LCD_voidSendChar+0x4f2>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	40 e2       	ldi	r20, 0x20	; 32
     ef6:	51 e4       	ldi	r21, 0x41	; 65
     ef8:	69 85       	ldd	r22, Y+9	; 0x09
     efa:	7a 85       	ldd	r23, Y+10	; 0x0a
     efc:	8b 85       	ldd	r24, Y+11	; 0x0b
     efe:	9c 85       	ldd	r25, Y+12	; 0x0c
     f00:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     f04:	dc 01       	movw	r26, r24
     f06:	cb 01       	movw	r24, r22
     f08:	bc 01       	movw	r22, r24
     f0a:	cd 01       	movw	r24, r26
     f0c:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     f10:	dc 01       	movw	r26, r24
     f12:	cb 01       	movw	r24, r22
     f14:	98 a3       	std	Y+32, r25	; 0x20
     f16:	8f 8f       	std	Y+31, r24	; 0x1f
     f18:	0f c0       	rjmp	.+30     	; 0xf38 <LCD_voidSendChar+0x4e8>
     f1a:	80 e9       	ldi	r24, 0x90	; 144
     f1c:	91 e0       	ldi	r25, 0x01	; 1
     f1e:	9a a3       	std	Y+34, r25	; 0x22
     f20:	89 a3       	std	Y+33, r24	; 0x21
     f22:	89 a1       	ldd	r24, Y+33	; 0x21
     f24:	9a a1       	ldd	r25, Y+34	; 0x22
     f26:	01 97       	sbiw	r24, 0x01	; 1
     f28:	f1 f7       	brne	.-4      	; 0xf26 <LCD_voidSendChar+0x4d6>
     f2a:	9a a3       	std	Y+34, r25	; 0x22
     f2c:	89 a3       	std	Y+33, r24	; 0x21
     f2e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f30:	98 a1       	ldd	r25, Y+32	; 0x20
     f32:	01 97       	sbiw	r24, 0x01	; 1
     f34:	98 a3       	std	Y+32, r25	; 0x20
     f36:	8f 8f       	std	Y+31, r24	; 0x1f
     f38:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f3a:	98 a1       	ldd	r25, Y+32	; 0x20
     f3c:	89 2b       	or	r24, r25
     f3e:	69 f7       	brne	.-38     	; 0xf1a <LCD_voidSendChar+0x4ca>
     f40:	14 c0       	rjmp	.+40     	; 0xf6a <LCD_voidSendChar+0x51a>
     f42:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f44:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f46:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f48:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f4a:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
     f4e:	dc 01       	movw	r26, r24
     f50:	cb 01       	movw	r24, r22
     f52:	98 a3       	std	Y+32, r25	; 0x20
     f54:	8f 8f       	std	Y+31, r24	; 0x1f
     f56:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f58:	98 a1       	ldd	r25, Y+32	; 0x20
     f5a:	9c a3       	std	Y+36, r25	; 0x24
     f5c:	8b a3       	std	Y+35, r24	; 0x23
     f5e:	8b a1       	ldd	r24, Y+35	; 0x23
     f60:	9c a1       	ldd	r25, Y+36	; 0x24
     f62:	01 97       	sbiw	r24, 0x01	; 1
     f64:	f1 f7       	brne	.-4      	; 0xf62 <LCD_voidSendChar+0x512>
     f66:	9c a3       	std	Y+36, r25	; 0x24
     f68:	8b a3       	std	Y+35, r24	; 0x23
     f6a:	89 ad       	ldd	r24, Y+57	; 0x39
     f6c:	9a ad       	ldd	r25, Y+58	; 0x3a
     f6e:	fc 01       	movw	r30, r24
     f70:	82 81       	ldd	r24, Z+2	; 0x02
     f72:	93 81       	ldd	r25, Z+3	; 0x03
     f74:	01 96       	adiw	r24, 0x01	; 1
     f76:	fc 01       	movw	r30, r24
     f78:	20 81       	ld	r18, Z
     f7a:	89 ad       	ldd	r24, Y+57	; 0x39
     f7c:	9a ad       	ldd	r25, Y+58	; 0x3a
     f7e:	fc 01       	movw	r30, r24
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	fc 01       	movw	r30, r24
     f86:	80 81       	ld	r24, Z
     f88:	40 e0       	ldi	r20, 0x00	; 0
     f8a:	62 2f       	mov	r22, r18
     f8c:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
     f90:	80 e0       	ldi	r24, 0x00	; 0
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	a0 e8       	ldi	r26, 0x80	; 128
     f96:	bf e3       	ldi	r27, 0x3F	; 63
     f98:	8d 87       	std	Y+13, r24	; 0x0d
     f9a:	9e 87       	std	Y+14, r25	; 0x0e
     f9c:	af 87       	std	Y+15, r26	; 0x0f
     f9e:	b8 8b       	std	Y+16, r27	; 0x10
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	4a e7       	ldi	r20, 0x7A	; 122
     fa6:	55 e4       	ldi	r21, 0x45	; 69
     fa8:	6d 85       	ldd	r22, Y+13	; 0x0d
     faa:	7e 85       	ldd	r23, Y+14	; 0x0e
     fac:	8f 85       	ldd	r24, Y+15	; 0x0f
     fae:	98 89       	ldd	r25, Y+16	; 0x10
     fb0:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
     fb4:	dc 01       	movw	r26, r24
     fb6:	cb 01       	movw	r24, r22
     fb8:	89 8b       	std	Y+17, r24	; 0x11
     fba:	9a 8b       	std	Y+18, r25	; 0x12
     fbc:	ab 8b       	std	Y+19, r26	; 0x13
     fbe:	bc 8b       	std	Y+20, r27	; 0x14
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	40 e8       	ldi	r20, 0x80	; 128
     fc6:	5f e3       	ldi	r21, 0x3F	; 63
     fc8:	69 89       	ldd	r22, Y+17	; 0x11
     fca:	7a 89       	ldd	r23, Y+18	; 0x12
     fcc:	8b 89       	ldd	r24, Y+19	; 0x13
     fce:	9c 89       	ldd	r25, Y+20	; 0x14
     fd0:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
     fd4:	88 23       	and	r24, r24
     fd6:	2c f4       	brge	.+10     	; 0xfe2 <LCD_voidSendChar+0x592>
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	9e 8b       	std	Y+22, r25	; 0x16
     fde:	8d 8b       	std	Y+21, r24	; 0x15
     fe0:	3f c0       	rjmp	.+126    	; 0x1060 <LCD_voidSendChar+0x610>
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	3f ef       	ldi	r19, 0xFF	; 255
     fe6:	4f e7       	ldi	r20, 0x7F	; 127
     fe8:	57 e4       	ldi	r21, 0x47	; 71
     fea:	69 89       	ldd	r22, Y+17	; 0x11
     fec:	7a 89       	ldd	r23, Y+18	; 0x12
     fee:	8b 89       	ldd	r24, Y+19	; 0x13
     ff0:	9c 89       	ldd	r25, Y+20	; 0x14
     ff2:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
     ff6:	18 16       	cp	r1, r24
     ff8:	4c f5       	brge	.+82     	; 0x104c <LCD_voidSendChar+0x5fc>
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e2       	ldi	r20, 0x20	; 32
    1000:	51 e4       	ldi	r21, 0x41	; 65
    1002:	6d 85       	ldd	r22, Y+13	; 0x0d
    1004:	7e 85       	ldd	r23, Y+14	; 0x0e
    1006:	8f 85       	ldd	r24, Y+15	; 0x0f
    1008:	98 89       	ldd	r25, Y+16	; 0x10
    100a:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    100e:	dc 01       	movw	r26, r24
    1010:	cb 01       	movw	r24, r22
    1012:	bc 01       	movw	r22, r24
    1014:	cd 01       	movw	r24, r26
    1016:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    101a:	dc 01       	movw	r26, r24
    101c:	cb 01       	movw	r24, r22
    101e:	9e 8b       	std	Y+22, r25	; 0x16
    1020:	8d 8b       	std	Y+21, r24	; 0x15
    1022:	0f c0       	rjmp	.+30     	; 0x1042 <LCD_voidSendChar+0x5f2>
    1024:	80 e9       	ldi	r24, 0x90	; 144
    1026:	91 e0       	ldi	r25, 0x01	; 1
    1028:	98 8f       	std	Y+24, r25	; 0x18
    102a:	8f 8b       	std	Y+23, r24	; 0x17
    102c:	8f 89       	ldd	r24, Y+23	; 0x17
    102e:	98 8d       	ldd	r25, Y+24	; 0x18
    1030:	01 97       	sbiw	r24, 0x01	; 1
    1032:	f1 f7       	brne	.-4      	; 0x1030 <LCD_voidSendChar+0x5e0>
    1034:	98 8f       	std	Y+24, r25	; 0x18
    1036:	8f 8b       	std	Y+23, r24	; 0x17
    1038:	8d 89       	ldd	r24, Y+21	; 0x15
    103a:	9e 89       	ldd	r25, Y+22	; 0x16
    103c:	01 97       	sbiw	r24, 0x01	; 1
    103e:	9e 8b       	std	Y+22, r25	; 0x16
    1040:	8d 8b       	std	Y+21, r24	; 0x15
    1042:	8d 89       	ldd	r24, Y+21	; 0x15
    1044:	9e 89       	ldd	r25, Y+22	; 0x16
    1046:	89 2b       	or	r24, r25
    1048:	69 f7       	brne	.-38     	; 0x1024 <LCD_voidSendChar+0x5d4>
    104a:	14 c0       	rjmp	.+40     	; 0x1074 <LCD_voidSendChar+0x624>
    104c:	69 89       	ldd	r22, Y+17	; 0x11
    104e:	7a 89       	ldd	r23, Y+18	; 0x12
    1050:	8b 89       	ldd	r24, Y+19	; 0x13
    1052:	9c 89       	ldd	r25, Y+20	; 0x14
    1054:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    1058:	dc 01       	movw	r26, r24
    105a:	cb 01       	movw	r24, r22
    105c:	9e 8b       	std	Y+22, r25	; 0x16
    105e:	8d 8b       	std	Y+21, r24	; 0x15
    1060:	8d 89       	ldd	r24, Y+21	; 0x15
    1062:	9e 89       	ldd	r25, Y+22	; 0x16
    1064:	9a 8f       	std	Y+26, r25	; 0x1a
    1066:	89 8f       	std	Y+25, r24	; 0x19
    1068:	89 8d       	ldd	r24, Y+25	; 0x19
    106a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	f1 f7       	brne	.-4      	; 0x106c <LCD_voidSendChar+0x61c>
    1070:	9a 8f       	std	Y+26, r25	; 0x1a
    1072:	89 8f       	std	Y+25, r24	; 0x19
    1074:	00 00       	nop
    1076:	eb 96       	adiw	r28, 0x3b	; 59
    1078:	0f b6       	in	r0, 0x3f	; 63
    107a:	f8 94       	cli
    107c:	de bf       	out	0x3e, r29	; 62
    107e:	0f be       	out	0x3f, r0	; 63
    1080:	cd bf       	out	0x3d, r28	; 61
    1082:	df 91       	pop	r29
    1084:	cf 91       	pop	r28
    1086:	08 95       	ret

00001088 <LCD_voidSendString>:
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	00 d0       	rcall	.+0      	; 0x108e <LCD_voidSendString+0x6>
    108e:	00 d0       	rcall	.+0      	; 0x1090 <LCD_voidSendString+0x8>
    1090:	1f 92       	push	r1
    1092:	cd b7       	in	r28, 0x3d	; 61
    1094:	de b7       	in	r29, 0x3e	; 62
    1096:	9b 83       	std	Y+3, r25	; 0x03
    1098:	8a 83       	std	Y+2, r24	; 0x02
    109a:	7d 83       	std	Y+5, r23	; 0x05
    109c:	6c 83       	std	Y+4, r22	; 0x04
    109e:	19 82       	std	Y+1, r1	; 0x01
    10a0:	11 c0       	rjmp	.+34     	; 0x10c4 <LCD_voidSendString+0x3c>
    10a2:	89 81       	ldd	r24, Y+1	; 0x01
    10a4:	88 2f       	mov	r24, r24
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	2c 81       	ldd	r18, Y+4	; 0x04
    10aa:	3d 81       	ldd	r19, Y+5	; 0x05
    10ac:	82 0f       	add	r24, r18
    10ae:	93 1f       	adc	r25, r19
    10b0:	fc 01       	movw	r30, r24
    10b2:	20 81       	ld	r18, Z
    10b4:	8a 81       	ldd	r24, Y+2	; 0x02
    10b6:	9b 81       	ldd	r25, Y+3	; 0x03
    10b8:	62 2f       	mov	r22, r18
    10ba:	0e 94 28 05 	call	0xa50	; 0xa50 <LCD_voidSendChar>
    10be:	89 81       	ldd	r24, Y+1	; 0x01
    10c0:	8f 5f       	subi	r24, 0xFF	; 255
    10c2:	89 83       	std	Y+1, r24	; 0x01
    10c4:	89 81       	ldd	r24, Y+1	; 0x01
    10c6:	88 2f       	mov	r24, r24
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	2c 81       	ldd	r18, Y+4	; 0x04
    10cc:	3d 81       	ldd	r19, Y+5	; 0x05
    10ce:	82 0f       	add	r24, r18
    10d0:	93 1f       	adc	r25, r19
    10d2:	fc 01       	movw	r30, r24
    10d4:	80 81       	ld	r24, Z
    10d6:	88 23       	and	r24, r24
    10d8:	21 f7       	brne	.-56     	; 0x10a2 <LCD_voidSendString+0x1a>
    10da:	00 00       	nop
    10dc:	0f 90       	pop	r0
    10de:	0f 90       	pop	r0
    10e0:	0f 90       	pop	r0
    10e2:	0f 90       	pop	r0
    10e4:	0f 90       	pop	r0
    10e6:	df 91       	pop	r29
    10e8:	cf 91       	pop	r28
    10ea:	08 95       	ret

000010ec <LCD_voidSetCursorType>:
    10ec:	cf 93       	push	r28
    10ee:	df 93       	push	r29
    10f0:	00 d0       	rcall	.+0      	; 0x10f2 <LCD_voidSetCursorType+0x6>
    10f2:	1f 92       	push	r1
    10f4:	cd b7       	in	r28, 0x3d	; 61
    10f6:	de b7       	in	r29, 0x3e	; 62
    10f8:	9a 83       	std	Y+2, r25	; 0x02
    10fa:	89 83       	std	Y+1, r24	; 0x01
    10fc:	6b 83       	std	Y+3, r22	; 0x03
    10fe:	89 81       	ldd	r24, Y+1	; 0x01
    1100:	9a 81       	ldd	r25, Y+2	; 0x02
    1102:	6b 81       	ldd	r22, Y+3	; 0x03
    1104:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
    1108:	00 00       	nop
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	0f 90       	pop	r0
    1110:	df 91       	pop	r29
    1112:	cf 91       	pop	r28
    1114:	08 95       	ret

00001116 <LCD_voidSetDisplayState>:
    1116:	cf 93       	push	r28
    1118:	df 93       	push	r29
    111a:	00 d0       	rcall	.+0      	; 0x111c <LCD_voidSetDisplayState+0x6>
    111c:	1f 92       	push	r1
    111e:	cd b7       	in	r28, 0x3d	; 61
    1120:	de b7       	in	r29, 0x3e	; 62
    1122:	9a 83       	std	Y+2, r25	; 0x02
    1124:	89 83       	std	Y+1, r24	; 0x01
    1126:	6b 83       	std	Y+3, r22	; 0x03
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	88 2f       	mov	r24, r24
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	89 2b       	or	r24, r25
    1130:	31 f4       	brne	.+12     	; 0x113e <LCD_voidSetDisplayState+0x28>
    1132:	89 81       	ldd	r24, Y+1	; 0x01
    1134:	9a 81       	ldd	r25, Y+2	; 0x02
    1136:	68 e0       	ldi	r22, 0x08	; 8
    1138:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
    113c:	05 c0       	rjmp	.+10     	; 0x1148 <LCD_voidSetDisplayState+0x32>
    113e:	89 81       	ldd	r24, Y+1	; 0x01
    1140:	9a 81       	ldd	r25, Y+2	; 0x02
    1142:	6c e0       	ldi	r22, 0x0C	; 12
    1144:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
    1148:	00 00       	nop
    114a:	0f 90       	pop	r0
    114c:	0f 90       	pop	r0
    114e:	0f 90       	pop	r0
    1150:	df 91       	pop	r29
    1152:	cf 91       	pop	r28
    1154:	08 95       	ret

00001156 <LCD_voidGotoXY>:
    1156:	cf 93       	push	r28
    1158:	df 93       	push	r29
    115a:	00 d0       	rcall	.+0      	; 0x115c <LCD_voidGotoXY+0x6>
    115c:	00 d0       	rcall	.+0      	; 0x115e <LCD_voidGotoXY+0x8>
    115e:	1f 92       	push	r1
    1160:	cd b7       	in	r28, 0x3d	; 61
    1162:	de b7       	in	r29, 0x3e	; 62
    1164:	9b 83       	std	Y+3, r25	; 0x03
    1166:	8a 83       	std	Y+2, r24	; 0x02
    1168:	6c 83       	std	Y+4, r22	; 0x04
    116a:	4d 83       	std	Y+5, r20	; 0x05
    116c:	19 82       	std	Y+1, r1	; 0x01
    116e:	8a 81       	ldd	r24, Y+2	; 0x02
    1170:	9b 81       	ldd	r25, Y+3	; 0x03
    1172:	fc 01       	movw	r30, r24
    1174:	90 81       	ld	r25, Z
    1176:	8d 81       	ldd	r24, Y+5	; 0x05
    1178:	89 17       	cp	r24, r25
    117a:	c0 f4       	brcc	.+48     	; 0x11ac <LCD_voidGotoXY+0x56>
    117c:	8a 81       	ldd	r24, Y+2	; 0x02
    117e:	9b 81       	ldd	r25, Y+3	; 0x03
    1180:	fc 01       	movw	r30, r24
    1182:	91 81       	ldd	r25, Z+1	; 0x01
    1184:	8c 81       	ldd	r24, Y+4	; 0x04
    1186:	89 17       	cp	r24, r25
    1188:	88 f4       	brcc	.+34     	; 0x11ac <LCD_voidGotoXY+0x56>
    118a:	8d 81       	ldd	r24, Y+5	; 0x05
    118c:	98 2f       	mov	r25, r24
    118e:	92 95       	swap	r25
    1190:	99 0f       	add	r25, r25
    1192:	99 0f       	add	r25, r25
    1194:	90 7c       	andi	r25, 0xC0	; 192
    1196:	8c 81       	ldd	r24, Y+4	; 0x04
    1198:	89 0f       	add	r24, r25
    119a:	89 83       	std	Y+1, r24	; 0x01
    119c:	89 81       	ldd	r24, Y+1	; 0x01
    119e:	80 68       	ori	r24, 0x80	; 128
    11a0:	89 83       	std	Y+1, r24	; 0x01
    11a2:	8a 81       	ldd	r24, Y+2	; 0x02
    11a4:	9b 81       	ldd	r25, Y+3	; 0x03
    11a6:	69 81       	ldd	r22, Y+1	; 0x01
    11a8:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
    11ac:	00 00       	nop
    11ae:	0f 90       	pop	r0
    11b0:	0f 90       	pop	r0
    11b2:	0f 90       	pop	r0
    11b4:	0f 90       	pop	r0
    11b6:	0f 90       	pop	r0
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	08 95       	ret

000011be <LCD_voidClear>:
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	cd b7       	in	r28, 0x3d	; 61
    11c4:	de b7       	in	r29, 0x3e	; 62
    11c6:	60 97       	sbiw	r28, 0x10	; 16
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	f8 94       	cli
    11cc:	de bf       	out	0x3e, r29	; 62
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	cd bf       	out	0x3d, r28	; 61
    11d2:	98 8b       	std	Y+16, r25	; 0x10
    11d4:	8f 87       	std	Y+15, r24	; 0x0f
    11d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    11d8:	98 89       	ldd	r25, Y+16	; 0x10
    11da:	61 e0       	ldi	r22, 0x01	; 1
    11dc:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
    11e0:	80 e0       	ldi	r24, 0x00	; 0
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	a0 e8       	ldi	r26, 0x80	; 128
    11e6:	bf e3       	ldi	r27, 0x3F	; 63
    11e8:	89 83       	std	Y+1, r24	; 0x01
    11ea:	9a 83       	std	Y+2, r25	; 0x02
    11ec:	ab 83       	std	Y+3, r26	; 0x03
    11ee:	bc 83       	std	Y+4, r27	; 0x04
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	4a e7       	ldi	r20, 0x7A	; 122
    11f6:	55 e4       	ldi	r21, 0x45	; 69
    11f8:	69 81       	ldd	r22, Y+1	; 0x01
    11fa:	7a 81       	ldd	r23, Y+2	; 0x02
    11fc:	8b 81       	ldd	r24, Y+3	; 0x03
    11fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1200:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    1204:	dc 01       	movw	r26, r24
    1206:	cb 01       	movw	r24, r22
    1208:	8d 83       	std	Y+5, r24	; 0x05
    120a:	9e 83       	std	Y+6, r25	; 0x06
    120c:	af 83       	std	Y+7, r26	; 0x07
    120e:	b8 87       	std	Y+8, r27	; 0x08
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	40 e8       	ldi	r20, 0x80	; 128
    1216:	5f e3       	ldi	r21, 0x3F	; 63
    1218:	6d 81       	ldd	r22, Y+5	; 0x05
    121a:	7e 81       	ldd	r23, Y+6	; 0x06
    121c:	8f 81       	ldd	r24, Y+7	; 0x07
    121e:	98 85       	ldd	r25, Y+8	; 0x08
    1220:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
    1224:	88 23       	and	r24, r24
    1226:	2c f4       	brge	.+10     	; 0x1232 <LCD_voidClear+0x74>
    1228:	81 e0       	ldi	r24, 0x01	; 1
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	9a 87       	std	Y+10, r25	; 0x0a
    122e:	89 87       	std	Y+9, r24	; 0x09
    1230:	3f c0       	rjmp	.+126    	; 0x12b0 <LCD_voidClear+0xf2>
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	3f ef       	ldi	r19, 0xFF	; 255
    1236:	4f e7       	ldi	r20, 0x7F	; 127
    1238:	57 e4       	ldi	r21, 0x47	; 71
    123a:	6d 81       	ldd	r22, Y+5	; 0x05
    123c:	7e 81       	ldd	r23, Y+6	; 0x06
    123e:	8f 81       	ldd	r24, Y+7	; 0x07
    1240:	98 85       	ldd	r25, Y+8	; 0x08
    1242:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
    1246:	18 16       	cp	r1, r24
    1248:	4c f5       	brge	.+82     	; 0x129c <LCD_voidClear+0xde>
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	40 e2       	ldi	r20, 0x20	; 32
    1250:	51 e4       	ldi	r21, 0x41	; 65
    1252:	69 81       	ldd	r22, Y+1	; 0x01
    1254:	7a 81       	ldd	r23, Y+2	; 0x02
    1256:	8b 81       	ldd	r24, Y+3	; 0x03
    1258:	9c 81       	ldd	r25, Y+4	; 0x04
    125a:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    125e:	dc 01       	movw	r26, r24
    1260:	cb 01       	movw	r24, r22
    1262:	bc 01       	movw	r22, r24
    1264:	cd 01       	movw	r24, r26
    1266:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    126a:	dc 01       	movw	r26, r24
    126c:	cb 01       	movw	r24, r22
    126e:	9a 87       	std	Y+10, r25	; 0x0a
    1270:	89 87       	std	Y+9, r24	; 0x09
    1272:	0f c0       	rjmp	.+30     	; 0x1292 <LCD_voidClear+0xd4>
    1274:	80 e9       	ldi	r24, 0x90	; 144
    1276:	91 e0       	ldi	r25, 0x01	; 1
    1278:	9c 87       	std	Y+12, r25	; 0x0c
    127a:	8b 87       	std	Y+11, r24	; 0x0b
    127c:	8b 85       	ldd	r24, Y+11	; 0x0b
    127e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1280:	01 97       	sbiw	r24, 0x01	; 1
    1282:	f1 f7       	brne	.-4      	; 0x1280 <LCD_voidClear+0xc2>
    1284:	9c 87       	std	Y+12, r25	; 0x0c
    1286:	8b 87       	std	Y+11, r24	; 0x0b
    1288:	89 85       	ldd	r24, Y+9	; 0x09
    128a:	9a 85       	ldd	r25, Y+10	; 0x0a
    128c:	01 97       	sbiw	r24, 0x01	; 1
    128e:	9a 87       	std	Y+10, r25	; 0x0a
    1290:	89 87       	std	Y+9, r24	; 0x09
    1292:	89 85       	ldd	r24, Y+9	; 0x09
    1294:	9a 85       	ldd	r25, Y+10	; 0x0a
    1296:	89 2b       	or	r24, r25
    1298:	69 f7       	brne	.-38     	; 0x1274 <LCD_voidClear+0xb6>
    129a:	14 c0       	rjmp	.+40     	; 0x12c4 <LCD_voidClear+0x106>
    129c:	6d 81       	ldd	r22, Y+5	; 0x05
    129e:	7e 81       	ldd	r23, Y+6	; 0x06
    12a0:	8f 81       	ldd	r24, Y+7	; 0x07
    12a2:	98 85       	ldd	r25, Y+8	; 0x08
    12a4:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    12a8:	dc 01       	movw	r26, r24
    12aa:	cb 01       	movw	r24, r22
    12ac:	9a 87       	std	Y+10, r25	; 0x0a
    12ae:	89 87       	std	Y+9, r24	; 0x09
    12b0:	89 85       	ldd	r24, Y+9	; 0x09
    12b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    12b4:	9e 87       	std	Y+14, r25	; 0x0e
    12b6:	8d 87       	std	Y+13, r24	; 0x0d
    12b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    12ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    12bc:	01 97       	sbiw	r24, 0x01	; 1
    12be:	f1 f7       	brne	.-4      	; 0x12bc <LCD_voidClear+0xfe>
    12c0:	9e 87       	std	Y+14, r25	; 0x0e
    12c2:	8d 87       	std	Y+13, r24	; 0x0d
    12c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    12c6:	98 89       	ldd	r25, Y+16	; 0x10
    12c8:	60 e8       	ldi	r22, 0x80	; 128
    12ca:	0e 94 71 09 	call	0x12e2	; 0x12e2 <LCD_voidWriteCmd>
    12ce:	00 00       	nop
    12d0:	60 96       	adiw	r28, 0x10	; 16
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	df 91       	pop	r29
    12de:	cf 91       	pop	r28
    12e0:	08 95       	ret

000012e2 <LCD_voidWriteCmd>:
/************************************ Static FCNs**********************************/
void LCD_voidWriteCmd(LCD_Config* x , u8 copy_u8Cmd)
{
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	cd b7       	in	r28, 0x3d	; 61
    12e8:	de b7       	in	r29, 0x3e	; 62
    12ea:	eb 97       	sbiw	r28, 0x3b	; 59
    12ec:	0f b6       	in	r0, 0x3f	; 63
    12ee:	f8 94       	cli
    12f0:	de bf       	out	0x3e, r29	; 62
    12f2:	0f be       	out	0x3f, r0	; 63
    12f4:	cd bf       	out	0x3d, r28	; 61
    12f6:	9a af       	std	Y+58, r25	; 0x3a
    12f8:	89 af       	std	Y+57, r24	; 0x39
    12fa:	6b af       	std	Y+59, r22	; 0x3b
		 

#elif LCD_Mode == _4_WIRE_MODE
		// Add CMD in Data Line

        GPIO_voidSetPinValue(_4_D4_PORT_PIN(x),GET_BIT(copy_u8Cmd,4));  //DB4
    12fc:	8b ad       	ldd	r24, Y+59	; 0x3b
    12fe:	82 95       	swap	r24
    1300:	8f 70       	andi	r24, 0x0F	; 15
    1302:	38 2f       	mov	r19, r24
    1304:	31 70       	andi	r19, 0x01	; 1
    1306:	89 ad       	ldd	r24, Y+57	; 0x39
    1308:	9a ad       	ldd	r25, Y+58	; 0x3a
    130a:	fc 01       	movw	r30, r24
    130c:	82 81       	ldd	r24, Z+2	; 0x02
    130e:	93 81       	ldd	r25, Z+3	; 0x03
    1310:	05 96       	adiw	r24, 0x05	; 5
    1312:	fc 01       	movw	r30, r24
    1314:	20 81       	ld	r18, Z
    1316:	89 ad       	ldd	r24, Y+57	; 0x39
    1318:	9a ad       	ldd	r25, Y+58	; 0x3a
    131a:	fc 01       	movw	r30, r24
    131c:	82 81       	ldd	r24, Z+2	; 0x02
    131e:	93 81       	ldd	r25, Z+3	; 0x03
    1320:	04 96       	adiw	r24, 0x04	; 4
    1322:	fc 01       	movw	r30, r24
    1324:	80 81       	ld	r24, Z
    1326:	43 2f       	mov	r20, r19
    1328:	62 2f       	mov	r22, r18
    132a:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D5_PORT_PIN(x),GET_BIT(copy_u8Cmd,5));  //DB5
    132e:	8b ad       	ldd	r24, Y+59	; 0x3b
    1330:	82 95       	swap	r24
    1332:	86 95       	lsr	r24
    1334:	87 70       	andi	r24, 0x07	; 7
    1336:	38 2f       	mov	r19, r24
    1338:	31 70       	andi	r19, 0x01	; 1
    133a:	89 ad       	ldd	r24, Y+57	; 0x39
    133c:	9a ad       	ldd	r25, Y+58	; 0x3a
    133e:	fc 01       	movw	r30, r24
    1340:	82 81       	ldd	r24, Z+2	; 0x02
    1342:	93 81       	ldd	r25, Z+3	; 0x03
    1344:	07 96       	adiw	r24, 0x07	; 7
    1346:	fc 01       	movw	r30, r24
    1348:	20 81       	ld	r18, Z
    134a:	89 ad       	ldd	r24, Y+57	; 0x39
    134c:	9a ad       	ldd	r25, Y+58	; 0x3a
    134e:	fc 01       	movw	r30, r24
    1350:	82 81       	ldd	r24, Z+2	; 0x02
    1352:	93 81       	ldd	r25, Z+3	; 0x03
    1354:	06 96       	adiw	r24, 0x06	; 6
    1356:	fc 01       	movw	r30, r24
    1358:	80 81       	ld	r24, Z
    135a:	43 2f       	mov	r20, r19
    135c:	62 2f       	mov	r22, r18
    135e:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D6_PORT_PIN(x),GET_BIT(copy_u8Cmd,6));  //DB6
    1362:	8b ad       	ldd	r24, Y+59	; 0x3b
    1364:	82 95       	swap	r24
    1366:	86 95       	lsr	r24
    1368:	86 95       	lsr	r24
    136a:	83 70       	andi	r24, 0x03	; 3
    136c:	38 2f       	mov	r19, r24
    136e:	31 70       	andi	r19, 0x01	; 1
    1370:	89 ad       	ldd	r24, Y+57	; 0x39
    1372:	9a ad       	ldd	r25, Y+58	; 0x3a
    1374:	fc 01       	movw	r30, r24
    1376:	82 81       	ldd	r24, Z+2	; 0x02
    1378:	93 81       	ldd	r25, Z+3	; 0x03
    137a:	09 96       	adiw	r24, 0x09	; 9
    137c:	fc 01       	movw	r30, r24
    137e:	20 81       	ld	r18, Z
    1380:	89 ad       	ldd	r24, Y+57	; 0x39
    1382:	9a ad       	ldd	r25, Y+58	; 0x3a
    1384:	fc 01       	movw	r30, r24
    1386:	82 81       	ldd	r24, Z+2	; 0x02
    1388:	93 81       	ldd	r25, Z+3	; 0x03
    138a:	08 96       	adiw	r24, 0x08	; 8
    138c:	fc 01       	movw	r30, r24
    138e:	80 81       	ld	r24, Z
    1390:	43 2f       	mov	r20, r19
    1392:	62 2f       	mov	r22, r18
    1394:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D7_PORT_PIN(x),GET_BIT(copy_u8Cmd,7));  //DB7 
    1398:	8b ad       	ldd	r24, Y+59	; 0x3b
    139a:	38 2f       	mov	r19, r24
    139c:	33 1f       	adc	r19, r19
    139e:	33 27       	eor	r19, r19
    13a0:	33 1f       	adc	r19, r19
    13a2:	89 ad       	ldd	r24, Y+57	; 0x39
    13a4:	9a ad       	ldd	r25, Y+58	; 0x3a
    13a6:	fc 01       	movw	r30, r24
    13a8:	82 81       	ldd	r24, Z+2	; 0x02
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	0b 96       	adiw	r24, 0x0b	; 11
    13ae:	fc 01       	movw	r30, r24
    13b0:	20 81       	ld	r18, Z
    13b2:	89 ad       	ldd	r24, Y+57	; 0x39
    13b4:	9a ad       	ldd	r25, Y+58	; 0x3a
    13b6:	fc 01       	movw	r30, r24
    13b8:	82 81       	ldd	r24, Z+2	; 0x02
    13ba:	93 81       	ldd	r25, Z+3	; 0x03
    13bc:	0a 96       	adiw	r24, 0x0a	; 10
    13be:	fc 01       	movw	r30, r24
    13c0:	80 81       	ld	r24, Z
    13c2:	43 2f       	mov	r20, r19
    13c4:	62 2f       	mov	r22, r18
    13c6:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RS_PORT_PIN(x) , LOW) ;
    13ca:	89 ad       	ldd	r24, Y+57	; 0x39
    13cc:	9a ad       	ldd	r25, Y+58	; 0x3a
    13ce:	fc 01       	movw	r30, r24
    13d0:	82 81       	ldd	r24, Z+2	; 0x02
    13d2:	93 81       	ldd	r25, Z+3	; 0x03
    13d4:	03 96       	adiw	r24, 0x03	; 3
    13d6:	fc 01       	movw	r30, r24
    13d8:	20 81       	ld	r18, Z
    13da:	89 ad       	ldd	r24, Y+57	; 0x39
    13dc:	9a ad       	ldd	r25, Y+58	; 0x3a
    13de:	fc 01       	movw	r30, r24
    13e0:	82 81       	ldd	r24, Z+2	; 0x02
    13e2:	93 81       	ldd	r25, Z+3	; 0x03
    13e4:	02 96       	adiw	r24, 0x02	; 2
    13e6:	fc 01       	movw	r30, r24
    13e8:	80 81       	ld	r24, Z
    13ea:	40 e0       	ldi	r20, 0x00	; 0
    13ec:	62 2f       	mov	r22, r18
    13ee:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
		WRITE_DATA_TO_LCD(x);		
    13f2:	89 ad       	ldd	r24, Y+57	; 0x39
    13f4:	9a ad       	ldd	r25, Y+58	; 0x3a
    13f6:	fc 01       	movw	r30, r24
    13f8:	82 81       	ldd	r24, Z+2	; 0x02
    13fa:	93 81       	ldd	r25, Z+3	; 0x03
    13fc:	01 96       	adiw	r24, 0x01	; 1
    13fe:	fc 01       	movw	r30, r24
    1400:	20 81       	ld	r18, Z
    1402:	89 ad       	ldd	r24, Y+57	; 0x39
    1404:	9a ad       	ldd	r25, Y+58	; 0x3a
    1406:	fc 01       	movw	r30, r24
    1408:	82 81       	ldd	r24, Z+2	; 0x02
    140a:	93 81       	ldd	r25, Z+3	; 0x03
    140c:	fc 01       	movw	r30, r24
    140e:	80 81       	ld	r24, Z
    1410:	41 e0       	ldi	r20, 0x01	; 1
    1412:	62 2f       	mov	r22, r18
    1414:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
    1418:	80 e0       	ldi	r24, 0x00	; 0
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	a0 e8       	ldi	r26, 0x80	; 128
    141e:	bf e3       	ldi	r27, 0x3F	; 63
    1420:	89 83       	std	Y+1, r24	; 0x01
    1422:	9a 83       	std	Y+2, r25	; 0x02
    1424:	ab 83       	std	Y+3, r26	; 0x03
    1426:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1428:	20 e0       	ldi	r18, 0x00	; 0
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	4a e7       	ldi	r20, 0x7A	; 122
    142e:	55 e4       	ldi	r21, 0x45	; 69
    1430:	69 81       	ldd	r22, Y+1	; 0x01
    1432:	7a 81       	ldd	r23, Y+2	; 0x02
    1434:	8b 81       	ldd	r24, Y+3	; 0x03
    1436:	9c 81       	ldd	r25, Y+4	; 0x04
    1438:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    143c:	dc 01       	movw	r26, r24
    143e:	cb 01       	movw	r24, r22
    1440:	8f a7       	std	Y+47, r24	; 0x2f
    1442:	98 ab       	std	Y+48, r25	; 0x30
    1444:	a9 ab       	std	Y+49, r26	; 0x31
    1446:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
    1448:	20 e0       	ldi	r18, 0x00	; 0
    144a:	30 e0       	ldi	r19, 0x00	; 0
    144c:	40 e8       	ldi	r20, 0x80	; 128
    144e:	5f e3       	ldi	r21, 0x3F	; 63
    1450:	6f a5       	ldd	r22, Y+47	; 0x2f
    1452:	78 a9       	ldd	r23, Y+48	; 0x30
    1454:	89 a9       	ldd	r24, Y+49	; 0x31
    1456:	9a a9       	ldd	r25, Y+50	; 0x32
    1458:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
    145c:	88 23       	and	r24, r24
    145e:	2c f4       	brge	.+10     	; 0x146a <LCD_voidWriteCmd+0x188>
		__ticks = 1;
    1460:	81 e0       	ldi	r24, 0x01	; 1
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	9c ab       	std	Y+52, r25	; 0x34
    1466:	8b ab       	std	Y+51, r24	; 0x33
    1468:	3f c0       	rjmp	.+126    	; 0x14e8 <LCD_voidWriteCmd+0x206>
	else if (__tmp > 65535)
    146a:	20 e0       	ldi	r18, 0x00	; 0
    146c:	3f ef       	ldi	r19, 0xFF	; 255
    146e:	4f e7       	ldi	r20, 0x7F	; 127
    1470:	57 e4       	ldi	r21, 0x47	; 71
    1472:	6f a5       	ldd	r22, Y+47	; 0x2f
    1474:	78 a9       	ldd	r23, Y+48	; 0x30
    1476:	89 a9       	ldd	r24, Y+49	; 0x31
    1478:	9a a9       	ldd	r25, Y+50	; 0x32
    147a:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
    147e:	18 16       	cp	r1, r24
    1480:	4c f5       	brge	.+82     	; 0x14d4 <LCD_voidWriteCmd+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1482:	20 e0       	ldi	r18, 0x00	; 0
    1484:	30 e0       	ldi	r19, 0x00	; 0
    1486:	40 e2       	ldi	r20, 0x20	; 32
    1488:	51 e4       	ldi	r21, 0x41	; 65
    148a:	69 81       	ldd	r22, Y+1	; 0x01
    148c:	7a 81       	ldd	r23, Y+2	; 0x02
    148e:	8b 81       	ldd	r24, Y+3	; 0x03
    1490:	9c 81       	ldd	r25, Y+4	; 0x04
    1492:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    1496:	dc 01       	movw	r26, r24
    1498:	cb 01       	movw	r24, r22
    149a:	bc 01       	movw	r22, r24
    149c:	cd 01       	movw	r24, r26
    149e:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    14a2:	dc 01       	movw	r26, r24
    14a4:	cb 01       	movw	r24, r22
    14a6:	9c ab       	std	Y+52, r25	; 0x34
    14a8:	8b ab       	std	Y+51, r24	; 0x33
    14aa:	0f c0       	rjmp	.+30     	; 0x14ca <LCD_voidWriteCmd+0x1e8>
    14ac:	80 e9       	ldi	r24, 0x90	; 144
    14ae:	91 e0       	ldi	r25, 0x01	; 1
    14b0:	9e ab       	std	Y+54, r25	; 0x36
    14b2:	8d ab       	std	Y+53, r24	; 0x35
    14b4:	8d a9       	ldd	r24, Y+53	; 0x35
    14b6:	9e a9       	ldd	r25, Y+54	; 0x36
    14b8:	01 97       	sbiw	r24, 0x01	; 1
    14ba:	f1 f7       	brne	.-4      	; 0x14b8 <LCD_voidWriteCmd+0x1d6>
    14bc:	9e ab       	std	Y+54, r25	; 0x36
    14be:	8d ab       	std	Y+53, r24	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14c0:	8b a9       	ldd	r24, Y+51	; 0x33
    14c2:	9c a9       	ldd	r25, Y+52	; 0x34
    14c4:	01 97       	sbiw	r24, 0x01	; 1
    14c6:	9c ab       	std	Y+52, r25	; 0x34
    14c8:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14ca:	8b a9       	ldd	r24, Y+51	; 0x33
    14cc:	9c a9       	ldd	r25, Y+52	; 0x34
    14ce:	89 2b       	or	r24, r25
    14d0:	69 f7       	brne	.-38     	; 0x14ac <LCD_voidWriteCmd+0x1ca>
    14d2:	14 c0       	rjmp	.+40     	; 0x14fc <LCD_voidWriteCmd+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14d4:	6f a5       	ldd	r22, Y+47	; 0x2f
    14d6:	78 a9       	ldd	r23, Y+48	; 0x30
    14d8:	89 a9       	ldd	r24, Y+49	; 0x31
    14da:	9a a9       	ldd	r25, Y+50	; 0x32
    14dc:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	9c ab       	std	Y+52, r25	; 0x34
    14e6:	8b ab       	std	Y+51, r24	; 0x33
    14e8:	8b a9       	ldd	r24, Y+51	; 0x33
    14ea:	9c a9       	ldd	r25, Y+52	; 0x34
    14ec:	98 af       	std	Y+56, r25	; 0x38
    14ee:	8f ab       	std	Y+55, r24	; 0x37
    14f0:	8f a9       	ldd	r24, Y+55	; 0x37
    14f2:	98 ad       	ldd	r25, Y+56	; 0x38
    14f4:	01 97       	sbiw	r24, 0x01	; 1
    14f6:	f1 f7       	brne	.-4      	; 0x14f4 <LCD_voidWriteCmd+0x212>
    14f8:	98 af       	std	Y+56, r25	; 0x38
    14fa:	8f ab       	std	Y+55, r24	; 0x37
    14fc:	89 ad       	ldd	r24, Y+57	; 0x39
    14fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    1500:	fc 01       	movw	r30, r24
    1502:	82 81       	ldd	r24, Z+2	; 0x02
    1504:	93 81       	ldd	r25, Z+3	; 0x03
    1506:	01 96       	adiw	r24, 0x01	; 1
    1508:	fc 01       	movw	r30, r24
    150a:	20 81       	ld	r18, Z
    150c:	89 ad       	ldd	r24, Y+57	; 0x39
    150e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1510:	fc 01       	movw	r30, r24
    1512:	82 81       	ldd	r24, Z+2	; 0x02
    1514:	93 81       	ldd	r25, Z+3	; 0x03
    1516:	fc 01       	movw	r30, r24
    1518:	80 81       	ld	r24, Z
    151a:	40 e0       	ldi	r20, 0x00	; 0
    151c:	62 2f       	mov	r22, r18
    151e:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	a0 e8       	ldi	r26, 0x80	; 128
    1528:	bf e3       	ldi	r27, 0x3F	; 63
    152a:	8d 83       	std	Y+5, r24	; 0x05
    152c:	9e 83       	std	Y+6, r25	; 0x06
    152e:	af 83       	std	Y+7, r26	; 0x07
    1530:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1532:	20 e0       	ldi	r18, 0x00	; 0
    1534:	30 e0       	ldi	r19, 0x00	; 0
    1536:	4a e7       	ldi	r20, 0x7A	; 122
    1538:	55 e4       	ldi	r21, 0x45	; 69
    153a:	6d 81       	ldd	r22, Y+5	; 0x05
    153c:	7e 81       	ldd	r23, Y+6	; 0x06
    153e:	8f 81       	ldd	r24, Y+7	; 0x07
    1540:	98 85       	ldd	r25, Y+8	; 0x08
    1542:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	8d a3       	std	Y+37, r24	; 0x25
    154c:	9e a3       	std	Y+38, r25	; 0x26
    154e:	af a3       	std	Y+39, r26	; 0x27
    1550:	b8 a7       	std	Y+40, r27	; 0x28
	if (__tmp < 1.0)
    1552:	20 e0       	ldi	r18, 0x00	; 0
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	40 e8       	ldi	r20, 0x80	; 128
    1558:	5f e3       	ldi	r21, 0x3F	; 63
    155a:	6d a1       	ldd	r22, Y+37	; 0x25
    155c:	7e a1       	ldd	r23, Y+38	; 0x26
    155e:	8f a1       	ldd	r24, Y+39	; 0x27
    1560:	98 a5       	ldd	r25, Y+40	; 0x28
    1562:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
    1566:	88 23       	and	r24, r24
    1568:	2c f4       	brge	.+10     	; 0x1574 <LCD_voidWriteCmd+0x292>
		__ticks = 1;
    156a:	81 e0       	ldi	r24, 0x01	; 1
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	9a a7       	std	Y+42, r25	; 0x2a
    1570:	89 a7       	std	Y+41, r24	; 0x29
    1572:	3f c0       	rjmp	.+126    	; 0x15f2 <LCD_voidWriteCmd+0x310>
	else if (__tmp > 65535)
    1574:	20 e0       	ldi	r18, 0x00	; 0
    1576:	3f ef       	ldi	r19, 0xFF	; 255
    1578:	4f e7       	ldi	r20, 0x7F	; 127
    157a:	57 e4       	ldi	r21, 0x47	; 71
    157c:	6d a1       	ldd	r22, Y+37	; 0x25
    157e:	7e a1       	ldd	r23, Y+38	; 0x26
    1580:	8f a1       	ldd	r24, Y+39	; 0x27
    1582:	98 a5       	ldd	r25, Y+40	; 0x28
    1584:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
    1588:	18 16       	cp	r1, r24
    158a:	4c f5       	brge	.+82     	; 0x15de <LCD_voidWriteCmd+0x2fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    158c:	20 e0       	ldi	r18, 0x00	; 0
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	40 e2       	ldi	r20, 0x20	; 32
    1592:	51 e4       	ldi	r21, 0x41	; 65
    1594:	6d 81       	ldd	r22, Y+5	; 0x05
    1596:	7e 81       	ldd	r23, Y+6	; 0x06
    1598:	8f 81       	ldd	r24, Y+7	; 0x07
    159a:	98 85       	ldd	r25, Y+8	; 0x08
    159c:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    15a0:	dc 01       	movw	r26, r24
    15a2:	cb 01       	movw	r24, r22
    15a4:	bc 01       	movw	r22, r24
    15a6:	cd 01       	movw	r24, r26
    15a8:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    15ac:	dc 01       	movw	r26, r24
    15ae:	cb 01       	movw	r24, r22
    15b0:	9a a7       	std	Y+42, r25	; 0x2a
    15b2:	89 a7       	std	Y+41, r24	; 0x29
    15b4:	0f c0       	rjmp	.+30     	; 0x15d4 <LCD_voidWriteCmd+0x2f2>
    15b6:	80 e9       	ldi	r24, 0x90	; 144
    15b8:	91 e0       	ldi	r25, 0x01	; 1
    15ba:	9c a7       	std	Y+44, r25	; 0x2c
    15bc:	8b a7       	std	Y+43, r24	; 0x2b
    15be:	8b a5       	ldd	r24, Y+43	; 0x2b
    15c0:	9c a5       	ldd	r25, Y+44	; 0x2c
    15c2:	01 97       	sbiw	r24, 0x01	; 1
    15c4:	f1 f7       	brne	.-4      	; 0x15c2 <LCD_voidWriteCmd+0x2e0>
    15c6:	9c a7       	std	Y+44, r25	; 0x2c
    15c8:	8b a7       	std	Y+43, r24	; 0x2b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ca:	89 a5       	ldd	r24, Y+41	; 0x29
    15cc:	9a a5       	ldd	r25, Y+42	; 0x2a
    15ce:	01 97       	sbiw	r24, 0x01	; 1
    15d0:	9a a7       	std	Y+42, r25	; 0x2a
    15d2:	89 a7       	std	Y+41, r24	; 0x29
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d4:	89 a5       	ldd	r24, Y+41	; 0x29
    15d6:	9a a5       	ldd	r25, Y+42	; 0x2a
    15d8:	89 2b       	or	r24, r25
    15da:	69 f7       	brne	.-38     	; 0x15b6 <LCD_voidWriteCmd+0x2d4>
    15dc:	14 c0       	rjmp	.+40     	; 0x1606 <LCD_voidWriteCmd+0x324>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15de:	6d a1       	ldd	r22, Y+37	; 0x25
    15e0:	7e a1       	ldd	r23, Y+38	; 0x26
    15e2:	8f a1       	ldd	r24, Y+39	; 0x27
    15e4:	98 a5       	ldd	r25, Y+40	; 0x28
    15e6:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    15ea:	dc 01       	movw	r26, r24
    15ec:	cb 01       	movw	r24, r22
    15ee:	9a a7       	std	Y+42, r25	; 0x2a
    15f0:	89 a7       	std	Y+41, r24	; 0x29
    15f2:	89 a5       	ldd	r24, Y+41	; 0x29
    15f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    15f6:	9e a7       	std	Y+46, r25	; 0x2e
    15f8:	8d a7       	std	Y+45, r24	; 0x2d
    15fa:	8d a5       	ldd	r24, Y+45	; 0x2d
    15fc:	9e a5       	ldd	r25, Y+46	; 0x2e
    15fe:	01 97       	sbiw	r24, 0x01	; 1
    1600:	f1 f7       	brne	.-4      	; 0x15fe <LCD_voidWriteCmd+0x31c>
    1602:	9e a7       	std	Y+46, r25	; 0x2e
    1604:	8d a7       	std	Y+45, r24	; 0x2d
        GPIO_voidSetPinValue(_4_D4_PORT_PIN(x),GET_BIT(copy_u8Cmd,0));  //DB4
    1606:	8b ad       	ldd	r24, Y+59	; 0x3b
    1608:	38 2f       	mov	r19, r24
    160a:	31 70       	andi	r19, 0x01	; 1
    160c:	89 ad       	ldd	r24, Y+57	; 0x39
    160e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1610:	fc 01       	movw	r30, r24
    1612:	82 81       	ldd	r24, Z+2	; 0x02
    1614:	93 81       	ldd	r25, Z+3	; 0x03
    1616:	05 96       	adiw	r24, 0x05	; 5
    1618:	fc 01       	movw	r30, r24
    161a:	20 81       	ld	r18, Z
    161c:	89 ad       	ldd	r24, Y+57	; 0x39
    161e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1620:	fc 01       	movw	r30, r24
    1622:	82 81       	ldd	r24, Z+2	; 0x02
    1624:	93 81       	ldd	r25, Z+3	; 0x03
    1626:	04 96       	adiw	r24, 0x04	; 4
    1628:	fc 01       	movw	r30, r24
    162a:	80 81       	ld	r24, Z
    162c:	43 2f       	mov	r20, r19
    162e:	62 2f       	mov	r22, r18
    1630:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D5_PORT_PIN(x),GET_BIT(copy_u8Cmd,1));  //DB5
    1634:	8b ad       	ldd	r24, Y+59	; 0x3b
    1636:	86 95       	lsr	r24
    1638:	38 2f       	mov	r19, r24
    163a:	31 70       	andi	r19, 0x01	; 1
    163c:	89 ad       	ldd	r24, Y+57	; 0x39
    163e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1640:	fc 01       	movw	r30, r24
    1642:	82 81       	ldd	r24, Z+2	; 0x02
    1644:	93 81       	ldd	r25, Z+3	; 0x03
    1646:	07 96       	adiw	r24, 0x07	; 7
    1648:	fc 01       	movw	r30, r24
    164a:	20 81       	ld	r18, Z
    164c:	89 ad       	ldd	r24, Y+57	; 0x39
    164e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1650:	fc 01       	movw	r30, r24
    1652:	82 81       	ldd	r24, Z+2	; 0x02
    1654:	93 81       	ldd	r25, Z+3	; 0x03
    1656:	06 96       	adiw	r24, 0x06	; 6
    1658:	fc 01       	movw	r30, r24
    165a:	80 81       	ld	r24, Z
    165c:	43 2f       	mov	r20, r19
    165e:	62 2f       	mov	r22, r18
    1660:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D6_PORT_PIN(x),GET_BIT(copy_u8Cmd,2));  //DB6
    1664:	8b ad       	ldd	r24, Y+59	; 0x3b
    1666:	86 95       	lsr	r24
    1668:	86 95       	lsr	r24
    166a:	38 2f       	mov	r19, r24
    166c:	31 70       	andi	r19, 0x01	; 1
    166e:	89 ad       	ldd	r24, Y+57	; 0x39
    1670:	9a ad       	ldd	r25, Y+58	; 0x3a
    1672:	fc 01       	movw	r30, r24
    1674:	82 81       	ldd	r24, Z+2	; 0x02
    1676:	93 81       	ldd	r25, Z+3	; 0x03
    1678:	09 96       	adiw	r24, 0x09	; 9
    167a:	fc 01       	movw	r30, r24
    167c:	20 81       	ld	r18, Z
    167e:	89 ad       	ldd	r24, Y+57	; 0x39
    1680:	9a ad       	ldd	r25, Y+58	; 0x3a
    1682:	fc 01       	movw	r30, r24
    1684:	82 81       	ldd	r24, Z+2	; 0x02
    1686:	93 81       	ldd	r25, Z+3	; 0x03
    1688:	08 96       	adiw	r24, 0x08	; 8
    168a:	fc 01       	movw	r30, r24
    168c:	80 81       	ld	r24, Z
    168e:	43 2f       	mov	r20, r19
    1690:	62 2f       	mov	r22, r18
    1692:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D7_PORT_PIN(x),GET_BIT(copy_u8Cmd,3));  //DB7 	
    1696:	8b ad       	ldd	r24, Y+59	; 0x3b
    1698:	86 95       	lsr	r24
    169a:	86 95       	lsr	r24
    169c:	86 95       	lsr	r24
    169e:	38 2f       	mov	r19, r24
    16a0:	31 70       	andi	r19, 0x01	; 1
    16a2:	89 ad       	ldd	r24, Y+57	; 0x39
    16a4:	9a ad       	ldd	r25, Y+58	; 0x3a
    16a6:	fc 01       	movw	r30, r24
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	0b 96       	adiw	r24, 0x0b	; 11
    16ae:	fc 01       	movw	r30, r24
    16b0:	20 81       	ld	r18, Z
    16b2:	89 ad       	ldd	r24, Y+57	; 0x39
    16b4:	9a ad       	ldd	r25, Y+58	; 0x3a
    16b6:	fc 01       	movw	r30, r24
    16b8:	82 81       	ldd	r24, Z+2	; 0x02
    16ba:	93 81       	ldd	r25, Z+3	; 0x03
    16bc:	0a 96       	adiw	r24, 0x0a	; 10
    16be:	fc 01       	movw	r30, r24
    16c0:	80 81       	ld	r24, Z
    16c2:	43 2f       	mov	r20, r19
    16c4:	62 2f       	mov	r22, r18
    16c6:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RS_PORT_PIN(x) , LOW) ;
    16ca:	89 ad       	ldd	r24, Y+57	; 0x39
    16cc:	9a ad       	ldd	r25, Y+58	; 0x3a
    16ce:	fc 01       	movw	r30, r24
    16d0:	82 81       	ldd	r24, Z+2	; 0x02
    16d2:	93 81       	ldd	r25, Z+3	; 0x03
    16d4:	03 96       	adiw	r24, 0x03	; 3
    16d6:	fc 01       	movw	r30, r24
    16d8:	20 81       	ld	r18, Z
    16da:	89 ad       	ldd	r24, Y+57	; 0x39
    16dc:	9a ad       	ldd	r25, Y+58	; 0x3a
    16de:	fc 01       	movw	r30, r24
    16e0:	82 81       	ldd	r24, Z+2	; 0x02
    16e2:	93 81       	ldd	r25, Z+3	; 0x03
    16e4:	02 96       	adiw	r24, 0x02	; 2
    16e6:	fc 01       	movw	r30, r24
    16e8:	80 81       	ld	r24, Z
    16ea:	40 e0       	ldi	r20, 0x00	; 0
    16ec:	62 2f       	mov	r22, r18
    16ee:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
		WRITE_DATA_TO_LCD(x);		
    16f2:	89 ad       	ldd	r24, Y+57	; 0x39
    16f4:	9a ad       	ldd	r25, Y+58	; 0x3a
    16f6:	fc 01       	movw	r30, r24
    16f8:	82 81       	ldd	r24, Z+2	; 0x02
    16fa:	93 81       	ldd	r25, Z+3	; 0x03
    16fc:	01 96       	adiw	r24, 0x01	; 1
    16fe:	fc 01       	movw	r30, r24
    1700:	20 81       	ld	r18, Z
    1702:	89 ad       	ldd	r24, Y+57	; 0x39
    1704:	9a ad       	ldd	r25, Y+58	; 0x3a
    1706:	fc 01       	movw	r30, r24
    1708:	82 81       	ldd	r24, Z+2	; 0x02
    170a:	93 81       	ldd	r25, Z+3	; 0x03
    170c:	fc 01       	movw	r30, r24
    170e:	80 81       	ld	r24, Z
    1710:	41 e0       	ldi	r20, 0x01	; 1
    1712:	62 2f       	mov	r22, r18
    1714:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	a0 e8       	ldi	r26, 0x80	; 128
    171e:	bf e3       	ldi	r27, 0x3F	; 63
    1720:	89 87       	std	Y+9, r24	; 0x09
    1722:	9a 87       	std	Y+10, r25	; 0x0a
    1724:	ab 87       	std	Y+11, r26	; 0x0b
    1726:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1728:	20 e0       	ldi	r18, 0x00	; 0
    172a:	30 e0       	ldi	r19, 0x00	; 0
    172c:	4a e7       	ldi	r20, 0x7A	; 122
    172e:	55 e4       	ldi	r21, 0x45	; 69
    1730:	69 85       	ldd	r22, Y+9	; 0x09
    1732:	7a 85       	ldd	r23, Y+10	; 0x0a
    1734:	8b 85       	ldd	r24, Y+11	; 0x0b
    1736:	9c 85       	ldd	r25, Y+12	; 0x0c
    1738:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    173c:	dc 01       	movw	r26, r24
    173e:	cb 01       	movw	r24, r22
    1740:	8b 8f       	std	Y+27, r24	; 0x1b
    1742:	9c 8f       	std	Y+28, r25	; 0x1c
    1744:	ad 8f       	std	Y+29, r26	; 0x1d
    1746:	be 8f       	std	Y+30, r27	; 0x1e
	if (__tmp < 1.0)
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	40 e8       	ldi	r20, 0x80	; 128
    174e:	5f e3       	ldi	r21, 0x3F	; 63
    1750:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1752:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1754:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1756:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1758:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
    175c:	88 23       	and	r24, r24
    175e:	2c f4       	brge	.+10     	; 0x176a <LCD_voidWriteCmd+0x488>
		__ticks = 1;
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	98 a3       	std	Y+32, r25	; 0x20
    1766:	8f 8f       	std	Y+31, r24	; 0x1f
    1768:	3f c0       	rjmp	.+126    	; 0x17e8 <LCD_voidWriteCmd+0x506>
	else if (__tmp > 65535)
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	3f ef       	ldi	r19, 0xFF	; 255
    176e:	4f e7       	ldi	r20, 0x7F	; 127
    1770:	57 e4       	ldi	r21, 0x47	; 71
    1772:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1774:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1776:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1778:	9e 8d       	ldd	r25, Y+30	; 0x1e
    177a:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
    177e:	18 16       	cp	r1, r24
    1780:	4c f5       	brge	.+82     	; 0x17d4 <LCD_voidWriteCmd+0x4f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1782:	20 e0       	ldi	r18, 0x00	; 0
    1784:	30 e0       	ldi	r19, 0x00	; 0
    1786:	40 e2       	ldi	r20, 0x20	; 32
    1788:	51 e4       	ldi	r21, 0x41	; 65
    178a:	69 85       	ldd	r22, Y+9	; 0x09
    178c:	7a 85       	ldd	r23, Y+10	; 0x0a
    178e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1790:	9c 85       	ldd	r25, Y+12	; 0x0c
    1792:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    1796:	dc 01       	movw	r26, r24
    1798:	cb 01       	movw	r24, r22
    179a:	bc 01       	movw	r22, r24
    179c:	cd 01       	movw	r24, r26
    179e:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    17a2:	dc 01       	movw	r26, r24
    17a4:	cb 01       	movw	r24, r22
    17a6:	98 a3       	std	Y+32, r25	; 0x20
    17a8:	8f 8f       	std	Y+31, r24	; 0x1f
    17aa:	0f c0       	rjmp	.+30     	; 0x17ca <LCD_voidWriteCmd+0x4e8>
    17ac:	80 e9       	ldi	r24, 0x90	; 144
    17ae:	91 e0       	ldi	r25, 0x01	; 1
    17b0:	9a a3       	std	Y+34, r25	; 0x22
    17b2:	89 a3       	std	Y+33, r24	; 0x21
    17b4:	89 a1       	ldd	r24, Y+33	; 0x21
    17b6:	9a a1       	ldd	r25, Y+34	; 0x22
    17b8:	01 97       	sbiw	r24, 0x01	; 1
    17ba:	f1 f7       	brne	.-4      	; 0x17b8 <LCD_voidWriteCmd+0x4d6>
    17bc:	9a a3       	std	Y+34, r25	; 0x22
    17be:	89 a3       	std	Y+33, r24	; 0x21
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17c0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    17c2:	98 a1       	ldd	r25, Y+32	; 0x20
    17c4:	01 97       	sbiw	r24, 0x01	; 1
    17c6:	98 a3       	std	Y+32, r25	; 0x20
    17c8:	8f 8f       	std	Y+31, r24	; 0x1f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17ca:	8f 8d       	ldd	r24, Y+31	; 0x1f
    17cc:	98 a1       	ldd	r25, Y+32	; 0x20
    17ce:	89 2b       	or	r24, r25
    17d0:	69 f7       	brne	.-38     	; 0x17ac <LCD_voidWriteCmd+0x4ca>
    17d2:	14 c0       	rjmp	.+40     	; 0x17fc <LCD_voidWriteCmd+0x51a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17d4:	6b 8d       	ldd	r22, Y+27	; 0x1b
    17d6:	7c 8d       	ldd	r23, Y+28	; 0x1c
    17d8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17da:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17dc:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    17e0:	dc 01       	movw	r26, r24
    17e2:	cb 01       	movw	r24, r22
    17e4:	98 a3       	std	Y+32, r25	; 0x20
    17e6:	8f 8f       	std	Y+31, r24	; 0x1f
    17e8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    17ea:	98 a1       	ldd	r25, Y+32	; 0x20
    17ec:	9c a3       	std	Y+36, r25	; 0x24
    17ee:	8b a3       	std	Y+35, r24	; 0x23
    17f0:	8b a1       	ldd	r24, Y+35	; 0x23
    17f2:	9c a1       	ldd	r25, Y+36	; 0x24
    17f4:	01 97       	sbiw	r24, 0x01	; 1
    17f6:	f1 f7       	brne	.-4      	; 0x17f4 <LCD_voidWriteCmd+0x512>
    17f8:	9c a3       	std	Y+36, r25	; 0x24
    17fa:	8b a3       	std	Y+35, r24	; 0x23
    17fc:	89 ad       	ldd	r24, Y+57	; 0x39
    17fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    1800:	fc 01       	movw	r30, r24
    1802:	82 81       	ldd	r24, Z+2	; 0x02
    1804:	93 81       	ldd	r25, Z+3	; 0x03
    1806:	01 96       	adiw	r24, 0x01	; 1
    1808:	fc 01       	movw	r30, r24
    180a:	20 81       	ld	r18, Z
    180c:	89 ad       	ldd	r24, Y+57	; 0x39
    180e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1810:	fc 01       	movw	r30, r24
    1812:	82 81       	ldd	r24, Z+2	; 0x02
    1814:	93 81       	ldd	r25, Z+3	; 0x03
    1816:	fc 01       	movw	r30, r24
    1818:	80 81       	ld	r24, Z
    181a:	40 e0       	ldi	r20, 0x00	; 0
    181c:	62 2f       	mov	r22, r18
    181e:	0e 94 2c 10 	call	0x2058	; 0x2058 <GPIO_voidSetPinValue>
    1822:	80 e0       	ldi	r24, 0x00	; 0
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	a0 e8       	ldi	r26, 0x80	; 128
    1828:	bf e3       	ldi	r27, 0x3F	; 63
    182a:	8d 87       	std	Y+13, r24	; 0x0d
    182c:	9e 87       	std	Y+14, r25	; 0x0e
    182e:	af 87       	std	Y+15, r26	; 0x0f
    1830:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	4a e7       	ldi	r20, 0x7A	; 122
    1838:	55 e4       	ldi	r21, 0x45	; 69
    183a:	6d 85       	ldd	r22, Y+13	; 0x0d
    183c:	7e 85       	ldd	r23, Y+14	; 0x0e
    183e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1840:	98 89       	ldd	r25, Y+16	; 0x10
    1842:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    1846:	dc 01       	movw	r26, r24
    1848:	cb 01       	movw	r24, r22
    184a:	89 8b       	std	Y+17, r24	; 0x11
    184c:	9a 8b       	std	Y+18, r25	; 0x12
    184e:	ab 8b       	std	Y+19, r26	; 0x13
    1850:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	40 e8       	ldi	r20, 0x80	; 128
    1858:	5f e3       	ldi	r21, 0x3F	; 63
    185a:	69 89       	ldd	r22, Y+17	; 0x11
    185c:	7a 89       	ldd	r23, Y+18	; 0x12
    185e:	8b 89       	ldd	r24, Y+19	; 0x13
    1860:	9c 89       	ldd	r25, Y+20	; 0x14
    1862:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <__cmpsf2>
    1866:	88 23       	and	r24, r24
    1868:	2c f4       	brge	.+10     	; 0x1874 <LCD_voidWriteCmd+0x592>
		__ticks = 1;
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	9e 8b       	std	Y+22, r25	; 0x16
    1870:	8d 8b       	std	Y+21, r24	; 0x15
    1872:	3f c0       	rjmp	.+126    	; 0x18f2 <LCD_voidWriteCmd+0x610>
	else if (__tmp > 65535)
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	3f ef       	ldi	r19, 0xFF	; 255
    1878:	4f e7       	ldi	r20, 0x7F	; 127
    187a:	57 e4       	ldi	r21, 0x47	; 71
    187c:	69 89       	ldd	r22, Y+17	; 0x11
    187e:	7a 89       	ldd	r23, Y+18	; 0x12
    1880:	8b 89       	ldd	r24, Y+19	; 0x13
    1882:	9c 89       	ldd	r25, Y+20	; 0x14
    1884:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__gesf2>
    1888:	18 16       	cp	r1, r24
    188a:	4c f5       	brge	.+82     	; 0x18de <LCD_voidWriteCmd+0x5fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    188c:	20 e0       	ldi	r18, 0x00	; 0
    188e:	30 e0       	ldi	r19, 0x00	; 0
    1890:	40 e2       	ldi	r20, 0x20	; 32
    1892:	51 e4       	ldi	r21, 0x41	; 65
    1894:	6d 85       	ldd	r22, Y+13	; 0x0d
    1896:	7e 85       	ldd	r23, Y+14	; 0x0e
    1898:	8f 85       	ldd	r24, Y+15	; 0x0f
    189a:	98 89       	ldd	r25, Y+16	; 0x10
    189c:	0e 94 27 17 	call	0x2e4e	; 0x2e4e <__mulsf3>
    18a0:	dc 01       	movw	r26, r24
    18a2:	cb 01       	movw	r24, r22
    18a4:	bc 01       	movw	r22, r24
    18a6:	cd 01       	movw	r24, r26
    18a8:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    18ac:	dc 01       	movw	r26, r24
    18ae:	cb 01       	movw	r24, r22
    18b0:	9e 8b       	std	Y+22, r25	; 0x16
    18b2:	8d 8b       	std	Y+21, r24	; 0x15
    18b4:	0f c0       	rjmp	.+30     	; 0x18d4 <LCD_voidWriteCmd+0x5f2>
    18b6:	80 e9       	ldi	r24, 0x90	; 144
    18b8:	91 e0       	ldi	r25, 0x01	; 1
    18ba:	98 8f       	std	Y+24, r25	; 0x18
    18bc:	8f 8b       	std	Y+23, r24	; 0x17
    18be:	8f 89       	ldd	r24, Y+23	; 0x17
    18c0:	98 8d       	ldd	r25, Y+24	; 0x18
    18c2:	01 97       	sbiw	r24, 0x01	; 1
    18c4:	f1 f7       	brne	.-4      	; 0x18c2 <LCD_voidWriteCmd+0x5e0>
    18c6:	98 8f       	std	Y+24, r25	; 0x18
    18c8:	8f 8b       	std	Y+23, r24	; 0x17
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18ca:	8d 89       	ldd	r24, Y+21	; 0x15
    18cc:	9e 89       	ldd	r25, Y+22	; 0x16
    18ce:	01 97       	sbiw	r24, 0x01	; 1
    18d0:	9e 8b       	std	Y+22, r25	; 0x16
    18d2:	8d 8b       	std	Y+21, r24	; 0x15
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d4:	8d 89       	ldd	r24, Y+21	; 0x15
    18d6:	9e 89       	ldd	r25, Y+22	; 0x16
    18d8:	89 2b       	or	r24, r25
    18da:	69 f7       	brne	.-38     	; 0x18b6 <LCD_voidWriteCmd+0x5d4>

#endif
}
    18dc:	14 c0       	rjmp	.+40     	; 0x1906 <LCD_voidWriteCmd+0x624>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18de:	69 89       	ldd	r22, Y+17	; 0x11
    18e0:	7a 89       	ldd	r23, Y+18	; 0x12
    18e2:	8b 89       	ldd	r24, Y+19	; 0x13
    18e4:	9c 89       	ldd	r25, Y+20	; 0x14
    18e6:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <__fixunssfsi>
    18ea:	dc 01       	movw	r26, r24
    18ec:	cb 01       	movw	r24, r22
    18ee:	9e 8b       	std	Y+22, r25	; 0x16
    18f0:	8d 8b       	std	Y+21, r24	; 0x15
    18f2:	8d 89       	ldd	r24, Y+21	; 0x15
    18f4:	9e 89       	ldd	r25, Y+22	; 0x16
    18f6:	9a 8f       	std	Y+26, r25	; 0x1a
    18f8:	89 8f       	std	Y+25, r24	; 0x19
    18fa:	89 8d       	ldd	r24, Y+25	; 0x19
    18fc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18fe:	01 97       	sbiw	r24, 0x01	; 1
    1900:	f1 f7       	brne	.-4      	; 0x18fe <LCD_voidWriteCmd+0x61c>
    1902:	9a 8f       	std	Y+26, r25	; 0x1a
    1904:	89 8f       	std	Y+25, r24	; 0x19
    1906:	00 00       	nop
    1908:	eb 96       	adiw	r28, 0x3b	; 59
    190a:	0f b6       	in	r0, 0x3f	; 63
    190c:	f8 94       	cli
    190e:	de bf       	out	0x3e, r29	; 62
    1910:	0f be       	out	0x3f, r0	; 63
    1912:	cd bf       	out	0x3d, r28	; 61
    1914:	df 91       	pop	r29
    1916:	cf 91       	pop	r28
    1918:	08 95       	ret

0000191a <PIR_voidInit>:
    191a:	cf 93       	push	r28
    191c:	df 93       	push	r29
    191e:	cd b7       	in	r28, 0x3d	; 61
    1920:	de b7       	in	r29, 0x3e	; 62
    1922:	40 e0       	ldi	r20, 0x00	; 0
    1924:	61 e0       	ldi	r22, 0x01	; 1
    1926:	80 e0       	ldi	r24, 0x00	; 0
    1928:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
    192c:	00 00       	nop
    192e:	df 91       	pop	r29
    1930:	cf 91       	pop	r28
    1932:	08 95       	ret

00001934 <PIR_u8ExistMovement>:
    1934:	cf 93       	push	r28
    1936:	df 93       	push	r29
    1938:	1f 92       	push	r1
    193a:	cd b7       	in	r28, 0x3d	; 61
    193c:	de b7       	in	r29, 0x3e	; 62
    193e:	19 82       	std	Y+1, r1	; 0x01
    1940:	61 e0       	ldi	r22, 0x01	; 1
    1942:	80 e0       	ldi	r24, 0x00	; 0
    1944:	0e 94 25 11 	call	0x224a	; 0x224a <GPIO_u8GetPinValue>
    1948:	89 83       	std	Y+1, r24	; 0x01
    194a:	89 81       	ldd	r24, Y+1	; 0x01
    194c:	0f 90       	pop	r0
    194e:	df 91       	pop	r29
    1950:	cf 91       	pop	r28
    1952:	08 95       	ret

00001954 <RFID_ReceivedData>:
    1954:	cf 93       	push	r28
    1956:	df 93       	push	r29
    1958:	00 d0       	rcall	.+0      	; 0x195a <RFID_ReceivedData+0x6>
    195a:	cd b7       	in	r28, 0x3d	; 61
    195c:	de b7       	in	r29, 0x3e	; 62
    195e:	8a 83       	std	Y+2, r24	; 0x02
    1960:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <Global_RFID_State>
    1964:	88 23       	and	r24, r24
    1966:	11 f5       	brne	.+68     	; 0x19ac <RFID_ReceivedData+0x58>
    1968:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <Global_ID_Counter>
    196c:	88 2f       	mov	r24, r24
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	8f 51       	subi	r24, 0x1F	; 31
    1972:	9f 4f       	sbci	r25, 0xFF	; 255
    1974:	fc 01       	movw	r30, r24
    1976:	10 82       	st	Z, r1
    1978:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <Global_Name_Counter>
    197c:	88 2f       	mov	r24, r24
    197e:	90 e0       	ldi	r25, 0x00	; 0
    1980:	8a 52       	subi	r24, 0x2A	; 42
    1982:	9f 4f       	sbci	r25, 0xFF	; 255
    1984:	fc 01       	movw	r30, r24
    1986:	10 82       	st	Z, r1
    1988:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <Global_ID_Counter>
    198c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <Global_Name_Counter>
    1990:	81 e0       	ldi	r24, 0x01	; 1
    1992:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <Global_RFID_State>
    1996:	20 91 be 00 	lds	r18, 0x00BE	; 0x8000be <_UART_RFID_Callback>
    199a:	30 91 bf 00 	lds	r19, 0x00BF	; 0x8000bf <_UART_RFID_Callback+0x1>
    199e:	61 ee       	ldi	r22, 0xE1	; 225
    19a0:	70 e0       	ldi	r23, 0x00	; 0
    19a2:	86 ed       	ldi	r24, 0xD6	; 214
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	f9 01       	movw	r30, r18
    19a8:	09 95       	icall
    19aa:	50 c0       	rjmp	.+160    	; 0x1a4c <RFID_ReceivedData+0xf8>
    19ac:	19 82       	std	Y+1, r1	; 0x01
    19ae:	8a 81       	ldd	r24, Y+2	; 0x02
    19b0:	89 83       	std	Y+1, r24	; 0x01
    19b2:	89 81       	ldd	r24, Y+1	; 0x01
    19b4:	80 33       	cpi	r24, 0x30	; 48
    19b6:	c8 f0       	brcs	.+50     	; 0x19ea <RFID_ReceivedData+0x96>
    19b8:	89 81       	ldd	r24, Y+1	; 0x01
    19ba:	8a 33       	cpi	r24, 0x3A	; 58
    19bc:	b0 f4       	brcc	.+44     	; 0x19ea <RFID_ReceivedData+0x96>
    19be:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <Global_ID_Counter>
    19c2:	87 30       	cpi	r24, 0x07	; 7
    19c4:	d1 f1       	breq	.+116    	; 0x1a3a <RFID_ReceivedData+0xe6>
    19c6:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <Global_ID_Counter>
    19ca:	88 2f       	mov	r24, r24
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	8f 51       	subi	r24, 0x1F	; 31
    19d0:	9f 4f       	sbci	r25, 0xFF	; 255
    19d2:	29 81       	ldd	r18, Y+1	; 0x01
    19d4:	fc 01       	movw	r30, r24
    19d6:	20 83       	st	Z, r18
    19d8:	89 81       	ldd	r24, Y+1	; 0x01
    19da:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <MCAL_USART_TxByteSynch>
    19de:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <Global_ID_Counter>
    19e2:	8f 5f       	subi	r24, 0xFF	; 255
    19e4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <Global_ID_Counter>
    19e8:	28 c0       	rjmp	.+80     	; 0x1a3a <RFID_ReceivedData+0xe6>
    19ea:	89 81       	ldd	r24, Y+1	; 0x01
    19ec:	81 36       	cpi	r24, 0x61	; 97
    19ee:	18 f0       	brcs	.+6      	; 0x19f6 <RFID_ReceivedData+0xa2>
    19f0:	89 81       	ldd	r24, Y+1	; 0x01
    19f2:	8b 37       	cpi	r24, 0x7B	; 123
    19f4:	30 f0       	brcs	.+12     	; 0x1a02 <RFID_ReceivedData+0xae>
    19f6:	89 81       	ldd	r24, Y+1	; 0x01
    19f8:	81 34       	cpi	r24, 0x41	; 65
    19fa:	c8 f0       	brcs	.+50     	; 0x1a2e <RFID_ReceivedData+0xda>
    19fc:	89 81       	ldd	r24, Y+1	; 0x01
    19fe:	8b 35       	cpi	r24, 0x5B	; 91
    1a00:	b0 f4       	brcc	.+44     	; 0x1a2e <RFID_ReceivedData+0xda>
    1a02:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <Global_Name_Counter>
    1a06:	8a 30       	cpi	r24, 0x0A	; 10
    1a08:	c1 f0       	breq	.+48     	; 0x1a3a <RFID_ReceivedData+0xe6>
    1a0a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <Global_Name_Counter>
    1a0e:	88 2f       	mov	r24, r24
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	8a 52       	subi	r24, 0x2A	; 42
    1a14:	9f 4f       	sbci	r25, 0xFF	; 255
    1a16:	29 81       	ldd	r18, Y+1	; 0x01
    1a18:	fc 01       	movw	r30, r24
    1a1a:	20 83       	st	Z, r18
    1a1c:	89 81       	ldd	r24, Y+1	; 0x01
    1a1e:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <MCAL_USART_TxByteSynch>
    1a22:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <Global_Name_Counter>
    1a26:	8f 5f       	subi	r24, 0xFF	; 255
    1a28:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <Global_Name_Counter>
    1a2c:	06 c0       	rjmp	.+12     	; 0x1a3a <RFID_ReceivedData+0xe6>
    1a2e:	8d e0       	ldi	r24, 0x0D	; 13
    1a30:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <MCAL_USART_TxByteSynch>
    1a34:	8a e0       	ldi	r24, 0x0A	; 10
    1a36:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <MCAL_USART_TxByteSynch>
    1a3a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <Global_ID_Counter>
    1a3e:	87 30       	cpi	r24, 0x07	; 7
    1a40:	29 f4       	brne	.+10     	; 0x1a4c <RFID_ReceivedData+0xf8>
    1a42:	89 81       	ldd	r24, Y+1	; 0x01
    1a44:	8d 30       	cpi	r24, 0x0D	; 13
    1a46:	11 f4       	brne	.+4      	; 0x1a4c <RFID_ReceivedData+0xf8>
    1a48:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <Global_RFID_State>
    1a4c:	00 00       	nop
    1a4e:	0f 90       	pop	r0
    1a50:	0f 90       	pop	r0
    1a52:	df 91       	pop	r29
    1a54:	cf 91       	pop	r28
    1a56:	08 95       	ret

00001a58 <RFID_voidInit>:
    1a58:	cf 93       	push	r28
    1a5a:	df 93       	push	r29
    1a5c:	cd b7       	in	r28, 0x3d	; 61
    1a5e:	de b7       	in	r29, 0x3e	; 62
    1a60:	87 e7       	ldi	r24, 0x77	; 119
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <MCAL_USART_init>
    1a68:	00 00       	nop
    1a6a:	df 91       	pop	r29
    1a6c:	cf 91       	pop	r28
    1a6e:	08 95       	ret

00001a70 <RFID_voidGetData_Asynch>:
    1a70:	cf 93       	push	r28
    1a72:	df 93       	push	r29
    1a74:	00 d0       	rcall	.+0      	; 0x1a76 <RFID_voidGetData_Asynch+0x6>
    1a76:	cd b7       	in	r28, 0x3d	; 61
    1a78:	de b7       	in	r29, 0x3e	; 62
    1a7a:	9a 83       	std	Y+2, r25	; 0x02
    1a7c:	89 83       	std	Y+1, r24	; 0x01
    1a7e:	8a ea       	ldi	r24, 0xAA	; 170
    1a80:	9c e0       	ldi	r25, 0x0C	; 12
    1a82:	0e 94 01 16 	call	0x2c02	; 0x2c02 <MCAL_USART_RxByteAsynch>
    1a86:	89 81       	ldd	r24, Y+1	; 0x01
    1a88:	9a 81       	ldd	r25, Y+2	; 0x02
    1a8a:	90 93 bf 00 	sts	0x00BF, r25	; 0x8000bf <_UART_RFID_Callback+0x1>
    1a8e:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <_UART_RFID_Callback>
    1a92:	00 00       	nop
    1a94:	0f 90       	pop	r0
    1a96:	0f 90       	pop	r0
    1a98:	df 91       	pop	r29
    1a9a:	cf 91       	pop	r28
    1a9c:	08 95       	ret

00001a9e <main>:

#include "APP/APP.h" 


int main(void)
{
    1a9e:	cf 93       	push	r28
    1aa0:	df 93       	push	r29
    1aa2:	cd b7       	in	r28, 0x3d	; 61
    1aa4:	de b7       	in	r29, 0x3e	; 62
	ECU1_Entance_APP_SETUP() ; 
    1aa6:	0e 94 de 02 	call	0x5bc	; 0x5bc <ECU1_Entance_APP_SETUP>
    while (1) 
    {
		ECU1_Entance_APP_LOOP() ; 
    1aaa:	0e 94 0d 03 	call	0x61a	; 0x61a <ECU1_Entance_APP_LOOP>
    }
    1aae:	fd cf       	rjmp	.-6      	; 0x1aaa <main+0xc>

00001ab0 <__vector_1>:
    1ab0:	1f 92       	push	r1
    1ab2:	0f 92       	push	r0
    1ab4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1ab8:	0f 92       	push	r0
    1aba:	11 24       	eor	r1, r1
    1abc:	2f 93       	push	r18
    1abe:	3f 93       	push	r19
    1ac0:	4f 93       	push	r20
    1ac2:	5f 93       	push	r21
    1ac4:	6f 93       	push	r22
    1ac6:	7f 93       	push	r23
    1ac8:	8f 93       	push	r24
    1aca:	9f 93       	push	r25
    1acc:	af 93       	push	r26
    1ace:	bf 93       	push	r27
    1ad0:	ef 93       	push	r30
    1ad2:	ff 93       	push	r31
    1ad4:	cf 93       	push	r28
    1ad6:	df 93       	push	r29
    1ad8:	cd b7       	in	r28, 0x3d	; 61
    1ada:	de b7       	in	r29, 0x3e	; 62
    1adc:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <Callback_INT0>
    1ae0:	90 91 c3 00 	lds	r25, 0x00C3	; 0x8000c3 <Callback_INT0+0x1>
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	09 95       	icall
    1ae8:	00 00       	nop
    1aea:	df 91       	pop	r29
    1aec:	cf 91       	pop	r28
    1aee:	ff 91       	pop	r31
    1af0:	ef 91       	pop	r30
    1af2:	bf 91       	pop	r27
    1af4:	af 91       	pop	r26
    1af6:	9f 91       	pop	r25
    1af8:	8f 91       	pop	r24
    1afa:	7f 91       	pop	r23
    1afc:	6f 91       	pop	r22
    1afe:	5f 91       	pop	r21
    1b00:	4f 91       	pop	r20
    1b02:	3f 91       	pop	r19
    1b04:	2f 91       	pop	r18
    1b06:	0f 90       	pop	r0
    1b08:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b0c:	0f 90       	pop	r0
    1b0e:	1f 90       	pop	r1
    1b10:	18 95       	reti

00001b12 <__vector_2>:
    1b12:	1f 92       	push	r1
    1b14:	0f 92       	push	r0
    1b16:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b1a:	0f 92       	push	r0
    1b1c:	11 24       	eor	r1, r1
    1b1e:	2f 93       	push	r18
    1b20:	3f 93       	push	r19
    1b22:	4f 93       	push	r20
    1b24:	5f 93       	push	r21
    1b26:	6f 93       	push	r22
    1b28:	7f 93       	push	r23
    1b2a:	8f 93       	push	r24
    1b2c:	9f 93       	push	r25
    1b2e:	af 93       	push	r26
    1b30:	bf 93       	push	r27
    1b32:	ef 93       	push	r30
    1b34:	ff 93       	push	r31
    1b36:	cf 93       	push	r28
    1b38:	df 93       	push	r29
    1b3a:	cd b7       	in	r28, 0x3d	; 61
    1b3c:	de b7       	in	r29, 0x3e	; 62
    1b3e:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <Callback_INT1>
    1b42:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <Callback_INT1+0x1>
    1b46:	fc 01       	movw	r30, r24
    1b48:	09 95       	icall
    1b4a:	00 00       	nop
    1b4c:	df 91       	pop	r29
    1b4e:	cf 91       	pop	r28
    1b50:	ff 91       	pop	r31
    1b52:	ef 91       	pop	r30
    1b54:	bf 91       	pop	r27
    1b56:	af 91       	pop	r26
    1b58:	9f 91       	pop	r25
    1b5a:	8f 91       	pop	r24
    1b5c:	7f 91       	pop	r23
    1b5e:	6f 91       	pop	r22
    1b60:	5f 91       	pop	r21
    1b62:	4f 91       	pop	r20
    1b64:	3f 91       	pop	r19
    1b66:	2f 91       	pop	r18
    1b68:	0f 90       	pop	r0
    1b6a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b6e:	0f 90       	pop	r0
    1b70:	1f 90       	pop	r1
    1b72:	18 95       	reti

00001b74 <__vector_18>:
    1b74:	1f 92       	push	r1
    1b76:	0f 92       	push	r0
    1b78:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b7c:	0f 92       	push	r0
    1b7e:	11 24       	eor	r1, r1
    1b80:	2f 93       	push	r18
    1b82:	3f 93       	push	r19
    1b84:	4f 93       	push	r20
    1b86:	5f 93       	push	r21
    1b88:	6f 93       	push	r22
    1b8a:	7f 93       	push	r23
    1b8c:	8f 93       	push	r24
    1b8e:	9f 93       	push	r25
    1b90:	af 93       	push	r26
    1b92:	bf 93       	push	r27
    1b94:	ef 93       	push	r30
    1b96:	ff 93       	push	r31
    1b98:	cf 93       	push	r28
    1b9a:	df 93       	push	r29
    1b9c:	cd b7       	in	r28, 0x3d	; 61
    1b9e:	de b7       	in	r29, 0x3e	; 62
    1ba0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <Callback_INT2>
    1ba4:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <Callback_INT2+0x1>
    1ba8:	fc 01       	movw	r30, r24
    1baa:	09 95       	icall
    1bac:	00 00       	nop
    1bae:	df 91       	pop	r29
    1bb0:	cf 91       	pop	r28
    1bb2:	ff 91       	pop	r31
    1bb4:	ef 91       	pop	r30
    1bb6:	bf 91       	pop	r27
    1bb8:	af 91       	pop	r26
    1bba:	9f 91       	pop	r25
    1bbc:	8f 91       	pop	r24
    1bbe:	7f 91       	pop	r23
    1bc0:	6f 91       	pop	r22
    1bc2:	5f 91       	pop	r21
    1bc4:	4f 91       	pop	r20
    1bc6:	3f 91       	pop	r19
    1bc8:	2f 91       	pop	r18
    1bca:	0f 90       	pop	r0
    1bcc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1bd0:	0f 90       	pop	r0
    1bd2:	1f 90       	pop	r1
    1bd4:	18 95       	reti

00001bd6 <GPIO_voidInit>:
    1bd6:	cf 93       	push	r28
    1bd8:	df 93       	push	r29
    1bda:	cd b7       	in	r28, 0x3d	; 61
    1bdc:	de b7       	in	r29, 0x3e	; 62
    1bde:	8b e3       	ldi	r24, 0x3B	; 59
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	fc 01       	movw	r30, r24
    1be4:	10 82       	st	Z, r1
    1be6:	8a e3       	ldi	r24, 0x3A	; 58
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	fc 01       	movw	r30, r24
    1bec:	10 82       	st	Z, r1
    1bee:	89 e3       	ldi	r24, 0x39	; 57
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	10 82       	st	Z, r1
    1bf6:	88 e3       	ldi	r24, 0x38	; 56
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	fc 01       	movw	r30, r24
    1bfc:	10 82       	st	Z, r1
    1bfe:	87 e3       	ldi	r24, 0x37	; 55
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	fc 01       	movw	r30, r24
    1c04:	10 82       	st	Z, r1
    1c06:	86 e3       	ldi	r24, 0x36	; 54
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	fc 01       	movw	r30, r24
    1c0c:	10 82       	st	Z, r1
    1c0e:	85 e3       	ldi	r24, 0x35	; 53
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	fc 01       	movw	r30, r24
    1c14:	10 82       	st	Z, r1
    1c16:	84 e3       	ldi	r24, 0x34	; 52
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	fc 01       	movw	r30, r24
    1c1c:	10 82       	st	Z, r1
    1c1e:	83 e3       	ldi	r24, 0x33	; 51
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	fc 01       	movw	r30, r24
    1c24:	10 82       	st	Z, r1
    1c26:	82 e3       	ldi	r24, 0x32	; 50
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	fc 01       	movw	r30, r24
    1c2c:	10 82       	st	Z, r1
    1c2e:	81 e3       	ldi	r24, 0x31	; 49
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	fc 01       	movw	r30, r24
    1c34:	10 82       	st	Z, r1
    1c36:	80 e3       	ldi	r24, 0x30	; 48
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	10 82       	st	Z, r1
    1c3e:	00 00       	nop
    1c40:	df 91       	pop	r29
    1c42:	cf 91       	pop	r28
    1c44:	08 95       	ret

00001c46 <GPIO_voidSetPinDirection>:
    1c46:	cf 93       	push	r28
    1c48:	df 93       	push	r29
    1c4a:	00 d0       	rcall	.+0      	; 0x1c4c <GPIO_voidSetPinDirection+0x6>
    1c4c:	1f 92       	push	r1
    1c4e:	cd b7       	in	r28, 0x3d	; 61
    1c50:	de b7       	in	r29, 0x3e	; 62
    1c52:	89 83       	std	Y+1, r24	; 0x01
    1c54:	6a 83       	std	Y+2, r22	; 0x02
    1c56:	4b 83       	std	Y+3, r20	; 0x03
    1c58:	8a 81       	ldd	r24, Y+2	; 0x02
    1c5a:	88 30       	cpi	r24, 0x08	; 8
    1c5c:	08 f0       	brcs	.+2      	; 0x1c60 <GPIO_voidSetPinDirection+0x1a>
    1c5e:	f5 c1       	rjmp	.+1002   	; 0x204a <GPIO_voidSetPinDirection+0x404>
    1c60:	89 81       	ldd	r24, Y+1	; 0x01
    1c62:	88 2f       	mov	r24, r24
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	81 30       	cpi	r24, 0x01	; 1
    1c68:	91 05       	cpc	r25, r1
    1c6a:	09 f4       	brne	.+2      	; 0x1c6e <GPIO_voidSetPinDirection+0x28>
    1c6c:	86 c0       	rjmp	.+268    	; 0x1d7a <GPIO_voidSetPinDirection+0x134>
    1c6e:	82 30       	cpi	r24, 0x02	; 2
    1c70:	91 05       	cpc	r25, r1
    1c72:	1c f4       	brge	.+6      	; 0x1c7a <GPIO_voidSetPinDirection+0x34>
    1c74:	89 2b       	or	r24, r25
    1c76:	49 f0       	breq	.+18     	; 0x1c8a <GPIO_voidSetPinDirection+0x44>
    1c78:	e8 c1       	rjmp	.+976    	; 0x204a <GPIO_voidSetPinDirection+0x404>
    1c7a:	82 30       	cpi	r24, 0x02	; 2
    1c7c:	91 05       	cpc	r25, r1
    1c7e:	09 f4       	brne	.+2      	; 0x1c82 <GPIO_voidSetPinDirection+0x3c>
    1c80:	f4 c0       	rjmp	.+488    	; 0x1e6a <GPIO_voidSetPinDirection+0x224>
    1c82:	03 97       	sbiw	r24, 0x03	; 3
    1c84:	09 f4       	brne	.+2      	; 0x1c88 <GPIO_voidSetPinDirection+0x42>
    1c86:	69 c1       	rjmp	.+722    	; 0x1f5a <GPIO_voidSetPinDirection+0x314>
    1c88:	e0 c1       	rjmp	.+960    	; 0x204a <GPIO_voidSetPinDirection+0x404>
    1c8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c8c:	88 2f       	mov	r24, r24
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	81 30       	cpi	r24, 0x01	; 1
    1c92:	91 05       	cpc	r25, r1
    1c94:	09 f4       	brne	.+2      	; 0x1c98 <GPIO_voidSetPinDirection+0x52>
    1c96:	5b c0       	rjmp	.+182    	; 0x1d4e <GPIO_voidSetPinDirection+0x108>
    1c98:	82 30       	cpi	r24, 0x02	; 2
    1c9a:	91 05       	cpc	r25, r1
    1c9c:	71 f1       	breq	.+92     	; 0x1cfa <GPIO_voidSetPinDirection+0xb4>
    1c9e:	89 2b       	or	r24, r25
    1ca0:	09 f0       	breq	.+2      	; 0x1ca4 <GPIO_voidSetPinDirection+0x5e>
    1ca2:	6a c0       	rjmp	.+212    	; 0x1d78 <GPIO_voidSetPinDirection+0x132>
    1ca4:	8a e3       	ldi	r24, 0x3A	; 58
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	2a e3       	ldi	r18, 0x3A	; 58
    1caa:	30 e0       	ldi	r19, 0x00	; 0
    1cac:	f9 01       	movw	r30, r18
    1cae:	20 81       	ld	r18, Z
    1cb0:	62 2f       	mov	r22, r18
    1cb2:	2a 81       	ldd	r18, Y+2	; 0x02
    1cb4:	42 2f       	mov	r20, r18
    1cb6:	50 e0       	ldi	r21, 0x00	; 0
    1cb8:	21 e0       	ldi	r18, 0x01	; 1
    1cba:	30 e0       	ldi	r19, 0x00	; 0
    1cbc:	02 c0       	rjmp	.+4      	; 0x1cc2 <GPIO_voidSetPinDirection+0x7c>
    1cbe:	22 0f       	add	r18, r18
    1cc0:	33 1f       	adc	r19, r19
    1cc2:	4a 95       	dec	r20
    1cc4:	e2 f7       	brpl	.-8      	; 0x1cbe <GPIO_voidSetPinDirection+0x78>
    1cc6:	20 95       	com	r18
    1cc8:	26 23       	and	r18, r22
    1cca:	fc 01       	movw	r30, r24
    1ccc:	20 83       	st	Z, r18
    1cce:	8b e3       	ldi	r24, 0x3B	; 59
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	2b e3       	ldi	r18, 0x3B	; 59
    1cd4:	30 e0       	ldi	r19, 0x00	; 0
    1cd6:	f9 01       	movw	r30, r18
    1cd8:	20 81       	ld	r18, Z
    1cda:	62 2f       	mov	r22, r18
    1cdc:	2a 81       	ldd	r18, Y+2	; 0x02
    1cde:	42 2f       	mov	r20, r18
    1ce0:	50 e0       	ldi	r21, 0x00	; 0
    1ce2:	21 e0       	ldi	r18, 0x01	; 1
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	02 c0       	rjmp	.+4      	; 0x1cec <GPIO_voidSetPinDirection+0xa6>
    1ce8:	22 0f       	add	r18, r18
    1cea:	33 1f       	adc	r19, r19
    1cec:	4a 95       	dec	r20
    1cee:	e2 f7       	brpl	.-8      	; 0x1ce8 <GPIO_voidSetPinDirection+0xa2>
    1cf0:	20 95       	com	r18
    1cf2:	26 23       	and	r18, r22
    1cf4:	fc 01       	movw	r30, r24
    1cf6:	20 83       	st	Z, r18
    1cf8:	3f c0       	rjmp	.+126    	; 0x1d78 <GPIO_voidSetPinDirection+0x132>
    1cfa:	8a e3       	ldi	r24, 0x3A	; 58
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	2a e3       	ldi	r18, 0x3A	; 58
    1d00:	30 e0       	ldi	r19, 0x00	; 0
    1d02:	f9 01       	movw	r30, r18
    1d04:	20 81       	ld	r18, Z
    1d06:	62 2f       	mov	r22, r18
    1d08:	2a 81       	ldd	r18, Y+2	; 0x02
    1d0a:	42 2f       	mov	r20, r18
    1d0c:	50 e0       	ldi	r21, 0x00	; 0
    1d0e:	21 e0       	ldi	r18, 0x01	; 1
    1d10:	30 e0       	ldi	r19, 0x00	; 0
    1d12:	02 c0       	rjmp	.+4      	; 0x1d18 <GPIO_voidSetPinDirection+0xd2>
    1d14:	22 0f       	add	r18, r18
    1d16:	33 1f       	adc	r19, r19
    1d18:	4a 95       	dec	r20
    1d1a:	e2 f7       	brpl	.-8      	; 0x1d14 <GPIO_voidSetPinDirection+0xce>
    1d1c:	20 95       	com	r18
    1d1e:	26 23       	and	r18, r22
    1d20:	fc 01       	movw	r30, r24
    1d22:	20 83       	st	Z, r18
    1d24:	8b e3       	ldi	r24, 0x3B	; 59
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	2b e3       	ldi	r18, 0x3B	; 59
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	f9 01       	movw	r30, r18
    1d2e:	20 81       	ld	r18, Z
    1d30:	62 2f       	mov	r22, r18
    1d32:	2a 81       	ldd	r18, Y+2	; 0x02
    1d34:	42 2f       	mov	r20, r18
    1d36:	50 e0       	ldi	r21, 0x00	; 0
    1d38:	21 e0       	ldi	r18, 0x01	; 1
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	02 c0       	rjmp	.+4      	; 0x1d42 <GPIO_voidSetPinDirection+0xfc>
    1d3e:	22 0f       	add	r18, r18
    1d40:	33 1f       	adc	r19, r19
    1d42:	4a 95       	dec	r20
    1d44:	e2 f7       	brpl	.-8      	; 0x1d3e <GPIO_voidSetPinDirection+0xf8>
    1d46:	26 2b       	or	r18, r22
    1d48:	fc 01       	movw	r30, r24
    1d4a:	20 83       	st	Z, r18
    1d4c:	15 c0       	rjmp	.+42     	; 0x1d78 <GPIO_voidSetPinDirection+0x132>
    1d4e:	8a e3       	ldi	r24, 0x3A	; 58
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	2a e3       	ldi	r18, 0x3A	; 58
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	f9 01       	movw	r30, r18
    1d58:	20 81       	ld	r18, Z
    1d5a:	62 2f       	mov	r22, r18
    1d5c:	2a 81       	ldd	r18, Y+2	; 0x02
    1d5e:	42 2f       	mov	r20, r18
    1d60:	50 e0       	ldi	r21, 0x00	; 0
    1d62:	21 e0       	ldi	r18, 0x01	; 1
    1d64:	30 e0       	ldi	r19, 0x00	; 0
    1d66:	02 c0       	rjmp	.+4      	; 0x1d6c <GPIO_voidSetPinDirection+0x126>
    1d68:	22 0f       	add	r18, r18
    1d6a:	33 1f       	adc	r19, r19
    1d6c:	4a 95       	dec	r20
    1d6e:	e2 f7       	brpl	.-8      	; 0x1d68 <GPIO_voidSetPinDirection+0x122>
    1d70:	26 2b       	or	r18, r22
    1d72:	fc 01       	movw	r30, r24
    1d74:	20 83       	st	Z, r18
    1d76:	00 00       	nop
    1d78:	68 c1       	rjmp	.+720    	; 0x204a <GPIO_voidSetPinDirection+0x404>
    1d7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d7c:	88 2f       	mov	r24, r24
    1d7e:	90 e0       	ldi	r25, 0x00	; 0
    1d80:	81 30       	cpi	r24, 0x01	; 1
    1d82:	91 05       	cpc	r25, r1
    1d84:	09 f4       	brne	.+2      	; 0x1d88 <GPIO_voidSetPinDirection+0x142>
    1d86:	5b c0       	rjmp	.+182    	; 0x1e3e <GPIO_voidSetPinDirection+0x1f8>
    1d88:	82 30       	cpi	r24, 0x02	; 2
    1d8a:	91 05       	cpc	r25, r1
    1d8c:	71 f1       	breq	.+92     	; 0x1dea <GPIO_voidSetPinDirection+0x1a4>
    1d8e:	89 2b       	or	r24, r25
    1d90:	09 f0       	breq	.+2      	; 0x1d94 <GPIO_voidSetPinDirection+0x14e>
    1d92:	6a c0       	rjmp	.+212    	; 0x1e68 <GPIO_voidSetPinDirection+0x222>
    1d94:	87 e3       	ldi	r24, 0x37	; 55
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	27 e3       	ldi	r18, 0x37	; 55
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	f9 01       	movw	r30, r18
    1d9e:	20 81       	ld	r18, Z
    1da0:	62 2f       	mov	r22, r18
    1da2:	2a 81       	ldd	r18, Y+2	; 0x02
    1da4:	42 2f       	mov	r20, r18
    1da6:	50 e0       	ldi	r21, 0x00	; 0
    1da8:	21 e0       	ldi	r18, 0x01	; 1
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <GPIO_voidSetPinDirection+0x16c>
    1dae:	22 0f       	add	r18, r18
    1db0:	33 1f       	adc	r19, r19
    1db2:	4a 95       	dec	r20
    1db4:	e2 f7       	brpl	.-8      	; 0x1dae <GPIO_voidSetPinDirection+0x168>
    1db6:	20 95       	com	r18
    1db8:	26 23       	and	r18, r22
    1dba:	fc 01       	movw	r30, r24
    1dbc:	20 83       	st	Z, r18
    1dbe:	88 e3       	ldi	r24, 0x38	; 56
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	28 e3       	ldi	r18, 0x38	; 56
    1dc4:	30 e0       	ldi	r19, 0x00	; 0
    1dc6:	f9 01       	movw	r30, r18
    1dc8:	20 81       	ld	r18, Z
    1dca:	62 2f       	mov	r22, r18
    1dcc:	2a 81       	ldd	r18, Y+2	; 0x02
    1dce:	42 2f       	mov	r20, r18
    1dd0:	50 e0       	ldi	r21, 0x00	; 0
    1dd2:	21 e0       	ldi	r18, 0x01	; 1
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	02 c0       	rjmp	.+4      	; 0x1ddc <GPIO_voidSetPinDirection+0x196>
    1dd8:	22 0f       	add	r18, r18
    1dda:	33 1f       	adc	r19, r19
    1ddc:	4a 95       	dec	r20
    1dde:	e2 f7       	brpl	.-8      	; 0x1dd8 <GPIO_voidSetPinDirection+0x192>
    1de0:	20 95       	com	r18
    1de2:	26 23       	and	r18, r22
    1de4:	fc 01       	movw	r30, r24
    1de6:	20 83       	st	Z, r18
    1de8:	3f c0       	rjmp	.+126    	; 0x1e68 <GPIO_voidSetPinDirection+0x222>
    1dea:	87 e3       	ldi	r24, 0x37	; 55
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	27 e3       	ldi	r18, 0x37	; 55
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	f9 01       	movw	r30, r18
    1df4:	20 81       	ld	r18, Z
    1df6:	62 2f       	mov	r22, r18
    1df8:	2a 81       	ldd	r18, Y+2	; 0x02
    1dfa:	42 2f       	mov	r20, r18
    1dfc:	50 e0       	ldi	r21, 0x00	; 0
    1dfe:	21 e0       	ldi	r18, 0x01	; 1
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	02 c0       	rjmp	.+4      	; 0x1e08 <GPIO_voidSetPinDirection+0x1c2>
    1e04:	22 0f       	add	r18, r18
    1e06:	33 1f       	adc	r19, r19
    1e08:	4a 95       	dec	r20
    1e0a:	e2 f7       	brpl	.-8      	; 0x1e04 <GPIO_voidSetPinDirection+0x1be>
    1e0c:	20 95       	com	r18
    1e0e:	26 23       	and	r18, r22
    1e10:	fc 01       	movw	r30, r24
    1e12:	20 83       	st	Z, r18
    1e14:	88 e3       	ldi	r24, 0x38	; 56
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	28 e3       	ldi	r18, 0x38	; 56
    1e1a:	30 e0       	ldi	r19, 0x00	; 0
    1e1c:	f9 01       	movw	r30, r18
    1e1e:	20 81       	ld	r18, Z
    1e20:	62 2f       	mov	r22, r18
    1e22:	2a 81       	ldd	r18, Y+2	; 0x02
    1e24:	42 2f       	mov	r20, r18
    1e26:	50 e0       	ldi	r21, 0x00	; 0
    1e28:	21 e0       	ldi	r18, 0x01	; 1
    1e2a:	30 e0       	ldi	r19, 0x00	; 0
    1e2c:	02 c0       	rjmp	.+4      	; 0x1e32 <GPIO_voidSetPinDirection+0x1ec>
    1e2e:	22 0f       	add	r18, r18
    1e30:	33 1f       	adc	r19, r19
    1e32:	4a 95       	dec	r20
    1e34:	e2 f7       	brpl	.-8      	; 0x1e2e <GPIO_voidSetPinDirection+0x1e8>
    1e36:	26 2b       	or	r18, r22
    1e38:	fc 01       	movw	r30, r24
    1e3a:	20 83       	st	Z, r18
    1e3c:	15 c0       	rjmp	.+42     	; 0x1e68 <GPIO_voidSetPinDirection+0x222>
    1e3e:	87 e3       	ldi	r24, 0x37	; 55
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	27 e3       	ldi	r18, 0x37	; 55
    1e44:	30 e0       	ldi	r19, 0x00	; 0
    1e46:	f9 01       	movw	r30, r18
    1e48:	20 81       	ld	r18, Z
    1e4a:	62 2f       	mov	r22, r18
    1e4c:	2a 81       	ldd	r18, Y+2	; 0x02
    1e4e:	42 2f       	mov	r20, r18
    1e50:	50 e0       	ldi	r21, 0x00	; 0
    1e52:	21 e0       	ldi	r18, 0x01	; 1
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	02 c0       	rjmp	.+4      	; 0x1e5c <GPIO_voidSetPinDirection+0x216>
    1e58:	22 0f       	add	r18, r18
    1e5a:	33 1f       	adc	r19, r19
    1e5c:	4a 95       	dec	r20
    1e5e:	e2 f7       	brpl	.-8      	; 0x1e58 <GPIO_voidSetPinDirection+0x212>
    1e60:	26 2b       	or	r18, r22
    1e62:	fc 01       	movw	r30, r24
    1e64:	20 83       	st	Z, r18
    1e66:	00 00       	nop
    1e68:	f0 c0       	rjmp	.+480    	; 0x204a <GPIO_voidSetPinDirection+0x404>
    1e6a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e6c:	88 2f       	mov	r24, r24
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	81 30       	cpi	r24, 0x01	; 1
    1e72:	91 05       	cpc	r25, r1
    1e74:	09 f4       	brne	.+2      	; 0x1e78 <GPIO_voidSetPinDirection+0x232>
    1e76:	5b c0       	rjmp	.+182    	; 0x1f2e <GPIO_voidSetPinDirection+0x2e8>
    1e78:	82 30       	cpi	r24, 0x02	; 2
    1e7a:	91 05       	cpc	r25, r1
    1e7c:	71 f1       	breq	.+92     	; 0x1eda <GPIO_voidSetPinDirection+0x294>
    1e7e:	89 2b       	or	r24, r25
    1e80:	09 f0       	breq	.+2      	; 0x1e84 <GPIO_voidSetPinDirection+0x23e>
    1e82:	6a c0       	rjmp	.+212    	; 0x1f58 <GPIO_voidSetPinDirection+0x312>
    1e84:	84 e3       	ldi	r24, 0x34	; 52
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	24 e3       	ldi	r18, 0x34	; 52
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	f9 01       	movw	r30, r18
    1e8e:	20 81       	ld	r18, Z
    1e90:	62 2f       	mov	r22, r18
    1e92:	2a 81       	ldd	r18, Y+2	; 0x02
    1e94:	42 2f       	mov	r20, r18
    1e96:	50 e0       	ldi	r21, 0x00	; 0
    1e98:	21 e0       	ldi	r18, 0x01	; 1
    1e9a:	30 e0       	ldi	r19, 0x00	; 0
    1e9c:	02 c0       	rjmp	.+4      	; 0x1ea2 <GPIO_voidSetPinDirection+0x25c>
    1e9e:	22 0f       	add	r18, r18
    1ea0:	33 1f       	adc	r19, r19
    1ea2:	4a 95       	dec	r20
    1ea4:	e2 f7       	brpl	.-8      	; 0x1e9e <GPIO_voidSetPinDirection+0x258>
    1ea6:	20 95       	com	r18
    1ea8:	26 23       	and	r18, r22
    1eaa:	fc 01       	movw	r30, r24
    1eac:	20 83       	st	Z, r18
    1eae:	85 e3       	ldi	r24, 0x35	; 53
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	25 e3       	ldi	r18, 0x35	; 53
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	f9 01       	movw	r30, r18
    1eb8:	20 81       	ld	r18, Z
    1eba:	62 2f       	mov	r22, r18
    1ebc:	2a 81       	ldd	r18, Y+2	; 0x02
    1ebe:	42 2f       	mov	r20, r18
    1ec0:	50 e0       	ldi	r21, 0x00	; 0
    1ec2:	21 e0       	ldi	r18, 0x01	; 1
    1ec4:	30 e0       	ldi	r19, 0x00	; 0
    1ec6:	02 c0       	rjmp	.+4      	; 0x1ecc <GPIO_voidSetPinDirection+0x286>
    1ec8:	22 0f       	add	r18, r18
    1eca:	33 1f       	adc	r19, r19
    1ecc:	4a 95       	dec	r20
    1ece:	e2 f7       	brpl	.-8      	; 0x1ec8 <GPIO_voidSetPinDirection+0x282>
    1ed0:	20 95       	com	r18
    1ed2:	26 23       	and	r18, r22
    1ed4:	fc 01       	movw	r30, r24
    1ed6:	20 83       	st	Z, r18
    1ed8:	3f c0       	rjmp	.+126    	; 0x1f58 <GPIO_voidSetPinDirection+0x312>
    1eda:	84 e3       	ldi	r24, 0x34	; 52
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	24 e3       	ldi	r18, 0x34	; 52
    1ee0:	30 e0       	ldi	r19, 0x00	; 0
    1ee2:	f9 01       	movw	r30, r18
    1ee4:	20 81       	ld	r18, Z
    1ee6:	62 2f       	mov	r22, r18
    1ee8:	2a 81       	ldd	r18, Y+2	; 0x02
    1eea:	42 2f       	mov	r20, r18
    1eec:	50 e0       	ldi	r21, 0x00	; 0
    1eee:	21 e0       	ldi	r18, 0x01	; 1
    1ef0:	30 e0       	ldi	r19, 0x00	; 0
    1ef2:	02 c0       	rjmp	.+4      	; 0x1ef8 <GPIO_voidSetPinDirection+0x2b2>
    1ef4:	22 0f       	add	r18, r18
    1ef6:	33 1f       	adc	r19, r19
    1ef8:	4a 95       	dec	r20
    1efa:	e2 f7       	brpl	.-8      	; 0x1ef4 <GPIO_voidSetPinDirection+0x2ae>
    1efc:	20 95       	com	r18
    1efe:	26 23       	and	r18, r22
    1f00:	fc 01       	movw	r30, r24
    1f02:	20 83       	st	Z, r18
    1f04:	85 e3       	ldi	r24, 0x35	; 53
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	25 e3       	ldi	r18, 0x35	; 53
    1f0a:	30 e0       	ldi	r19, 0x00	; 0
    1f0c:	f9 01       	movw	r30, r18
    1f0e:	20 81       	ld	r18, Z
    1f10:	62 2f       	mov	r22, r18
    1f12:	2a 81       	ldd	r18, Y+2	; 0x02
    1f14:	42 2f       	mov	r20, r18
    1f16:	50 e0       	ldi	r21, 0x00	; 0
    1f18:	21 e0       	ldi	r18, 0x01	; 1
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	02 c0       	rjmp	.+4      	; 0x1f22 <GPIO_voidSetPinDirection+0x2dc>
    1f1e:	22 0f       	add	r18, r18
    1f20:	33 1f       	adc	r19, r19
    1f22:	4a 95       	dec	r20
    1f24:	e2 f7       	brpl	.-8      	; 0x1f1e <GPIO_voidSetPinDirection+0x2d8>
    1f26:	26 2b       	or	r18, r22
    1f28:	fc 01       	movw	r30, r24
    1f2a:	20 83       	st	Z, r18
    1f2c:	15 c0       	rjmp	.+42     	; 0x1f58 <GPIO_voidSetPinDirection+0x312>
    1f2e:	84 e3       	ldi	r24, 0x34	; 52
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	24 e3       	ldi	r18, 0x34	; 52
    1f34:	30 e0       	ldi	r19, 0x00	; 0
    1f36:	f9 01       	movw	r30, r18
    1f38:	20 81       	ld	r18, Z
    1f3a:	62 2f       	mov	r22, r18
    1f3c:	2a 81       	ldd	r18, Y+2	; 0x02
    1f3e:	42 2f       	mov	r20, r18
    1f40:	50 e0       	ldi	r21, 0x00	; 0
    1f42:	21 e0       	ldi	r18, 0x01	; 1
    1f44:	30 e0       	ldi	r19, 0x00	; 0
    1f46:	02 c0       	rjmp	.+4      	; 0x1f4c <GPIO_voidSetPinDirection+0x306>
    1f48:	22 0f       	add	r18, r18
    1f4a:	33 1f       	adc	r19, r19
    1f4c:	4a 95       	dec	r20
    1f4e:	e2 f7       	brpl	.-8      	; 0x1f48 <GPIO_voidSetPinDirection+0x302>
    1f50:	26 2b       	or	r18, r22
    1f52:	fc 01       	movw	r30, r24
    1f54:	20 83       	st	Z, r18
    1f56:	00 00       	nop
    1f58:	78 c0       	rjmp	.+240    	; 0x204a <GPIO_voidSetPinDirection+0x404>
    1f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5c:	88 2f       	mov	r24, r24
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	81 30       	cpi	r24, 0x01	; 1
    1f62:	91 05       	cpc	r25, r1
    1f64:	09 f4       	brne	.+2      	; 0x1f68 <GPIO_voidSetPinDirection+0x322>
    1f66:	5b c0       	rjmp	.+182    	; 0x201e <GPIO_voidSetPinDirection+0x3d8>
    1f68:	82 30       	cpi	r24, 0x02	; 2
    1f6a:	91 05       	cpc	r25, r1
    1f6c:	71 f1       	breq	.+92     	; 0x1fca <GPIO_voidSetPinDirection+0x384>
    1f6e:	89 2b       	or	r24, r25
    1f70:	09 f0       	breq	.+2      	; 0x1f74 <GPIO_voidSetPinDirection+0x32e>
    1f72:	6a c0       	rjmp	.+212    	; 0x2048 <GPIO_voidSetPinDirection+0x402>
    1f74:	81 e3       	ldi	r24, 0x31	; 49
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	21 e3       	ldi	r18, 0x31	; 49
    1f7a:	30 e0       	ldi	r19, 0x00	; 0
    1f7c:	f9 01       	movw	r30, r18
    1f7e:	20 81       	ld	r18, Z
    1f80:	62 2f       	mov	r22, r18
    1f82:	2a 81       	ldd	r18, Y+2	; 0x02
    1f84:	42 2f       	mov	r20, r18
    1f86:	50 e0       	ldi	r21, 0x00	; 0
    1f88:	21 e0       	ldi	r18, 0x01	; 1
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	02 c0       	rjmp	.+4      	; 0x1f92 <GPIO_voidSetPinDirection+0x34c>
    1f8e:	22 0f       	add	r18, r18
    1f90:	33 1f       	adc	r19, r19
    1f92:	4a 95       	dec	r20
    1f94:	e2 f7       	brpl	.-8      	; 0x1f8e <GPIO_voidSetPinDirection+0x348>
    1f96:	20 95       	com	r18
    1f98:	26 23       	and	r18, r22
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	20 83       	st	Z, r18
    1f9e:	82 e3       	ldi	r24, 0x32	; 50
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	22 e3       	ldi	r18, 0x32	; 50
    1fa4:	30 e0       	ldi	r19, 0x00	; 0
    1fa6:	f9 01       	movw	r30, r18
    1fa8:	20 81       	ld	r18, Z
    1faa:	62 2f       	mov	r22, r18
    1fac:	2a 81       	ldd	r18, Y+2	; 0x02
    1fae:	42 2f       	mov	r20, r18
    1fb0:	50 e0       	ldi	r21, 0x00	; 0
    1fb2:	21 e0       	ldi	r18, 0x01	; 1
    1fb4:	30 e0       	ldi	r19, 0x00	; 0
    1fb6:	02 c0       	rjmp	.+4      	; 0x1fbc <GPIO_voidSetPinDirection+0x376>
    1fb8:	22 0f       	add	r18, r18
    1fba:	33 1f       	adc	r19, r19
    1fbc:	4a 95       	dec	r20
    1fbe:	e2 f7       	brpl	.-8      	; 0x1fb8 <GPIO_voidSetPinDirection+0x372>
    1fc0:	20 95       	com	r18
    1fc2:	26 23       	and	r18, r22
    1fc4:	fc 01       	movw	r30, r24
    1fc6:	20 83       	st	Z, r18
    1fc8:	3f c0       	rjmp	.+126    	; 0x2048 <GPIO_voidSetPinDirection+0x402>
    1fca:	81 e3       	ldi	r24, 0x31	; 49
    1fcc:	90 e0       	ldi	r25, 0x00	; 0
    1fce:	21 e3       	ldi	r18, 0x31	; 49
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	f9 01       	movw	r30, r18
    1fd4:	20 81       	ld	r18, Z
    1fd6:	62 2f       	mov	r22, r18
    1fd8:	2a 81       	ldd	r18, Y+2	; 0x02
    1fda:	42 2f       	mov	r20, r18
    1fdc:	50 e0       	ldi	r21, 0x00	; 0
    1fde:	21 e0       	ldi	r18, 0x01	; 1
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	02 c0       	rjmp	.+4      	; 0x1fe8 <GPIO_voidSetPinDirection+0x3a2>
    1fe4:	22 0f       	add	r18, r18
    1fe6:	33 1f       	adc	r19, r19
    1fe8:	4a 95       	dec	r20
    1fea:	e2 f7       	brpl	.-8      	; 0x1fe4 <GPIO_voidSetPinDirection+0x39e>
    1fec:	20 95       	com	r18
    1fee:	26 23       	and	r18, r22
    1ff0:	fc 01       	movw	r30, r24
    1ff2:	20 83       	st	Z, r18
    1ff4:	82 e3       	ldi	r24, 0x32	; 50
    1ff6:	90 e0       	ldi	r25, 0x00	; 0
    1ff8:	22 e3       	ldi	r18, 0x32	; 50
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	f9 01       	movw	r30, r18
    1ffe:	20 81       	ld	r18, Z
    2000:	62 2f       	mov	r22, r18
    2002:	2a 81       	ldd	r18, Y+2	; 0x02
    2004:	42 2f       	mov	r20, r18
    2006:	50 e0       	ldi	r21, 0x00	; 0
    2008:	21 e0       	ldi	r18, 0x01	; 1
    200a:	30 e0       	ldi	r19, 0x00	; 0
    200c:	02 c0       	rjmp	.+4      	; 0x2012 <GPIO_voidSetPinDirection+0x3cc>
    200e:	22 0f       	add	r18, r18
    2010:	33 1f       	adc	r19, r19
    2012:	4a 95       	dec	r20
    2014:	e2 f7       	brpl	.-8      	; 0x200e <GPIO_voidSetPinDirection+0x3c8>
    2016:	26 2b       	or	r18, r22
    2018:	fc 01       	movw	r30, r24
    201a:	20 83       	st	Z, r18
    201c:	15 c0       	rjmp	.+42     	; 0x2048 <GPIO_voidSetPinDirection+0x402>
    201e:	81 e3       	ldi	r24, 0x31	; 49
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	21 e3       	ldi	r18, 0x31	; 49
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	f9 01       	movw	r30, r18
    2028:	20 81       	ld	r18, Z
    202a:	62 2f       	mov	r22, r18
    202c:	2a 81       	ldd	r18, Y+2	; 0x02
    202e:	42 2f       	mov	r20, r18
    2030:	50 e0       	ldi	r21, 0x00	; 0
    2032:	21 e0       	ldi	r18, 0x01	; 1
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	02 c0       	rjmp	.+4      	; 0x203c <GPIO_voidSetPinDirection+0x3f6>
    2038:	22 0f       	add	r18, r18
    203a:	33 1f       	adc	r19, r19
    203c:	4a 95       	dec	r20
    203e:	e2 f7       	brpl	.-8      	; 0x2038 <GPIO_voidSetPinDirection+0x3f2>
    2040:	26 2b       	or	r18, r22
    2042:	fc 01       	movw	r30, r24
    2044:	20 83       	st	Z, r18
    2046:	00 00       	nop
    2048:	00 00       	nop
    204a:	00 00       	nop
    204c:	0f 90       	pop	r0
    204e:	0f 90       	pop	r0
    2050:	0f 90       	pop	r0
    2052:	df 91       	pop	r29
    2054:	cf 91       	pop	r28
    2056:	08 95       	ret

00002058 <GPIO_voidSetPinValue>:
    2058:	cf 93       	push	r28
    205a:	df 93       	push	r29
    205c:	00 d0       	rcall	.+0      	; 0x205e <GPIO_voidSetPinValue+0x6>
    205e:	1f 92       	push	r1
    2060:	cd b7       	in	r28, 0x3d	; 61
    2062:	de b7       	in	r29, 0x3e	; 62
    2064:	89 83       	std	Y+1, r24	; 0x01
    2066:	6a 83       	std	Y+2, r22	; 0x02
    2068:	4b 83       	std	Y+3, r20	; 0x03
    206a:	8a 81       	ldd	r24, Y+2	; 0x02
    206c:	88 30       	cpi	r24, 0x08	; 8
    206e:	08 f0       	brcs	.+2      	; 0x2072 <GPIO_voidSetPinValue+0x1a>
    2070:	e5 c0       	rjmp	.+458    	; 0x223c <GPIO_voidSetPinValue+0x1e4>
    2072:	89 81       	ldd	r24, Y+1	; 0x01
    2074:	88 2f       	mov	r24, r24
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	81 30       	cpi	r24, 0x01	; 1
    207a:	91 05       	cpc	r25, r1
    207c:	09 f4       	brne	.+2      	; 0x2080 <GPIO_voidSetPinValue+0x28>
    207e:	42 c0       	rjmp	.+132    	; 0x2104 <GPIO_voidSetPinValue+0xac>
    2080:	82 30       	cpi	r24, 0x02	; 2
    2082:	91 05       	cpc	r25, r1
    2084:	1c f4       	brge	.+6      	; 0x208c <GPIO_voidSetPinValue+0x34>
    2086:	89 2b       	or	r24, r25
    2088:	49 f0       	breq	.+18     	; 0x209c <GPIO_voidSetPinValue+0x44>
    208a:	d8 c0       	rjmp	.+432    	; 0x223c <GPIO_voidSetPinValue+0x1e4>
    208c:	82 30       	cpi	r24, 0x02	; 2
    208e:	91 05       	cpc	r25, r1
    2090:	09 f4       	brne	.+2      	; 0x2094 <GPIO_voidSetPinValue+0x3c>
    2092:	6c c0       	rjmp	.+216    	; 0x216c <GPIO_voidSetPinValue+0x114>
    2094:	03 97       	sbiw	r24, 0x03	; 3
    2096:	09 f4       	brne	.+2      	; 0x209a <GPIO_voidSetPinValue+0x42>
    2098:	9d c0       	rjmp	.+314    	; 0x21d4 <GPIO_voidSetPinValue+0x17c>
    209a:	d0 c0       	rjmp	.+416    	; 0x223c <GPIO_voidSetPinValue+0x1e4>
    209c:	8b 81       	ldd	r24, Y+3	; 0x03
    209e:	88 2f       	mov	r24, r24
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	00 97       	sbiw	r24, 0x00	; 0
    20a4:	c1 f0       	breq	.+48     	; 0x20d6 <GPIO_voidSetPinValue+0x7e>
    20a6:	01 97       	sbiw	r24, 0x01	; 1
    20a8:	09 f0       	breq	.+2      	; 0x20ac <GPIO_voidSetPinValue+0x54>
    20aa:	2b c0       	rjmp	.+86     	; 0x2102 <GPIO_voidSetPinValue+0xaa>
    20ac:	8b e3       	ldi	r24, 0x3B	; 59
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	2b e3       	ldi	r18, 0x3B	; 59
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	f9 01       	movw	r30, r18
    20b6:	20 81       	ld	r18, Z
    20b8:	62 2f       	mov	r22, r18
    20ba:	2a 81       	ldd	r18, Y+2	; 0x02
    20bc:	42 2f       	mov	r20, r18
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	21 e0       	ldi	r18, 0x01	; 1
    20c2:	30 e0       	ldi	r19, 0x00	; 0
    20c4:	02 c0       	rjmp	.+4      	; 0x20ca <GPIO_voidSetPinValue+0x72>
    20c6:	22 0f       	add	r18, r18
    20c8:	33 1f       	adc	r19, r19
    20ca:	4a 95       	dec	r20
    20cc:	e2 f7       	brpl	.-8      	; 0x20c6 <GPIO_voidSetPinValue+0x6e>
    20ce:	26 2b       	or	r18, r22
    20d0:	fc 01       	movw	r30, r24
    20d2:	20 83       	st	Z, r18
    20d4:	16 c0       	rjmp	.+44     	; 0x2102 <GPIO_voidSetPinValue+0xaa>
    20d6:	8b e3       	ldi	r24, 0x3B	; 59
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	2b e3       	ldi	r18, 0x3B	; 59
    20dc:	30 e0       	ldi	r19, 0x00	; 0
    20de:	f9 01       	movw	r30, r18
    20e0:	20 81       	ld	r18, Z
    20e2:	62 2f       	mov	r22, r18
    20e4:	2a 81       	ldd	r18, Y+2	; 0x02
    20e6:	42 2f       	mov	r20, r18
    20e8:	50 e0       	ldi	r21, 0x00	; 0
    20ea:	21 e0       	ldi	r18, 0x01	; 1
    20ec:	30 e0       	ldi	r19, 0x00	; 0
    20ee:	02 c0       	rjmp	.+4      	; 0x20f4 <GPIO_voidSetPinValue+0x9c>
    20f0:	22 0f       	add	r18, r18
    20f2:	33 1f       	adc	r19, r19
    20f4:	4a 95       	dec	r20
    20f6:	e2 f7       	brpl	.-8      	; 0x20f0 <GPIO_voidSetPinValue+0x98>
    20f8:	20 95       	com	r18
    20fa:	26 23       	and	r18, r22
    20fc:	fc 01       	movw	r30, r24
    20fe:	20 83       	st	Z, r18
    2100:	00 00       	nop
    2102:	9c c0       	rjmp	.+312    	; 0x223c <GPIO_voidSetPinValue+0x1e4>
    2104:	8b 81       	ldd	r24, Y+3	; 0x03
    2106:	88 2f       	mov	r24, r24
    2108:	90 e0       	ldi	r25, 0x00	; 0
    210a:	00 97       	sbiw	r24, 0x00	; 0
    210c:	c1 f0       	breq	.+48     	; 0x213e <GPIO_voidSetPinValue+0xe6>
    210e:	01 97       	sbiw	r24, 0x01	; 1
    2110:	09 f0       	breq	.+2      	; 0x2114 <GPIO_voidSetPinValue+0xbc>
    2112:	2b c0       	rjmp	.+86     	; 0x216a <GPIO_voidSetPinValue+0x112>
    2114:	88 e3       	ldi	r24, 0x38	; 56
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	28 e3       	ldi	r18, 0x38	; 56
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	f9 01       	movw	r30, r18
    211e:	20 81       	ld	r18, Z
    2120:	62 2f       	mov	r22, r18
    2122:	2a 81       	ldd	r18, Y+2	; 0x02
    2124:	42 2f       	mov	r20, r18
    2126:	50 e0       	ldi	r21, 0x00	; 0
    2128:	21 e0       	ldi	r18, 0x01	; 1
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	02 c0       	rjmp	.+4      	; 0x2132 <GPIO_voidSetPinValue+0xda>
    212e:	22 0f       	add	r18, r18
    2130:	33 1f       	adc	r19, r19
    2132:	4a 95       	dec	r20
    2134:	e2 f7       	brpl	.-8      	; 0x212e <GPIO_voidSetPinValue+0xd6>
    2136:	26 2b       	or	r18, r22
    2138:	fc 01       	movw	r30, r24
    213a:	20 83       	st	Z, r18
    213c:	16 c0       	rjmp	.+44     	; 0x216a <GPIO_voidSetPinValue+0x112>
    213e:	88 e3       	ldi	r24, 0x38	; 56
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	28 e3       	ldi	r18, 0x38	; 56
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	f9 01       	movw	r30, r18
    2148:	20 81       	ld	r18, Z
    214a:	62 2f       	mov	r22, r18
    214c:	2a 81       	ldd	r18, Y+2	; 0x02
    214e:	42 2f       	mov	r20, r18
    2150:	50 e0       	ldi	r21, 0x00	; 0
    2152:	21 e0       	ldi	r18, 0x01	; 1
    2154:	30 e0       	ldi	r19, 0x00	; 0
    2156:	02 c0       	rjmp	.+4      	; 0x215c <GPIO_voidSetPinValue+0x104>
    2158:	22 0f       	add	r18, r18
    215a:	33 1f       	adc	r19, r19
    215c:	4a 95       	dec	r20
    215e:	e2 f7       	brpl	.-8      	; 0x2158 <GPIO_voidSetPinValue+0x100>
    2160:	20 95       	com	r18
    2162:	26 23       	and	r18, r22
    2164:	fc 01       	movw	r30, r24
    2166:	20 83       	st	Z, r18
    2168:	00 00       	nop
    216a:	68 c0       	rjmp	.+208    	; 0x223c <GPIO_voidSetPinValue+0x1e4>
    216c:	8b 81       	ldd	r24, Y+3	; 0x03
    216e:	88 2f       	mov	r24, r24
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	00 97       	sbiw	r24, 0x00	; 0
    2174:	c1 f0       	breq	.+48     	; 0x21a6 <GPIO_voidSetPinValue+0x14e>
    2176:	01 97       	sbiw	r24, 0x01	; 1
    2178:	09 f0       	breq	.+2      	; 0x217c <GPIO_voidSetPinValue+0x124>
    217a:	2b c0       	rjmp	.+86     	; 0x21d2 <GPIO_voidSetPinValue+0x17a>
    217c:	85 e3       	ldi	r24, 0x35	; 53
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	25 e3       	ldi	r18, 0x35	; 53
    2182:	30 e0       	ldi	r19, 0x00	; 0
    2184:	f9 01       	movw	r30, r18
    2186:	20 81       	ld	r18, Z
    2188:	62 2f       	mov	r22, r18
    218a:	2a 81       	ldd	r18, Y+2	; 0x02
    218c:	42 2f       	mov	r20, r18
    218e:	50 e0       	ldi	r21, 0x00	; 0
    2190:	21 e0       	ldi	r18, 0x01	; 1
    2192:	30 e0       	ldi	r19, 0x00	; 0
    2194:	02 c0       	rjmp	.+4      	; 0x219a <GPIO_voidSetPinValue+0x142>
    2196:	22 0f       	add	r18, r18
    2198:	33 1f       	adc	r19, r19
    219a:	4a 95       	dec	r20
    219c:	e2 f7       	brpl	.-8      	; 0x2196 <GPIO_voidSetPinValue+0x13e>
    219e:	26 2b       	or	r18, r22
    21a0:	fc 01       	movw	r30, r24
    21a2:	20 83       	st	Z, r18
    21a4:	16 c0       	rjmp	.+44     	; 0x21d2 <GPIO_voidSetPinValue+0x17a>
    21a6:	85 e3       	ldi	r24, 0x35	; 53
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	25 e3       	ldi	r18, 0x35	; 53
    21ac:	30 e0       	ldi	r19, 0x00	; 0
    21ae:	f9 01       	movw	r30, r18
    21b0:	20 81       	ld	r18, Z
    21b2:	62 2f       	mov	r22, r18
    21b4:	2a 81       	ldd	r18, Y+2	; 0x02
    21b6:	42 2f       	mov	r20, r18
    21b8:	50 e0       	ldi	r21, 0x00	; 0
    21ba:	21 e0       	ldi	r18, 0x01	; 1
    21bc:	30 e0       	ldi	r19, 0x00	; 0
    21be:	02 c0       	rjmp	.+4      	; 0x21c4 <GPIO_voidSetPinValue+0x16c>
    21c0:	22 0f       	add	r18, r18
    21c2:	33 1f       	adc	r19, r19
    21c4:	4a 95       	dec	r20
    21c6:	e2 f7       	brpl	.-8      	; 0x21c0 <GPIO_voidSetPinValue+0x168>
    21c8:	20 95       	com	r18
    21ca:	26 23       	and	r18, r22
    21cc:	fc 01       	movw	r30, r24
    21ce:	20 83       	st	Z, r18
    21d0:	00 00       	nop
    21d2:	34 c0       	rjmp	.+104    	; 0x223c <GPIO_voidSetPinValue+0x1e4>
    21d4:	8b 81       	ldd	r24, Y+3	; 0x03
    21d6:	88 2f       	mov	r24, r24
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	00 97       	sbiw	r24, 0x00	; 0
    21dc:	c1 f0       	breq	.+48     	; 0x220e <GPIO_voidSetPinValue+0x1b6>
    21de:	01 97       	sbiw	r24, 0x01	; 1
    21e0:	09 f0       	breq	.+2      	; 0x21e4 <GPIO_voidSetPinValue+0x18c>
    21e2:	2b c0       	rjmp	.+86     	; 0x223a <GPIO_voidSetPinValue+0x1e2>
    21e4:	82 e3       	ldi	r24, 0x32	; 50
    21e6:	90 e0       	ldi	r25, 0x00	; 0
    21e8:	22 e3       	ldi	r18, 0x32	; 50
    21ea:	30 e0       	ldi	r19, 0x00	; 0
    21ec:	f9 01       	movw	r30, r18
    21ee:	20 81       	ld	r18, Z
    21f0:	62 2f       	mov	r22, r18
    21f2:	2a 81       	ldd	r18, Y+2	; 0x02
    21f4:	42 2f       	mov	r20, r18
    21f6:	50 e0       	ldi	r21, 0x00	; 0
    21f8:	21 e0       	ldi	r18, 0x01	; 1
    21fa:	30 e0       	ldi	r19, 0x00	; 0
    21fc:	02 c0       	rjmp	.+4      	; 0x2202 <GPIO_voidSetPinValue+0x1aa>
    21fe:	22 0f       	add	r18, r18
    2200:	33 1f       	adc	r19, r19
    2202:	4a 95       	dec	r20
    2204:	e2 f7       	brpl	.-8      	; 0x21fe <GPIO_voidSetPinValue+0x1a6>
    2206:	26 2b       	or	r18, r22
    2208:	fc 01       	movw	r30, r24
    220a:	20 83       	st	Z, r18
    220c:	16 c0       	rjmp	.+44     	; 0x223a <GPIO_voidSetPinValue+0x1e2>
    220e:	82 e3       	ldi	r24, 0x32	; 50
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	22 e3       	ldi	r18, 0x32	; 50
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	f9 01       	movw	r30, r18
    2218:	20 81       	ld	r18, Z
    221a:	62 2f       	mov	r22, r18
    221c:	2a 81       	ldd	r18, Y+2	; 0x02
    221e:	42 2f       	mov	r20, r18
    2220:	50 e0       	ldi	r21, 0x00	; 0
    2222:	21 e0       	ldi	r18, 0x01	; 1
    2224:	30 e0       	ldi	r19, 0x00	; 0
    2226:	02 c0       	rjmp	.+4      	; 0x222c <GPIO_voidSetPinValue+0x1d4>
    2228:	22 0f       	add	r18, r18
    222a:	33 1f       	adc	r19, r19
    222c:	4a 95       	dec	r20
    222e:	e2 f7       	brpl	.-8      	; 0x2228 <GPIO_voidSetPinValue+0x1d0>
    2230:	20 95       	com	r18
    2232:	26 23       	and	r18, r22
    2234:	fc 01       	movw	r30, r24
    2236:	20 83       	st	Z, r18
    2238:	00 00       	nop
    223a:	00 00       	nop
    223c:	00 00       	nop
    223e:	0f 90       	pop	r0
    2240:	0f 90       	pop	r0
    2242:	0f 90       	pop	r0
    2244:	df 91       	pop	r29
    2246:	cf 91       	pop	r28
    2248:	08 95       	ret

0000224a <GPIO_u8GetPinValue>:
    224a:	cf 93       	push	r28
    224c:	df 93       	push	r29
    224e:	00 d0       	rcall	.+0      	; 0x2250 <GPIO_u8GetPinValue+0x6>
    2250:	1f 92       	push	r1
    2252:	cd b7       	in	r28, 0x3d	; 61
    2254:	de b7       	in	r29, 0x3e	; 62
    2256:	8a 83       	std	Y+2, r24	; 0x02
    2258:	6b 83       	std	Y+3, r22	; 0x03
    225a:	19 82       	std	Y+1, r1	; 0x01
    225c:	8b 81       	ldd	r24, Y+3	; 0x03
    225e:	88 30       	cpi	r24, 0x08	; 8
    2260:	08 f0       	brcs	.+2      	; 0x2264 <GPIO_u8GetPinValue+0x1a>
    2262:	56 c0       	rjmp	.+172    	; 0x2310 <GPIO_u8GetPinValue+0xc6>
    2264:	8a 81       	ldd	r24, Y+2	; 0x02
    2266:	88 2f       	mov	r24, r24
    2268:	90 e0       	ldi	r25, 0x00	; 0
    226a:	81 30       	cpi	r24, 0x01	; 1
    226c:	91 05       	cpc	r25, r1
    226e:	e9 f0       	breq	.+58     	; 0x22aa <GPIO_u8GetPinValue+0x60>
    2270:	82 30       	cpi	r24, 0x02	; 2
    2272:	91 05       	cpc	r25, r1
    2274:	1c f4       	brge	.+6      	; 0x227c <GPIO_u8GetPinValue+0x32>
    2276:	89 2b       	or	r24, r25
    2278:	39 f0       	breq	.+14     	; 0x2288 <GPIO_u8GetPinValue+0x3e>
    227a:	4a c0       	rjmp	.+148    	; 0x2310 <GPIO_u8GetPinValue+0xc6>
    227c:	82 30       	cpi	r24, 0x02	; 2
    227e:	91 05       	cpc	r25, r1
    2280:	29 f1       	breq	.+74     	; 0x22cc <GPIO_u8GetPinValue+0x82>
    2282:	03 97       	sbiw	r24, 0x03	; 3
    2284:	a1 f1       	breq	.+104    	; 0x22ee <GPIO_u8GetPinValue+0xa4>
    2286:	44 c0       	rjmp	.+136    	; 0x2310 <GPIO_u8GetPinValue+0xc6>
    2288:	89 e3       	ldi	r24, 0x39	; 57
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	fc 01       	movw	r30, r24
    228e:	80 81       	ld	r24, Z
    2290:	88 2f       	mov	r24, r24
    2292:	90 e0       	ldi	r25, 0x00	; 0
    2294:	2b 81       	ldd	r18, Y+3	; 0x03
    2296:	22 2f       	mov	r18, r18
    2298:	30 e0       	ldi	r19, 0x00	; 0
    229a:	02 c0       	rjmp	.+4      	; 0x22a0 <GPIO_u8GetPinValue+0x56>
    229c:	95 95       	asr	r25
    229e:	87 95       	ror	r24
    22a0:	2a 95       	dec	r18
    22a2:	e2 f7       	brpl	.-8      	; 0x229c <GPIO_u8GetPinValue+0x52>
    22a4:	81 70       	andi	r24, 0x01	; 1
    22a6:	89 83       	std	Y+1, r24	; 0x01
    22a8:	33 c0       	rjmp	.+102    	; 0x2310 <GPIO_u8GetPinValue+0xc6>
    22aa:	86 e3       	ldi	r24, 0x36	; 54
    22ac:	90 e0       	ldi	r25, 0x00	; 0
    22ae:	fc 01       	movw	r30, r24
    22b0:	80 81       	ld	r24, Z
    22b2:	88 2f       	mov	r24, r24
    22b4:	90 e0       	ldi	r25, 0x00	; 0
    22b6:	2b 81       	ldd	r18, Y+3	; 0x03
    22b8:	22 2f       	mov	r18, r18
    22ba:	30 e0       	ldi	r19, 0x00	; 0
    22bc:	02 c0       	rjmp	.+4      	; 0x22c2 <GPIO_u8GetPinValue+0x78>
    22be:	95 95       	asr	r25
    22c0:	87 95       	ror	r24
    22c2:	2a 95       	dec	r18
    22c4:	e2 f7       	brpl	.-8      	; 0x22be <GPIO_u8GetPinValue+0x74>
    22c6:	81 70       	andi	r24, 0x01	; 1
    22c8:	89 83       	std	Y+1, r24	; 0x01
    22ca:	22 c0       	rjmp	.+68     	; 0x2310 <GPIO_u8GetPinValue+0xc6>
    22cc:	83 e3       	ldi	r24, 0x33	; 51
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	fc 01       	movw	r30, r24
    22d2:	80 81       	ld	r24, Z
    22d4:	88 2f       	mov	r24, r24
    22d6:	90 e0       	ldi	r25, 0x00	; 0
    22d8:	2b 81       	ldd	r18, Y+3	; 0x03
    22da:	22 2f       	mov	r18, r18
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	02 c0       	rjmp	.+4      	; 0x22e4 <GPIO_u8GetPinValue+0x9a>
    22e0:	95 95       	asr	r25
    22e2:	87 95       	ror	r24
    22e4:	2a 95       	dec	r18
    22e6:	e2 f7       	brpl	.-8      	; 0x22e0 <GPIO_u8GetPinValue+0x96>
    22e8:	81 70       	andi	r24, 0x01	; 1
    22ea:	89 83       	std	Y+1, r24	; 0x01
    22ec:	11 c0       	rjmp	.+34     	; 0x2310 <GPIO_u8GetPinValue+0xc6>
    22ee:	80 e3       	ldi	r24, 0x30	; 48
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	fc 01       	movw	r30, r24
    22f4:	80 81       	ld	r24, Z
    22f6:	88 2f       	mov	r24, r24
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	2b 81       	ldd	r18, Y+3	; 0x03
    22fc:	22 2f       	mov	r18, r18
    22fe:	30 e0       	ldi	r19, 0x00	; 0
    2300:	02 c0       	rjmp	.+4      	; 0x2306 <GPIO_u8GetPinValue+0xbc>
    2302:	95 95       	asr	r25
    2304:	87 95       	ror	r24
    2306:	2a 95       	dec	r18
    2308:	e2 f7       	brpl	.-8      	; 0x2302 <GPIO_u8GetPinValue+0xb8>
    230a:	81 70       	andi	r24, 0x01	; 1
    230c:	89 83       	std	Y+1, r24	; 0x01
    230e:	00 00       	nop
    2310:	89 81       	ldd	r24, Y+1	; 0x01
    2312:	0f 90       	pop	r0
    2314:	0f 90       	pop	r0
    2316:	0f 90       	pop	r0
    2318:	df 91       	pop	r29
    231a:	cf 91       	pop	r28
    231c:	08 95       	ret

0000231e <GPIO_voidTogglePin>:
    231e:	cf 93       	push	r28
    2320:	df 93       	push	r29
    2322:	00 d0       	rcall	.+0      	; 0x2324 <GPIO_voidTogglePin+0x6>
    2324:	cd b7       	in	r28, 0x3d	; 61
    2326:	de b7       	in	r29, 0x3e	; 62
    2328:	89 83       	std	Y+1, r24	; 0x01
    232a:	6a 83       	std	Y+2, r22	; 0x02
    232c:	8a 81       	ldd	r24, Y+2	; 0x02
    232e:	88 30       	cpi	r24, 0x08	; 8
    2330:	08 f0       	brcs	.+2      	; 0x2334 <GPIO_voidTogglePin+0x16>
    2332:	67 c0       	rjmp	.+206    	; 0x2402 <GPIO_voidTogglePin+0xe4>
    2334:	89 81       	ldd	r24, Y+1	; 0x01
    2336:	88 2f       	mov	r24, r24
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	81 30       	cpi	r24, 0x01	; 1
    233c:	91 05       	cpc	r25, r1
    233e:	11 f1       	breq	.+68     	; 0x2384 <GPIO_voidTogglePin+0x66>
    2340:	82 30       	cpi	r24, 0x02	; 2
    2342:	91 05       	cpc	r25, r1
    2344:	1c f4       	brge	.+6      	; 0x234c <GPIO_voidTogglePin+0x2e>
    2346:	89 2b       	or	r24, r25
    2348:	41 f0       	breq	.+16     	; 0x235a <GPIO_voidTogglePin+0x3c>
    234a:	5b c0       	rjmp	.+182    	; 0x2402 <GPIO_voidTogglePin+0xe4>
    234c:	82 30       	cpi	r24, 0x02	; 2
    234e:	91 05       	cpc	r25, r1
    2350:	71 f1       	breq	.+92     	; 0x23ae <GPIO_voidTogglePin+0x90>
    2352:	03 97       	sbiw	r24, 0x03	; 3
    2354:	09 f4       	brne	.+2      	; 0x2358 <GPIO_voidTogglePin+0x3a>
    2356:	40 c0       	rjmp	.+128    	; 0x23d8 <GPIO_voidTogglePin+0xba>
    2358:	54 c0       	rjmp	.+168    	; 0x2402 <GPIO_voidTogglePin+0xe4>
    235a:	8b e3       	ldi	r24, 0x3B	; 59
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	2b e3       	ldi	r18, 0x3B	; 59
    2360:	30 e0       	ldi	r19, 0x00	; 0
    2362:	f9 01       	movw	r30, r18
    2364:	20 81       	ld	r18, Z
    2366:	62 2f       	mov	r22, r18
    2368:	2a 81       	ldd	r18, Y+2	; 0x02
    236a:	42 2f       	mov	r20, r18
    236c:	50 e0       	ldi	r21, 0x00	; 0
    236e:	21 e0       	ldi	r18, 0x01	; 1
    2370:	30 e0       	ldi	r19, 0x00	; 0
    2372:	02 c0       	rjmp	.+4      	; 0x2378 <GPIO_voidTogglePin+0x5a>
    2374:	22 0f       	add	r18, r18
    2376:	33 1f       	adc	r19, r19
    2378:	4a 95       	dec	r20
    237a:	e2 f7       	brpl	.-8      	; 0x2374 <GPIO_voidTogglePin+0x56>
    237c:	26 27       	eor	r18, r22
    237e:	fc 01       	movw	r30, r24
    2380:	20 83       	st	Z, r18
    2382:	3f c0       	rjmp	.+126    	; 0x2402 <GPIO_voidTogglePin+0xe4>
    2384:	88 e3       	ldi	r24, 0x38	; 56
    2386:	90 e0       	ldi	r25, 0x00	; 0
    2388:	28 e3       	ldi	r18, 0x38	; 56
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	f9 01       	movw	r30, r18
    238e:	20 81       	ld	r18, Z
    2390:	62 2f       	mov	r22, r18
    2392:	2a 81       	ldd	r18, Y+2	; 0x02
    2394:	42 2f       	mov	r20, r18
    2396:	50 e0       	ldi	r21, 0x00	; 0
    2398:	21 e0       	ldi	r18, 0x01	; 1
    239a:	30 e0       	ldi	r19, 0x00	; 0
    239c:	02 c0       	rjmp	.+4      	; 0x23a2 <GPIO_voidTogglePin+0x84>
    239e:	22 0f       	add	r18, r18
    23a0:	33 1f       	adc	r19, r19
    23a2:	4a 95       	dec	r20
    23a4:	e2 f7       	brpl	.-8      	; 0x239e <GPIO_voidTogglePin+0x80>
    23a6:	26 27       	eor	r18, r22
    23a8:	fc 01       	movw	r30, r24
    23aa:	20 83       	st	Z, r18
    23ac:	2a c0       	rjmp	.+84     	; 0x2402 <GPIO_voidTogglePin+0xe4>
    23ae:	85 e3       	ldi	r24, 0x35	; 53
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	25 e3       	ldi	r18, 0x35	; 53
    23b4:	30 e0       	ldi	r19, 0x00	; 0
    23b6:	f9 01       	movw	r30, r18
    23b8:	20 81       	ld	r18, Z
    23ba:	62 2f       	mov	r22, r18
    23bc:	2a 81       	ldd	r18, Y+2	; 0x02
    23be:	42 2f       	mov	r20, r18
    23c0:	50 e0       	ldi	r21, 0x00	; 0
    23c2:	21 e0       	ldi	r18, 0x01	; 1
    23c4:	30 e0       	ldi	r19, 0x00	; 0
    23c6:	02 c0       	rjmp	.+4      	; 0x23cc <GPIO_voidTogglePin+0xae>
    23c8:	22 0f       	add	r18, r18
    23ca:	33 1f       	adc	r19, r19
    23cc:	4a 95       	dec	r20
    23ce:	e2 f7       	brpl	.-8      	; 0x23c8 <GPIO_voidTogglePin+0xaa>
    23d0:	26 27       	eor	r18, r22
    23d2:	fc 01       	movw	r30, r24
    23d4:	20 83       	st	Z, r18
    23d6:	15 c0       	rjmp	.+42     	; 0x2402 <GPIO_voidTogglePin+0xe4>
    23d8:	82 e3       	ldi	r24, 0x32	; 50
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	22 e3       	ldi	r18, 0x32	; 50
    23de:	30 e0       	ldi	r19, 0x00	; 0
    23e0:	f9 01       	movw	r30, r18
    23e2:	20 81       	ld	r18, Z
    23e4:	62 2f       	mov	r22, r18
    23e6:	2a 81       	ldd	r18, Y+2	; 0x02
    23e8:	42 2f       	mov	r20, r18
    23ea:	50 e0       	ldi	r21, 0x00	; 0
    23ec:	21 e0       	ldi	r18, 0x01	; 1
    23ee:	30 e0       	ldi	r19, 0x00	; 0
    23f0:	02 c0       	rjmp	.+4      	; 0x23f6 <GPIO_voidTogglePin+0xd8>
    23f2:	22 0f       	add	r18, r18
    23f4:	33 1f       	adc	r19, r19
    23f6:	4a 95       	dec	r20
    23f8:	e2 f7       	brpl	.-8      	; 0x23f2 <GPIO_voidTogglePin+0xd4>
    23fa:	26 27       	eor	r18, r22
    23fc:	fc 01       	movw	r30, r24
    23fe:	20 83       	st	Z, r18
    2400:	00 00       	nop
    2402:	00 00       	nop
    2404:	0f 90       	pop	r0
    2406:	0f 90       	pop	r0
    2408:	df 91       	pop	r29
    240a:	cf 91       	pop	r28
    240c:	08 95       	ret

0000240e <GPIO_voidSPI_SlaveInit>:
    240e:	cf 93       	push	r28
    2410:	df 93       	push	r29
    2412:	cd b7       	in	r28, 0x3d	; 61
    2414:	de b7       	in	r29, 0x3e	; 62
    2416:	40 e0       	ldi	r20, 0x00	; 0
    2418:	65 e0       	ldi	r22, 0x05	; 5
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
    2420:	40 e0       	ldi	r20, 0x00	; 0
    2422:	67 e0       	ldi	r22, 0x07	; 7
    2424:	81 e0       	ldi	r24, 0x01	; 1
    2426:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
    242a:	41 e0       	ldi	r20, 0x01	; 1
    242c:	66 e0       	ldi	r22, 0x06	; 6
    242e:	81 e0       	ldi	r24, 0x01	; 1
    2430:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
    2434:	40 e0       	ldi	r20, 0x00	; 0
    2436:	64 e0       	ldi	r22, 0x04	; 4
    2438:	81 e0       	ldi	r24, 0x01	; 1
    243a:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <GPIO_voidSetPinDirection>
    243e:	00 00       	nop
    2440:	df 91       	pop	r29
    2442:	cf 91       	pop	r28
    2444:	08 95       	ret

00002446 <PWM_voidInit>:
    2446:	cf 93       	push	r28
    2448:	df 93       	push	r29
    244a:	00 d0       	rcall	.+0      	; 0x244c <PWM_voidInit+0x6>
    244c:	cd b7       	in	r28, 0x3d	; 61
    244e:	de b7       	in	r29, 0x3e	; 62
    2450:	9a 83       	std	Y+2, r25	; 0x02
    2452:	89 83       	std	Y+1, r24	; 0x01
    2454:	89 81       	ldd	r24, Y+1	; 0x01
    2456:	9a 81       	ldd	r25, Y+2	; 0x02
    2458:	fc 01       	movw	r30, r24
    245a:	80 81       	ld	r24, Z
    245c:	88 2f       	mov	r24, r24
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	81 30       	cpi	r24, 0x01	; 1
    2462:	91 05       	cpc	r25, r1
    2464:	09 f4       	brne	.+2      	; 0x2468 <PWM_voidInit+0x22>
    2466:	6d c0       	rjmp	.+218    	; 0x2542 <PWM_voidInit+0xfc>
    2468:	82 30       	cpi	r24, 0x02	; 2
    246a:	91 05       	cpc	r25, r1
    246c:	09 f4       	brne	.+2      	; 0x2470 <PWM_voidInit+0x2a>
    246e:	e9 c0       	rjmp	.+466    	; 0x2642 <PWM_voidInit+0x1fc>
    2470:	89 2b       	or	r24, r25
    2472:	09 f0       	breq	.+2      	; 0x2476 <PWM_voidInit+0x30>
    2474:	59 c1       	rjmp	.+690    	; 0x2728 <PWM_voidInit+0x2e2>
    2476:	83 e5       	ldi	r24, 0x53	; 83
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	23 e5       	ldi	r18, 0x53	; 83
    247c:	30 e0       	ldi	r19, 0x00	; 0
    247e:	f9 01       	movw	r30, r18
    2480:	40 81       	ld	r20, Z
    2482:	29 81       	ldd	r18, Y+1	; 0x01
    2484:	3a 81       	ldd	r19, Y+2	; 0x02
    2486:	f9 01       	movw	r30, r18
    2488:	21 81       	ldd	r18, Z+1	; 0x01
    248a:	24 2b       	or	r18, r20
    248c:	fc 01       	movw	r30, r24
    248e:	20 83       	st	Z, r18
    2490:	89 81       	ldd	r24, Y+1	; 0x01
    2492:	9a 81       	ldd	r25, Y+2	; 0x02
    2494:	fc 01       	movw	r30, r24
    2496:	82 81       	ldd	r24, Z+2	; 0x02
    2498:	88 2f       	mov	r24, r24
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	82 30       	cpi	r24, 0x02	; 2
    249e:	91 05       	cpc	r25, r1
    24a0:	e9 f0       	breq	.+58     	; 0x24dc <PWM_voidInit+0x96>
    24a2:	83 30       	cpi	r24, 0x03	; 3
    24a4:	91 05       	cpc	r25, r1
    24a6:	2c f4       	brge	.+10     	; 0x24b2 <PWM_voidInit+0x6c>
    24a8:	00 97       	sbiw	r24, 0x00	; 0
    24aa:	61 f0       	breq	.+24     	; 0x24c4 <PWM_voidInit+0x7e>
    24ac:	01 97       	sbiw	r24, 0x01	; 1
    24ae:	79 f0       	breq	.+30     	; 0x24ce <PWM_voidInit+0x88>
    24b0:	31 c0       	rjmp	.+98     	; 0x2514 <PWM_voidInit+0xce>
    24b2:	84 30       	cpi	r24, 0x04	; 4
    24b4:	91 05       	cpc	r25, r1
    24b6:	01 f1       	breq	.+64     	; 0x24f8 <PWM_voidInit+0xb2>
    24b8:	84 30       	cpi	r24, 0x04	; 4
    24ba:	91 05       	cpc	r25, r1
    24bc:	b4 f0       	brlt	.+44     	; 0x24ea <PWM_voidInit+0xa4>
    24be:	05 97       	sbiw	r24, 0x05	; 5
    24c0:	11 f1       	breq	.+68     	; 0x2506 <PWM_voidInit+0xc0>
    24c2:	28 c0       	rjmp	.+80     	; 0x2514 <PWM_voidInit+0xce>
    24c4:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <TIMER0_Prescaler+0x1>
    24c8:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <TIMER0_Prescaler>
    24cc:	23 c0       	rjmp	.+70     	; 0x2514 <PWM_voidInit+0xce>
    24ce:	81 e0       	ldi	r24, 0x01	; 1
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <TIMER0_Prescaler+0x1>
    24d6:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <TIMER0_Prescaler>
    24da:	1c c0       	rjmp	.+56     	; 0x2514 <PWM_voidInit+0xce>
    24dc:	88 e0       	ldi	r24, 0x08	; 8
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <TIMER0_Prescaler+0x1>
    24e4:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <TIMER0_Prescaler>
    24e8:	15 c0       	rjmp	.+42     	; 0x2514 <PWM_voidInit+0xce>
    24ea:	80 e4       	ldi	r24, 0x40	; 64
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <TIMER0_Prescaler+0x1>
    24f2:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <TIMER0_Prescaler>
    24f6:	0e c0       	rjmp	.+28     	; 0x2514 <PWM_voidInit+0xce>
    24f8:	80 e0       	ldi	r24, 0x00	; 0
    24fa:	91 e0       	ldi	r25, 0x01	; 1
    24fc:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <TIMER0_Prescaler+0x1>
    2500:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <TIMER0_Prescaler>
    2504:	07 c0       	rjmp	.+14     	; 0x2514 <PWM_voidInit+0xce>
    2506:	80 e0       	ldi	r24, 0x00	; 0
    2508:	94 e0       	ldi	r25, 0x04	; 4
    250a:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <TIMER0_Prescaler+0x1>
    250e:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <TIMER0_Prescaler>
    2512:	00 00       	nop
    2514:	83 e5       	ldi	r24, 0x53	; 83
    2516:	90 e0       	ldi	r25, 0x00	; 0
    2518:	23 e5       	ldi	r18, 0x53	; 83
    251a:	30 e0       	ldi	r19, 0x00	; 0
    251c:	f9 01       	movw	r30, r18
    251e:	20 81       	ld	r18, Z
    2520:	28 7f       	andi	r18, 0xF8	; 248
    2522:	fc 01       	movw	r30, r24
    2524:	20 83       	st	Z, r18
    2526:	83 e5       	ldi	r24, 0x53	; 83
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	23 e5       	ldi	r18, 0x53	; 83
    252c:	30 e0       	ldi	r19, 0x00	; 0
    252e:	f9 01       	movw	r30, r18
    2530:	40 81       	ld	r20, Z
    2532:	29 81       	ldd	r18, Y+1	; 0x01
    2534:	3a 81       	ldd	r19, Y+2	; 0x02
    2536:	f9 01       	movw	r30, r18
    2538:	22 81       	ldd	r18, Z+2	; 0x02
    253a:	24 2b       	or	r18, r20
    253c:	fc 01       	movw	r30, r24
    253e:	20 83       	st	Z, r18
    2540:	f3 c0       	rjmp	.+486    	; 0x2728 <PWM_voidInit+0x2e2>
    2542:	8f e4       	ldi	r24, 0x4F	; 79
    2544:	90 e0       	ldi	r25, 0x00	; 0
    2546:	2f e4       	ldi	r18, 0x4F	; 79
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	f9 01       	movw	r30, r18
    254c:	20 81       	ld	r18, Z
    254e:	42 2f       	mov	r20, r18
    2550:	29 81       	ldd	r18, Y+1	; 0x01
    2552:	3a 81       	ldd	r19, Y+2	; 0x02
    2554:	f9 01       	movw	r30, r18
    2556:	21 81       	ldd	r18, Z+1	; 0x01
    2558:	23 70       	andi	r18, 0x03	; 3
    255a:	24 2b       	or	r18, r20
    255c:	fc 01       	movw	r30, r24
    255e:	20 83       	st	Z, r18
    2560:	8e e4       	ldi	r24, 0x4E	; 78
    2562:	90 e0       	ldi	r25, 0x00	; 0
    2564:	2e e4       	ldi	r18, 0x4E	; 78
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	f9 01       	movw	r30, r18
    256a:	20 81       	ld	r18, Z
    256c:	42 2f       	mov	r20, r18
    256e:	29 81       	ldd	r18, Y+1	; 0x01
    2570:	3a 81       	ldd	r19, Y+2	; 0x02
    2572:	f9 01       	movw	r30, r18
    2574:	21 81       	ldd	r18, Z+1	; 0x01
    2576:	26 95       	lsr	r18
    2578:	26 95       	lsr	r18
    257a:	22 2f       	mov	r18, r18
    257c:	30 e0       	ldi	r19, 0x00	; 0
    257e:	22 0f       	add	r18, r18
    2580:	33 1f       	adc	r19, r19
    2582:	22 0f       	add	r18, r18
    2584:	33 1f       	adc	r19, r19
    2586:	22 0f       	add	r18, r18
    2588:	33 1f       	adc	r19, r19
    258a:	24 2b       	or	r18, r20
    258c:	fc 01       	movw	r30, r24
    258e:	20 83       	st	Z, r18
    2590:	89 81       	ldd	r24, Y+1	; 0x01
    2592:	9a 81       	ldd	r25, Y+2	; 0x02
    2594:	fc 01       	movw	r30, r24
    2596:	82 81       	ldd	r24, Z+2	; 0x02
    2598:	88 2f       	mov	r24, r24
    259a:	90 e0       	ldi	r25, 0x00	; 0
    259c:	82 30       	cpi	r24, 0x02	; 2
    259e:	91 05       	cpc	r25, r1
    25a0:	e9 f0       	breq	.+58     	; 0x25dc <PWM_voidInit+0x196>
    25a2:	83 30       	cpi	r24, 0x03	; 3
    25a4:	91 05       	cpc	r25, r1
    25a6:	2c f4       	brge	.+10     	; 0x25b2 <PWM_voidInit+0x16c>
    25a8:	00 97       	sbiw	r24, 0x00	; 0
    25aa:	61 f0       	breq	.+24     	; 0x25c4 <PWM_voidInit+0x17e>
    25ac:	01 97       	sbiw	r24, 0x01	; 1
    25ae:	79 f0       	breq	.+30     	; 0x25ce <PWM_voidInit+0x188>
    25b0:	31 c0       	rjmp	.+98     	; 0x2614 <PWM_voidInit+0x1ce>
    25b2:	84 30       	cpi	r24, 0x04	; 4
    25b4:	91 05       	cpc	r25, r1
    25b6:	01 f1       	breq	.+64     	; 0x25f8 <PWM_voidInit+0x1b2>
    25b8:	84 30       	cpi	r24, 0x04	; 4
    25ba:	91 05       	cpc	r25, r1
    25bc:	b4 f0       	brlt	.+44     	; 0x25ea <PWM_voidInit+0x1a4>
    25be:	05 97       	sbiw	r24, 0x05	; 5
    25c0:	11 f1       	breq	.+68     	; 0x2606 <PWM_voidInit+0x1c0>
    25c2:	28 c0       	rjmp	.+80     	; 0x2614 <PWM_voidInit+0x1ce>
    25c4:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <TIMER1_Prescaler+0x1>
    25c8:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <TIMER1_Prescaler>
    25cc:	23 c0       	rjmp	.+70     	; 0x2614 <PWM_voidInit+0x1ce>
    25ce:	81 e0       	ldi	r24, 0x01	; 1
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <TIMER1_Prescaler+0x1>
    25d6:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <TIMER1_Prescaler>
    25da:	1c c0       	rjmp	.+56     	; 0x2614 <PWM_voidInit+0x1ce>
    25dc:	88 e0       	ldi	r24, 0x08	; 8
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <TIMER1_Prescaler+0x1>
    25e4:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <TIMER1_Prescaler>
    25e8:	15 c0       	rjmp	.+42     	; 0x2614 <PWM_voidInit+0x1ce>
    25ea:	80 e4       	ldi	r24, 0x40	; 64
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <TIMER1_Prescaler+0x1>
    25f2:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <TIMER1_Prescaler>
    25f6:	0e c0       	rjmp	.+28     	; 0x2614 <PWM_voidInit+0x1ce>
    25f8:	80 e0       	ldi	r24, 0x00	; 0
    25fa:	91 e0       	ldi	r25, 0x01	; 1
    25fc:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <TIMER1_Prescaler+0x1>
    2600:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <TIMER1_Prescaler>
    2604:	07 c0       	rjmp	.+14     	; 0x2614 <PWM_voidInit+0x1ce>
    2606:	80 e0       	ldi	r24, 0x00	; 0
    2608:	94 e0       	ldi	r25, 0x04	; 4
    260a:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <TIMER1_Prescaler+0x1>
    260e:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <TIMER1_Prescaler>
    2612:	00 00       	nop
    2614:	8e e4       	ldi	r24, 0x4E	; 78
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	2e e4       	ldi	r18, 0x4E	; 78
    261a:	30 e0       	ldi	r19, 0x00	; 0
    261c:	f9 01       	movw	r30, r18
    261e:	20 81       	ld	r18, Z
    2620:	28 7f       	andi	r18, 0xF8	; 248
    2622:	fc 01       	movw	r30, r24
    2624:	20 83       	st	Z, r18
    2626:	8e e4       	ldi	r24, 0x4E	; 78
    2628:	90 e0       	ldi	r25, 0x00	; 0
    262a:	2e e4       	ldi	r18, 0x4E	; 78
    262c:	30 e0       	ldi	r19, 0x00	; 0
    262e:	f9 01       	movw	r30, r18
    2630:	40 81       	ld	r20, Z
    2632:	29 81       	ldd	r18, Y+1	; 0x01
    2634:	3a 81       	ldd	r19, Y+2	; 0x02
    2636:	f9 01       	movw	r30, r18
    2638:	22 81       	ldd	r18, Z+2	; 0x02
    263a:	24 2b       	or	r18, r20
    263c:	fc 01       	movw	r30, r24
    263e:	20 83       	st	Z, r18
    2640:	73 c0       	rjmp	.+230    	; 0x2728 <PWM_voidInit+0x2e2>
    2642:	85 e4       	ldi	r24, 0x45	; 69
    2644:	90 e0       	ldi	r25, 0x00	; 0
    2646:	25 e4       	ldi	r18, 0x45	; 69
    2648:	30 e0       	ldi	r19, 0x00	; 0
    264a:	f9 01       	movw	r30, r18
    264c:	40 81       	ld	r20, Z
    264e:	29 81       	ldd	r18, Y+1	; 0x01
    2650:	3a 81       	ldd	r19, Y+2	; 0x02
    2652:	f9 01       	movw	r30, r18
    2654:	21 81       	ldd	r18, Z+1	; 0x01
    2656:	24 2b       	or	r18, r20
    2658:	fc 01       	movw	r30, r24
    265a:	20 83       	st	Z, r18
    265c:	89 81       	ldd	r24, Y+1	; 0x01
    265e:	9a 81       	ldd	r25, Y+2	; 0x02
    2660:	fc 01       	movw	r30, r24
    2662:	82 81       	ldd	r24, Z+2	; 0x02
    2664:	88 2f       	mov	r24, r24
    2666:	90 e0       	ldi	r25, 0x00	; 0
    2668:	09 2e       	mov	r0, r25
    266a:	00 0c       	add	r0, r0
    266c:	aa 0b       	sbc	r26, r26
    266e:	bb 0b       	sbc	r27, r27
    2670:	40 e0       	ldi	r20, 0x00	; 0
    2672:	50 e0       	ldi	r21, 0x00	; 0
    2674:	27 e0       	ldi	r18, 0x07	; 7
    2676:	30 e0       	ldi	r19, 0x00	; 0
    2678:	84 1b       	sub	r24, r20
    267a:	95 0b       	sbc	r25, r21
    267c:	28 17       	cp	r18, r24
    267e:	39 07       	cpc	r19, r25
    2680:	d8 f1       	brcs	.+118    	; 0x26f8 <PWM_voidInit+0x2b2>
    2682:	86 5d       	subi	r24, 0xD6	; 214
    2684:	9f 4f       	sbci	r25, 0xFF	; 255
    2686:	fc 01       	movw	r30, r24
    2688:	0c 94 de 17 	jmp	0x2fbc	; 0x2fbc <__tablejump2__>
    268c:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <TIMER2_Prescaler+0x1>
    2690:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <TIMER2_Prescaler>
    2694:	32 c0       	rjmp	.+100    	; 0x26fa <PWM_voidInit+0x2b4>
    2696:	81 e0       	ldi	r24, 0x01	; 1
    2698:	90 e0       	ldi	r25, 0x00	; 0
    269a:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    269e:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26a2:	2b c0       	rjmp	.+86     	; 0x26fa <PWM_voidInit+0x2b4>
    26a4:	88 e0       	ldi	r24, 0x08	; 8
    26a6:	90 e0       	ldi	r25, 0x00	; 0
    26a8:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    26ac:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26b0:	24 c0       	rjmp	.+72     	; 0x26fa <PWM_voidInit+0x2b4>
    26b2:	80 e2       	ldi	r24, 0x20	; 32
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    26ba:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26be:	1d c0       	rjmp	.+58     	; 0x26fa <PWM_voidInit+0x2b4>
    26c0:	80 e4       	ldi	r24, 0x40	; 64
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    26c8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26cc:	16 c0       	rjmp	.+44     	; 0x26fa <PWM_voidInit+0x2b4>
    26ce:	80 e8       	ldi	r24, 0x80	; 128
    26d0:	90 e0       	ldi	r25, 0x00	; 0
    26d2:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    26d6:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26da:	0f c0       	rjmp	.+30     	; 0x26fa <PWM_voidInit+0x2b4>
    26dc:	80 e0       	ldi	r24, 0x00	; 0
    26de:	91 e0       	ldi	r25, 0x01	; 1
    26e0:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    26e4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26e8:	08 c0       	rjmp	.+16     	; 0x26fa <PWM_voidInit+0x2b4>
    26ea:	80 e0       	ldi	r24, 0x00	; 0
    26ec:	94 e0       	ldi	r25, 0x04	; 4
    26ee:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TIMER2_Prescaler+0x1>
    26f2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TIMER2_Prescaler>
    26f6:	01 c0       	rjmp	.+2      	; 0x26fa <PWM_voidInit+0x2b4>
    26f8:	00 00       	nop
    26fa:	85 e4       	ldi	r24, 0x45	; 69
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	25 e4       	ldi	r18, 0x45	; 69
    2700:	30 e0       	ldi	r19, 0x00	; 0
    2702:	f9 01       	movw	r30, r18
    2704:	20 81       	ld	r18, Z
    2706:	28 7f       	andi	r18, 0xF8	; 248
    2708:	fc 01       	movw	r30, r24
    270a:	20 83       	st	Z, r18
    270c:	85 e4       	ldi	r24, 0x45	; 69
    270e:	90 e0       	ldi	r25, 0x00	; 0
    2710:	25 e4       	ldi	r18, 0x45	; 69
    2712:	30 e0       	ldi	r19, 0x00	; 0
    2714:	f9 01       	movw	r30, r18
    2716:	40 81       	ld	r20, Z
    2718:	29 81       	ldd	r18, Y+1	; 0x01
    271a:	3a 81       	ldd	r19, Y+2	; 0x02
    271c:	f9 01       	movw	r30, r18
    271e:	22 81       	ldd	r18, Z+2	; 0x02
    2720:	24 2b       	or	r18, r20
    2722:	fc 01       	movw	r30, r24
    2724:	20 83       	st	Z, r18
    2726:	00 00       	nop
    2728:	00 00       	nop
    272a:	0f 90       	pop	r0
    272c:	0f 90       	pop	r0
    272e:	df 91       	pop	r29
    2730:	cf 91       	pop	r28
    2732:	08 95       	ret

00002734 <PWM_voidSetOCPin>:
    2734:	cf 93       	push	r28
    2736:	df 93       	push	r29
    2738:	00 d0       	rcall	.+0      	; 0x273a <PWM_voidSetOCPin+0x6>
    273a:	1f 92       	push	r1
    273c:	cd b7       	in	r28, 0x3d	; 61
    273e:	de b7       	in	r29, 0x3e	; 62
    2740:	9a 83       	std	Y+2, r25	; 0x02
    2742:	89 83       	std	Y+1, r24	; 0x01
    2744:	6b 83       	std	Y+3, r22	; 0x03
    2746:	89 81       	ldd	r24, Y+1	; 0x01
    2748:	9a 81       	ldd	r25, Y+2	; 0x02
    274a:	fc 01       	movw	r30, r24
    274c:	80 81       	ld	r24, Z
    274e:	88 2f       	mov	r24, r24
    2750:	90 e0       	ldi	r25, 0x00	; 0
    2752:	81 30       	cpi	r24, 0x01	; 1
    2754:	91 05       	cpc	r25, r1
    2756:	89 f0       	breq	.+34     	; 0x277a <PWM_voidSetOCPin+0x46>
    2758:	82 30       	cpi	r24, 0x02	; 2
    275a:	91 05       	cpc	r25, r1
    275c:	c9 f0       	breq	.+50     	; 0x2790 <PWM_voidSetOCPin+0x5c>
    275e:	89 2b       	or	r24, r25
    2760:	09 f0       	breq	.+2      	; 0x2764 <PWM_voidSetOCPin+0x30>
    2762:	21 c0       	rjmp	.+66     	; 0x27a6 <PWM_voidSetOCPin+0x72>
    2764:	83 e5       	ldi	r24, 0x53	; 83
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	23 e5       	ldi	r18, 0x53	; 83
    276a:	30 e0       	ldi	r19, 0x00	; 0
    276c:	f9 01       	movw	r30, r18
    276e:	30 81       	ld	r19, Z
    2770:	2b 81       	ldd	r18, Y+3	; 0x03
    2772:	23 2b       	or	r18, r19
    2774:	fc 01       	movw	r30, r24
    2776:	20 83       	st	Z, r18
    2778:	16 c0       	rjmp	.+44     	; 0x27a6 <PWM_voidSetOCPin+0x72>
    277a:	8f e4       	ldi	r24, 0x4F	; 79
    277c:	90 e0       	ldi	r25, 0x00	; 0
    277e:	2f e4       	ldi	r18, 0x4F	; 79
    2780:	30 e0       	ldi	r19, 0x00	; 0
    2782:	f9 01       	movw	r30, r18
    2784:	30 81       	ld	r19, Z
    2786:	2b 81       	ldd	r18, Y+3	; 0x03
    2788:	23 2b       	or	r18, r19
    278a:	fc 01       	movw	r30, r24
    278c:	20 83       	st	Z, r18
    278e:	0b c0       	rjmp	.+22     	; 0x27a6 <PWM_voidSetOCPin+0x72>
    2790:	85 e4       	ldi	r24, 0x45	; 69
    2792:	90 e0       	ldi	r25, 0x00	; 0
    2794:	25 e4       	ldi	r18, 0x45	; 69
    2796:	30 e0       	ldi	r19, 0x00	; 0
    2798:	f9 01       	movw	r30, r18
    279a:	30 81       	ld	r19, Z
    279c:	2b 81       	ldd	r18, Y+3	; 0x03
    279e:	23 2b       	or	r18, r19
    27a0:	fc 01       	movw	r30, r24
    27a2:	20 83       	st	Z, r18
    27a4:	00 00       	nop
    27a6:	00 00       	nop
    27a8:	0f 90       	pop	r0
    27aa:	0f 90       	pop	r0
    27ac:	0f 90       	pop	r0
    27ae:	df 91       	pop	r29
    27b0:	cf 91       	pop	r28
    27b2:	08 95       	ret

000027b4 <PWM_voidPhaseFrequencyCorrectSetValues>:
    27b4:	cf 93       	push	r28
    27b6:	df 93       	push	r29
    27b8:	cd b7       	in	r28, 0x3d	; 61
    27ba:	de b7       	in	r29, 0x3e	; 62
    27bc:	27 97       	sbiw	r28, 0x07	; 7
    27be:	0f b6       	in	r0, 0x3f	; 63
    27c0:	f8 94       	cli
    27c2:	de bf       	out	0x3e, r29	; 62
    27c4:	0f be       	out	0x3f, r0	; 63
    27c6:	cd bf       	out	0x3d, r28	; 61
    27c8:	9a 83       	std	Y+2, r25	; 0x02
    27ca:	89 83       	std	Y+1, r24	; 0x01
    27cc:	6b 83       	std	Y+3, r22	; 0x03
    27ce:	5d 83       	std	Y+5, r21	; 0x05
    27d0:	4c 83       	std	Y+4, r20	; 0x04
    27d2:	3f 83       	std	Y+7, r19	; 0x07
    27d4:	2e 83       	std	Y+6, r18	; 0x06
    27d6:	8e e4       	ldi	r24, 0x4E	; 78
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	2e e4       	ldi	r18, 0x4E	; 78
    27dc:	30 e0       	ldi	r19, 0x00	; 0
    27de:	f9 01       	movw	r30, r18
    27e0:	20 81       	ld	r18, Z
    27e2:	20 61       	ori	r18, 0x10	; 16
    27e4:	fc 01       	movw	r30, r24
    27e6:	20 83       	st	Z, r18
    27e8:	8e e4       	ldi	r24, 0x4E	; 78
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	2e e4       	ldi	r18, 0x4E	; 78
    27ee:	30 e0       	ldi	r19, 0x00	; 0
    27f0:	f9 01       	movw	r30, r18
    27f2:	20 81       	ld	r18, Z
    27f4:	27 7f       	andi	r18, 0xF7	; 247
    27f6:	fc 01       	movw	r30, r24
    27f8:	20 83       	st	Z, r18
    27fa:	8f e4       	ldi	r24, 0x4F	; 79
    27fc:	90 e0       	ldi	r25, 0x00	; 0
    27fe:	2f e4       	ldi	r18, 0x4F	; 79
    2800:	30 e0       	ldi	r19, 0x00	; 0
    2802:	f9 01       	movw	r30, r18
    2804:	20 81       	ld	r18, Z
    2806:	2e 7f       	andi	r18, 0xFE	; 254
    2808:	fc 01       	movw	r30, r24
    280a:	20 83       	st	Z, r18
    280c:	8f e4       	ldi	r24, 0x4F	; 79
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	2f e4       	ldi	r18, 0x4F	; 79
    2812:	30 e0       	ldi	r19, 0x00	; 0
    2814:	f9 01       	movw	r30, r18
    2816:	20 81       	ld	r18, Z
    2818:	2d 7f       	andi	r18, 0xFD	; 253
    281a:	fc 01       	movw	r30, r24
    281c:	20 83       	st	Z, r18
    281e:	86 e4       	ldi	r24, 0x46	; 70
    2820:	90 e0       	ldi	r25, 0x00	; 0
    2822:	2c 81       	ldd	r18, Y+4	; 0x04
    2824:	3d 81       	ldd	r19, Y+5	; 0x05
    2826:	fc 01       	movw	r30, r24
    2828:	31 83       	std	Z+1, r19	; 0x01
    282a:	20 83       	st	Z, r18
    282c:	8b 81       	ldd	r24, Y+3	; 0x03
    282e:	80 32       	cpi	r24, 0x20	; 32
    2830:	19 f0       	breq	.+6      	; 0x2838 <PWM_voidPhaseFrequencyCorrectSetValues+0x84>
    2832:	8b 81       	ldd	r24, Y+3	; 0x03
    2834:	80 33       	cpi	r24, 0x30	; 48
    2836:	41 f4       	brne	.+16     	; 0x2848 <PWM_voidPhaseFrequencyCorrectSetValues+0x94>
    2838:	88 e4       	ldi	r24, 0x48	; 72
    283a:	90 e0       	ldi	r25, 0x00	; 0
    283c:	2e 81       	ldd	r18, Y+6	; 0x06
    283e:	3f 81       	ldd	r19, Y+7	; 0x07
    2840:	fc 01       	movw	r30, r24
    2842:	31 83       	std	Z+1, r19	; 0x01
    2844:	20 83       	st	Z, r18
    2846:	0d c0       	rjmp	.+26     	; 0x2862 <PWM_voidPhaseFrequencyCorrectSetValues+0xae>
    2848:	8b 81       	ldd	r24, Y+3	; 0x03
    284a:	80 38       	cpi	r24, 0x80	; 128
    284c:	19 f0       	breq	.+6      	; 0x2854 <PWM_voidPhaseFrequencyCorrectSetValues+0xa0>
    284e:	8b 81       	ldd	r24, Y+3	; 0x03
    2850:	80 3c       	cpi	r24, 0xC0	; 192
    2852:	39 f4       	brne	.+14     	; 0x2862 <PWM_voidPhaseFrequencyCorrectSetValues+0xae>
    2854:	8a e4       	ldi	r24, 0x4A	; 74
    2856:	90 e0       	ldi	r25, 0x00	; 0
    2858:	2e 81       	ldd	r18, Y+6	; 0x06
    285a:	3f 81       	ldd	r19, Y+7	; 0x07
    285c:	fc 01       	movw	r30, r24
    285e:	31 83       	std	Z+1, r19	; 0x01
    2860:	20 83       	st	Z, r18
    2862:	00 00       	nop
    2864:	27 96       	adiw	r28, 0x07	; 7
    2866:	0f b6       	in	r0, 0x3f	; 63
    2868:	f8 94       	cli
    286a:	de bf       	out	0x3e, r29	; 62
    286c:	0f be       	out	0x3f, r0	; 63
    286e:	cd bf       	out	0x3d, r28	; 61
    2870:	df 91       	pop	r29
    2872:	cf 91       	pop	r28
    2874:	08 95       	ret

00002876 <MCAL_SPI_voidInit>:
    2876:	cf 93       	push	r28
    2878:	df 93       	push	r29
    287a:	00 d0       	rcall	.+0      	; 0x287c <MCAL_SPI_voidInit+0x6>
    287c:	cd b7       	in	r28, 0x3d	; 61
    287e:	de b7       	in	r29, 0x3e	; 62
    2880:	9a 83       	std	Y+2, r25	; 0x02
    2882:	89 83       	std	Y+1, r24	; 0x01
    2884:	89 81       	ldd	r24, Y+1	; 0x01
    2886:	9a 81       	ldd	r25, Y+2	; 0x02
    2888:	fc 01       	movw	r30, r24
    288a:	85 81       	ldd	r24, Z+5	; 0x05
    288c:	86 95       	lsr	r24
    288e:	86 95       	lsr	r24
    2890:	88 2f       	mov	r24, r24
    2892:	90 e0       	ldi	r25, 0x00	; 0
    2894:	81 70       	andi	r24, 0x01	; 1
    2896:	99 27       	eor	r25, r25
    2898:	89 2b       	or	r24, r25
    289a:	51 f0       	breq	.+20     	; 0x28b0 <MCAL_SPI_voidInit+0x3a>
    289c:	8e e2       	ldi	r24, 0x2E	; 46
    289e:	90 e0       	ldi	r25, 0x00	; 0
    28a0:	2e e2       	ldi	r18, 0x2E	; 46
    28a2:	30 e0       	ldi	r19, 0x00	; 0
    28a4:	f9 01       	movw	r30, r18
    28a6:	20 81       	ld	r18, Z
    28a8:	21 60       	ori	r18, 0x01	; 1
    28aa:	fc 01       	movw	r30, r24
    28ac:	20 83       	st	Z, r18
    28ae:	09 c0       	rjmp	.+18     	; 0x28c2 <MCAL_SPI_voidInit+0x4c>
    28b0:	8e e2       	ldi	r24, 0x2E	; 46
    28b2:	90 e0       	ldi	r25, 0x00	; 0
    28b4:	2e e2       	ldi	r18, 0x2E	; 46
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	f9 01       	movw	r30, r18
    28ba:	20 81       	ld	r18, Z
    28bc:	2e 7f       	andi	r18, 0xFE	; 254
    28be:	fc 01       	movw	r30, r24
    28c0:	20 83       	st	Z, r18
    28c2:	8d e2       	ldi	r24, 0x2D	; 45
    28c4:	90 e0       	ldi	r25, 0x00	; 0
    28c6:	29 81       	ldd	r18, Y+1	; 0x01
    28c8:	3a 81       	ldd	r19, Y+2	; 0x02
    28ca:	f9 01       	movw	r30, r18
    28cc:	40 81       	ld	r20, Z
    28ce:	29 81       	ldd	r18, Y+1	; 0x01
    28d0:	3a 81       	ldd	r19, Y+2	; 0x02
    28d2:	f9 01       	movw	r30, r18
    28d4:	21 81       	ldd	r18, Z+1	; 0x01
    28d6:	42 2b       	or	r20, r18
    28d8:	29 81       	ldd	r18, Y+1	; 0x01
    28da:	3a 81       	ldd	r19, Y+2	; 0x02
    28dc:	f9 01       	movw	r30, r18
    28de:	22 81       	ldd	r18, Z+2	; 0x02
    28e0:	42 2b       	or	r20, r18
    28e2:	29 81       	ldd	r18, Y+1	; 0x01
    28e4:	3a 81       	ldd	r19, Y+2	; 0x02
    28e6:	f9 01       	movw	r30, r18
    28e8:	23 81       	ldd	r18, Z+3	; 0x03
    28ea:	42 2b       	or	r20, r18
    28ec:	29 81       	ldd	r18, Y+1	; 0x01
    28ee:	3a 81       	ldd	r19, Y+2	; 0x02
    28f0:	f9 01       	movw	r30, r18
    28f2:	24 81       	ldd	r18, Z+4	; 0x04
    28f4:	42 2b       	or	r20, r18
    28f6:	29 81       	ldd	r18, Y+1	; 0x01
    28f8:	3a 81       	ldd	r19, Y+2	; 0x02
    28fa:	f9 01       	movw	r30, r18
    28fc:	25 81       	ldd	r18, Z+5	; 0x05
    28fe:	23 70       	andi	r18, 0x03	; 3
    2900:	24 2b       	or	r18, r20
    2902:	20 64       	ori	r18, 0x40	; 64
    2904:	fc 01       	movw	r30, r24
    2906:	20 83       	st	Z, r18
    2908:	00 00       	nop
    290a:	0f 90       	pop	r0
    290c:	0f 90       	pop	r0
    290e:	df 91       	pop	r29
    2910:	cf 91       	pop	r28
    2912:	08 95       	ret

00002914 <MCAL_SPI_voidByteExchangeAsynch>:
    2914:	cf 93       	push	r28
    2916:	df 93       	push	r29
    2918:	00 d0       	rcall	.+0      	; 0x291a <MCAL_SPI_voidByteExchangeAsynch+0x6>
    291a:	1f 92       	push	r1
    291c:	cd b7       	in	r28, 0x3d	; 61
    291e:	de b7       	in	r29, 0x3e	; 62
    2920:	89 83       	std	Y+1, r24	; 0x01
    2922:	7b 83       	std	Y+3, r23	; 0x03
    2924:	6a 83       	std	Y+2, r22	; 0x02
    2926:	8d e2       	ldi	r24, 0x2D	; 45
    2928:	90 e0       	ldi	r25, 0x00	; 0
    292a:	fc 01       	movw	r30, r24
    292c:	80 81       	ld	r24, Z
    292e:	88 2f       	mov	r24, r24
    2930:	90 e0       	ldi	r25, 0x00	; 0
    2932:	80 74       	andi	r24, 0x40	; 64
    2934:	99 27       	eor	r25, r25
    2936:	89 2b       	or	r24, r25
    2938:	a1 f0       	breq	.+40     	; 0x2962 <MCAL_SPI_voidByteExchangeAsynch+0x4e>
    293a:	8f e2       	ldi	r24, 0x2F	; 47
    293c:	90 e0       	ldi	r25, 0x00	; 0
    293e:	29 81       	ldd	r18, Y+1	; 0x01
    2940:	fc 01       	movw	r30, r24
    2942:	20 83       	st	Z, r18
    2944:	00 00       	nop
    2946:	8e e2       	ldi	r24, 0x2E	; 46
    2948:	90 e0       	ldi	r25, 0x00	; 0
    294a:	fc 01       	movw	r30, r24
    294c:	80 81       	ld	r24, Z
    294e:	88 23       	and	r24, r24
    2950:	d4 f7       	brge	.-12     	; 0x2946 <MCAL_SPI_voidByteExchangeAsynch+0x32>
    2952:	8f e2       	ldi	r24, 0x2F	; 47
    2954:	90 e0       	ldi	r25, 0x00	; 0
    2956:	fc 01       	movw	r30, r24
    2958:	20 81       	ld	r18, Z
    295a:	8a 81       	ldd	r24, Y+2	; 0x02
    295c:	9b 81       	ldd	r25, Y+3	; 0x03
    295e:	fc 01       	movw	r30, r24
    2960:	20 83       	st	Z, r18
    2962:	00 00       	nop
    2964:	0f 90       	pop	r0
    2966:	0f 90       	pop	r0
    2968:	0f 90       	pop	r0
    296a:	df 91       	pop	r29
    296c:	cf 91       	pop	r28
    296e:	08 95       	ret

00002970 <__vector_10>:
    2970:	1f 92       	push	r1
    2972:	0f 92       	push	r0
    2974:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2978:	0f 92       	push	r0
    297a:	11 24       	eor	r1, r1
    297c:	2f 93       	push	r18
    297e:	3f 93       	push	r19
    2980:	4f 93       	push	r20
    2982:	5f 93       	push	r21
    2984:	6f 93       	push	r22
    2986:	7f 93       	push	r23
    2988:	8f 93       	push	r24
    298a:	9f 93       	push	r25
    298c:	af 93       	push	r26
    298e:	bf 93       	push	r27
    2990:	ef 93       	push	r30
    2992:	ff 93       	push	r31
    2994:	cf 93       	push	r28
    2996:	df 93       	push	r29
    2998:	cd b7       	in	r28, 0x3d	; 61
    299a:	de b7       	in	r29, 0x3e	; 62
    299c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <Global_ExchangeComplate>
    29a0:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <Global_ExchangeComplate+0x1>
    29a4:	fc 01       	movw	r30, r24
    29a6:	09 95       	icall
    29a8:	00 00       	nop
    29aa:	df 91       	pop	r29
    29ac:	cf 91       	pop	r28
    29ae:	ff 91       	pop	r31
    29b0:	ef 91       	pop	r30
    29b2:	bf 91       	pop	r27
    29b4:	af 91       	pop	r26
    29b6:	9f 91       	pop	r25
    29b8:	8f 91       	pop	r24
    29ba:	7f 91       	pop	r23
    29bc:	6f 91       	pop	r22
    29be:	5f 91       	pop	r21
    29c0:	4f 91       	pop	r20
    29c2:	3f 91       	pop	r19
    29c4:	2f 91       	pop	r18
    29c6:	0f 90       	pop	r0
    29c8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    29cc:	0f 90       	pop	r0
    29ce:	1f 90       	pop	r1
    29d0:	18 95       	reti

000029d2 <MCAL_USART_init>:
    29d2:	0f 93       	push	r16
    29d4:	1f 93       	push	r17
    29d6:	cf 93       	push	r28
    29d8:	df 93       	push	r29
    29da:	00 d0       	rcall	.+0      	; 0x29dc <MCAL_USART_init+0xa>
    29dc:	cd b7       	in	r28, 0x3d	; 61
    29de:	de b7       	in	r29, 0x3e	; 62
    29e0:	9a 83       	std	Y+2, r25	; 0x02
    29e2:	89 83       	std	Y+1, r24	; 0x01
    29e4:	89 81       	ldd	r24, Y+1	; 0x01
    29e6:	9a 81       	ldd	r25, Y+2	; 0x02
    29e8:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <Global_uartcfg+0x1>
    29ec:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <Global_uartcfg>
    29f0:	8a e2       	ldi	r24, 0x2A	; 42
    29f2:	90 e0       	ldi	r25, 0x00	; 0
    29f4:	2a e2       	ldi	r18, 0x2A	; 42
    29f6:	30 e0       	ldi	r19, 0x00	; 0
    29f8:	f9 01       	movw	r30, r18
    29fa:	20 81       	ld	r18, Z
    29fc:	27 7e       	andi	r18, 0xE7	; 231
    29fe:	fc 01       	movw	r30, r24
    2a00:	20 83       	st	Z, r18
    2a02:	8a e2       	ldi	r24, 0x2A	; 42
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	2a e2       	ldi	r18, 0x2A	; 42
    2a08:	30 e0       	ldi	r19, 0x00	; 0
    2a0a:	f9 01       	movw	r30, r18
    2a0c:	20 81       	ld	r18, Z
    2a0e:	42 2f       	mov	r20, r18
    2a10:	29 81       	ldd	r18, Y+1	; 0x01
    2a12:	3a 81       	ldd	r19, Y+2	; 0x02
    2a14:	f9 01       	movw	r30, r18
    2a16:	25 81       	ldd	r18, Z+5	; 0x05
    2a18:	22 2f       	mov	r18, r18
    2a1a:	30 e0       	ldi	r19, 0x00	; 0
    2a1c:	22 0f       	add	r18, r18
    2a1e:	33 1f       	adc	r19, r19
    2a20:	22 0f       	add	r18, r18
    2a22:	33 1f       	adc	r19, r19
    2a24:	22 0f       	add	r18, r18
    2a26:	33 1f       	adc	r19, r19
    2a28:	24 2b       	or	r18, r20
    2a2a:	fc 01       	movw	r30, r24
    2a2c:	20 83       	st	Z, r18
    2a2e:	89 81       	ldd	r24, Y+1	; 0x01
    2a30:	9a 81       	ldd	r25, Y+2	; 0x02
    2a32:	fc 01       	movw	r30, r24
    2a34:	82 81       	ldd	r24, Z+2	; 0x02
    2a36:	86 95       	lsr	r24
    2a38:	86 95       	lsr	r24
    2a3a:	88 2f       	mov	r24, r24
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	81 70       	andi	r24, 0x01	; 1
    2a40:	99 27       	eor	r25, r25
    2a42:	89 2b       	or	r24, r25
    2a44:	51 f0       	breq	.+20     	; 0x2a5a <MCAL_USART_init+0x88>
    2a46:	8a e2       	ldi	r24, 0x2A	; 42
    2a48:	90 e0       	ldi	r25, 0x00	; 0
    2a4a:	2a e2       	ldi	r18, 0x2A	; 42
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	f9 01       	movw	r30, r18
    2a50:	20 81       	ld	r18, Z
    2a52:	24 60       	ori	r18, 0x04	; 4
    2a54:	fc 01       	movw	r30, r24
    2a56:	20 83       	st	Z, r18
    2a58:	09 c0       	rjmp	.+18     	; 0x2a6c <MCAL_USART_init+0x9a>
    2a5a:	8a e2       	ldi	r24, 0x2A	; 42
    2a5c:	90 e0       	ldi	r25, 0x00	; 0
    2a5e:	2a e2       	ldi	r18, 0x2A	; 42
    2a60:	30 e0       	ldi	r19, 0x00	; 0
    2a62:	f9 01       	movw	r30, r18
    2a64:	20 81       	ld	r18, Z
    2a66:	2b 7f       	andi	r18, 0xFB	; 251
    2a68:	fc 01       	movw	r30, r24
    2a6a:	20 83       	st	Z, r18
    2a6c:	80 e4       	ldi	r24, 0x40	; 64
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	29 81       	ldd	r18, Y+1	; 0x01
    2a72:	3a 81       	ldd	r19, Y+2	; 0x02
    2a74:	f9 01       	movw	r30, r18
    2a76:	22 81       	ldd	r18, Z+2	; 0x02
    2a78:	22 2f       	mov	r18, r18
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	23 70       	andi	r18, 0x03	; 3
    2a7e:	33 27       	eor	r19, r19
    2a80:	22 0f       	add	r18, r18
    2a82:	33 1f       	adc	r19, r19
    2a84:	42 2f       	mov	r20, r18
    2a86:	29 81       	ldd	r18, Y+1	; 0x01
    2a88:	3a 81       	ldd	r19, Y+2	; 0x02
    2a8a:	f9 01       	movw	r30, r18
    2a8c:	23 81       	ldd	r18, Z+3	; 0x03
    2a8e:	42 2b       	or	r20, r18
    2a90:	29 81       	ldd	r18, Y+1	; 0x01
    2a92:	3a 81       	ldd	r19, Y+2	; 0x02
    2a94:	f9 01       	movw	r30, r18
    2a96:	24 81       	ldd	r18, Z+4	; 0x04
    2a98:	24 2b       	or	r18, r20
    2a9a:	20 68       	ori	r18, 0x80	; 128
    2a9c:	fc 01       	movw	r30, r24
    2a9e:	20 83       	st	Z, r18
    2aa0:	09 e2       	ldi	r16, 0x29	; 41
    2aa2:	10 e0       	ldi	r17, 0x00	; 0
    2aa4:	89 81       	ldd	r24, Y+1	; 0x01
    2aa6:	9a 81       	ldd	r25, Y+2	; 0x02
    2aa8:	fc 01       	movw	r30, r24
    2aaa:	80 81       	ld	r24, Z
    2aac:	91 81       	ldd	r25, Z+1	; 0x01
    2aae:	cc 01       	movw	r24, r24
    2ab0:	a0 e0       	ldi	r26, 0x00	; 0
    2ab2:	b0 e0       	ldi	r27, 0x00	; 0
    2ab4:	88 0f       	add	r24, r24
    2ab6:	99 1f       	adc	r25, r25
    2ab8:	aa 1f       	adc	r26, r26
    2aba:	bb 1f       	adc	r27, r27
    2abc:	88 0f       	add	r24, r24
    2abe:	99 1f       	adc	r25, r25
    2ac0:	aa 1f       	adc	r26, r26
    2ac2:	bb 1f       	adc	r27, r27
    2ac4:	88 0f       	add	r24, r24
    2ac6:	99 1f       	adc	r25, r25
    2ac8:	aa 1f       	adc	r26, r26
    2aca:	bb 1f       	adc	r27, r27
    2acc:	88 0f       	add	r24, r24
    2ace:	99 1f       	adc	r25, r25
    2ad0:	aa 1f       	adc	r26, r26
    2ad2:	bb 1f       	adc	r27, r27
    2ad4:	9c 01       	movw	r18, r24
    2ad6:	ad 01       	movw	r20, r26
    2ad8:	80 e0       	ldi	r24, 0x00	; 0
    2ada:	94 e2       	ldi	r25, 0x24	; 36
    2adc:	a4 ef       	ldi	r26, 0xF4	; 244
    2ade:	b0 e0       	ldi	r27, 0x00	; 0
    2ae0:	bc 01       	movw	r22, r24
    2ae2:	cd 01       	movw	r24, r26
    2ae4:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <__udivmodsi4>
    2ae8:	da 01       	movw	r26, r20
    2aea:	c9 01       	movw	r24, r18
    2aec:	81 50       	subi	r24, 0x01	; 1
    2aee:	f8 01       	movw	r30, r16
    2af0:	80 83       	st	Z, r24
    2af2:	00 e4       	ldi	r16, 0x40	; 64
    2af4:	10 e0       	ldi	r17, 0x00	; 0
    2af6:	89 81       	ldd	r24, Y+1	; 0x01
    2af8:	9a 81       	ldd	r25, Y+2	; 0x02
    2afa:	fc 01       	movw	r30, r24
    2afc:	80 81       	ld	r24, Z
    2afe:	91 81       	ldd	r25, Z+1	; 0x01
    2b00:	cc 01       	movw	r24, r24
    2b02:	a0 e0       	ldi	r26, 0x00	; 0
    2b04:	b0 e0       	ldi	r27, 0x00	; 0
    2b06:	88 0f       	add	r24, r24
    2b08:	99 1f       	adc	r25, r25
    2b0a:	aa 1f       	adc	r26, r26
    2b0c:	bb 1f       	adc	r27, r27
    2b0e:	88 0f       	add	r24, r24
    2b10:	99 1f       	adc	r25, r25
    2b12:	aa 1f       	adc	r26, r26
    2b14:	bb 1f       	adc	r27, r27
    2b16:	88 0f       	add	r24, r24
    2b18:	99 1f       	adc	r25, r25
    2b1a:	aa 1f       	adc	r26, r26
    2b1c:	bb 1f       	adc	r27, r27
    2b1e:	88 0f       	add	r24, r24
    2b20:	99 1f       	adc	r25, r25
    2b22:	aa 1f       	adc	r26, r26
    2b24:	bb 1f       	adc	r27, r27
    2b26:	9c 01       	movw	r18, r24
    2b28:	ad 01       	movw	r20, r26
    2b2a:	80 e0       	ldi	r24, 0x00	; 0
    2b2c:	94 e2       	ldi	r25, 0x24	; 36
    2b2e:	a4 ef       	ldi	r26, 0xF4	; 244
    2b30:	b0 e0       	ldi	r27, 0x00	; 0
    2b32:	bc 01       	movw	r22, r24
    2b34:	cd 01       	movw	r24, r26
    2b36:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <__udivmodsi4>
    2b3a:	da 01       	movw	r26, r20
    2b3c:	c9 01       	movw	r24, r18
    2b3e:	81 50       	subi	r24, 0x01	; 1
    2b40:	88 2f       	mov	r24, r24
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	89 2f       	mov	r24, r25
    2b46:	99 0f       	add	r25, r25
    2b48:	99 0b       	sbc	r25, r25
    2b4a:	f8 01       	movw	r30, r16
    2b4c:	80 83       	st	Z, r24
    2b4e:	00 00       	nop
    2b50:	0f 90       	pop	r0
    2b52:	0f 90       	pop	r0
    2b54:	df 91       	pop	r29
    2b56:	cf 91       	pop	r28
    2b58:	1f 91       	pop	r17
    2b5a:	0f 91       	pop	r16
    2b5c:	08 95       	ret

00002b5e <MCAL_USART_TxByteSynch>:
    2b5e:	cf 93       	push	r28
    2b60:	df 93       	push	r29
    2b62:	1f 92       	push	r1
    2b64:	cd b7       	in	r28, 0x3d	; 61
    2b66:	de b7       	in	r29, 0x3e	; 62
    2b68:	89 83       	std	Y+1, r24	; 0x01
    2b6a:	00 00       	nop
    2b6c:	8b e2       	ldi	r24, 0x2B	; 43
    2b6e:	90 e0       	ldi	r25, 0x00	; 0
    2b70:	fc 01       	movw	r30, r24
    2b72:	80 81       	ld	r24, Z
    2b74:	88 2f       	mov	r24, r24
    2b76:	90 e0       	ldi	r25, 0x00	; 0
    2b78:	80 72       	andi	r24, 0x20	; 32
    2b7a:	99 27       	eor	r25, r25
    2b7c:	89 2b       	or	r24, r25
    2b7e:	b1 f3       	breq	.-20     	; 0x2b6c <MCAL_USART_TxByteSynch+0xe>
    2b80:	89 81       	ldd	r24, Y+1	; 0x01
    2b82:	0e 94 ce 15 	call	0x2b9c	; 0x2b9c <MCAL_u8PrivateEffectiveData>
    2b86:	89 83       	std	Y+1, r24	; 0x01
    2b88:	8c e2       	ldi	r24, 0x2C	; 44
    2b8a:	90 e0       	ldi	r25, 0x00	; 0
    2b8c:	29 81       	ldd	r18, Y+1	; 0x01
    2b8e:	fc 01       	movw	r30, r24
    2b90:	20 83       	st	Z, r18
    2b92:	00 00       	nop
    2b94:	0f 90       	pop	r0
    2b96:	df 91       	pop	r29
    2b98:	cf 91       	pop	r28
    2b9a:	08 95       	ret

00002b9c <MCAL_u8PrivateEffectiveData>:
    2b9c:	cf 93       	push	r28
    2b9e:	df 93       	push	r29
    2ba0:	00 d0       	rcall	.+0      	; 0x2ba2 <MCAL_u8PrivateEffectiveData+0x6>
    2ba2:	cd b7       	in	r28, 0x3d	; 61
    2ba4:	de b7       	in	r29, 0x3e	; 62
    2ba6:	8a 83       	std	Y+2, r24	; 0x02
    2ba8:	19 82       	std	Y+1, r1	; 0x01
    2baa:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <Global_uartcfg>
    2bae:	90 91 d5 00 	lds	r25, 0x00D5	; 0x8000d5 <Global_uartcfg+0x1>
    2bb2:	fc 01       	movw	r30, r24
    2bb4:	82 81       	ldd	r24, Z+2	; 0x02
    2bb6:	88 2f       	mov	r24, r24
    2bb8:	90 e0       	ldi	r25, 0x00	; 0
    2bba:	81 30       	cpi	r24, 0x01	; 1
    2bbc:	91 05       	cpc	r25, r1
    2bbe:	81 f0       	breq	.+32     	; 0x2be0 <MCAL_u8PrivateEffectiveData+0x44>
    2bc0:	82 30       	cpi	r24, 0x02	; 2
    2bc2:	91 05       	cpc	r25, r1
    2bc4:	1c f4       	brge	.+6      	; 0x2bcc <MCAL_u8PrivateEffectiveData+0x30>
    2bc6:	89 2b       	or	r24, r25
    2bc8:	39 f0       	breq	.+14     	; 0x2bd8 <MCAL_u8PrivateEffectiveData+0x3c>
    2bca:	15 c0       	rjmp	.+42     	; 0x2bf6 <MCAL_u8PrivateEffectiveData+0x5a>
    2bcc:	82 30       	cpi	r24, 0x02	; 2
    2bce:	91 05       	cpc	r25, r1
    2bd0:	59 f0       	breq	.+22     	; 0x2be8 <MCAL_u8PrivateEffectiveData+0x4c>
    2bd2:	03 97       	sbiw	r24, 0x03	; 3
    2bd4:	69 f0       	breq	.+26     	; 0x2bf0 <MCAL_u8PrivateEffectiveData+0x54>
    2bd6:	0f c0       	rjmp	.+30     	; 0x2bf6 <MCAL_u8PrivateEffectiveData+0x5a>
    2bd8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bda:	8f 71       	andi	r24, 0x1F	; 31
    2bdc:	89 83       	std	Y+1, r24	; 0x01
    2bde:	0b c0       	rjmp	.+22     	; 0x2bf6 <MCAL_u8PrivateEffectiveData+0x5a>
    2be0:	8a 81       	ldd	r24, Y+2	; 0x02
    2be2:	8f 73       	andi	r24, 0x3F	; 63
    2be4:	89 83       	std	Y+1, r24	; 0x01
    2be6:	07 c0       	rjmp	.+14     	; 0x2bf6 <MCAL_u8PrivateEffectiveData+0x5a>
    2be8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bea:	8f 77       	andi	r24, 0x7F	; 127
    2bec:	89 83       	std	Y+1, r24	; 0x01
    2bee:	03 c0       	rjmp	.+6      	; 0x2bf6 <MCAL_u8PrivateEffectiveData+0x5a>
    2bf0:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf2:	89 83       	std	Y+1, r24	; 0x01
    2bf4:	00 00       	nop
    2bf6:	89 81       	ldd	r24, Y+1	; 0x01
    2bf8:	0f 90       	pop	r0
    2bfa:	0f 90       	pop	r0
    2bfc:	df 91       	pop	r29
    2bfe:	cf 91       	pop	r28
    2c00:	08 95       	ret

00002c02 <MCAL_USART_RxByteAsynch>:
    2c02:	cf 93       	push	r28
    2c04:	df 93       	push	r29
    2c06:	00 d0       	rcall	.+0      	; 0x2c08 <MCAL_USART_RxByteAsynch+0x6>
    2c08:	cd b7       	in	r28, 0x3d	; 61
    2c0a:	de b7       	in	r29, 0x3e	; 62
    2c0c:	9a 83       	std	Y+2, r25	; 0x02
    2c0e:	89 83       	std	Y+1, r24	; 0x01
    2c10:	89 81       	ldd	r24, Y+1	; 0x01
    2c12:	9a 81       	ldd	r25, Y+2	; 0x02
    2c14:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <Global_RxComplate+0x1>
    2c18:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <Global_RxComplate>
    2c1c:	8a e2       	ldi	r24, 0x2A	; 42
    2c1e:	90 e0       	ldi	r25, 0x00	; 0
    2c20:	2a e2       	ldi	r18, 0x2A	; 42
    2c22:	30 e0       	ldi	r19, 0x00	; 0
    2c24:	f9 01       	movw	r30, r18
    2c26:	20 81       	ld	r18, Z
    2c28:	20 68       	ori	r18, 0x80	; 128
    2c2a:	fc 01       	movw	r30, r24
    2c2c:	20 83       	st	Z, r18
    2c2e:	00 00       	nop
    2c30:	0f 90       	pop	r0
    2c32:	0f 90       	pop	r0
    2c34:	df 91       	pop	r29
    2c36:	cf 91       	pop	r28
    2c38:	08 95       	ret

00002c3a <MCAL_voidClearFlags>:
    2c3a:	cf 93       	push	r28
    2c3c:	df 93       	push	r29
    2c3e:	cd b7       	in	r28, 0x3d	; 61
    2c40:	de b7       	in	r29, 0x3e	; 62
    2c42:	04 c0       	rjmp	.+8      	; 0x2c4c <MCAL_voidClearFlags+0x12>
    2c44:	8c e2       	ldi	r24, 0x2C	; 44
    2c46:	90 e0       	ldi	r25, 0x00	; 0
    2c48:	fc 01       	movw	r30, r24
    2c4a:	80 81       	ld	r24, Z
    2c4c:	8b e2       	ldi	r24, 0x2B	; 43
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	fc 01       	movw	r30, r24
    2c52:	80 81       	ld	r24, Z
    2c54:	88 1f       	adc	r24, r24
    2c56:	88 27       	eor	r24, r24
    2c58:	88 1f       	adc	r24, r24
    2c5a:	88 2f       	mov	r24, r24
    2c5c:	90 e0       	ldi	r25, 0x00	; 0
    2c5e:	81 70       	andi	r24, 0x01	; 1
    2c60:	99 27       	eor	r25, r25
    2c62:	89 2b       	or	r24, r25
    2c64:	79 f7       	brne	.-34     	; 0x2c44 <MCAL_voidClearFlags+0xa>
    2c66:	00 00       	nop
    2c68:	df 91       	pop	r29
    2c6a:	cf 91       	pop	r28
    2c6c:	08 95       	ret

00002c6e <__vector_11>:
    2c6e:	1f 92       	push	r1
    2c70:	0f 92       	push	r0
    2c72:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2c76:	0f 92       	push	r0
    2c78:	11 24       	eor	r1, r1
    2c7a:	2f 93       	push	r18
    2c7c:	3f 93       	push	r19
    2c7e:	4f 93       	push	r20
    2c80:	5f 93       	push	r21
    2c82:	6f 93       	push	r22
    2c84:	7f 93       	push	r23
    2c86:	8f 93       	push	r24
    2c88:	9f 93       	push	r25
    2c8a:	af 93       	push	r26
    2c8c:	bf 93       	push	r27
    2c8e:	ef 93       	push	r30
    2c90:	ff 93       	push	r31
    2c92:	cf 93       	push	r28
    2c94:	df 93       	push	r29
    2c96:	1f 92       	push	r1
    2c98:	cd b7       	in	r28, 0x3d	; 61
    2c9a:	de b7       	in	r29, 0x3e	; 62
    2c9c:	8c e2       	ldi	r24, 0x2C	; 44
    2c9e:	90 e0       	ldi	r25, 0x00	; 0
    2ca0:	fc 01       	movw	r30, r24
    2ca2:	80 81       	ld	r24, Z
    2ca4:	89 83       	std	Y+1, r24	; 0x01
    2ca6:	20 91 d2 00 	lds	r18, 0x00D2	; 0x8000d2 <Global_RxComplate>
    2caa:	30 91 d3 00 	lds	r19, 0x00D3	; 0x8000d3 <Global_RxComplate+0x1>
    2cae:	89 81       	ldd	r24, Y+1	; 0x01
    2cb0:	f9 01       	movw	r30, r18
    2cb2:	09 95       	icall
    2cb4:	00 00       	nop
    2cb6:	0f 90       	pop	r0
    2cb8:	df 91       	pop	r29
    2cba:	cf 91       	pop	r28
    2cbc:	ff 91       	pop	r31
    2cbe:	ef 91       	pop	r30
    2cc0:	bf 91       	pop	r27
    2cc2:	af 91       	pop	r26
    2cc4:	9f 91       	pop	r25
    2cc6:	8f 91       	pop	r24
    2cc8:	7f 91       	pop	r23
    2cca:	6f 91       	pop	r22
    2ccc:	5f 91       	pop	r21
    2cce:	4f 91       	pop	r20
    2cd0:	3f 91       	pop	r19
    2cd2:	2f 91       	pop	r18
    2cd4:	0f 90       	pop	r0
    2cd6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2cda:	0f 90       	pop	r0
    2cdc:	1f 90       	pop	r1
    2cde:	18 95       	reti

00002ce0 <__vector_13>:
    2ce0:	1f 92       	push	r1
    2ce2:	0f 92       	push	r0
    2ce4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2ce8:	0f 92       	push	r0
    2cea:	11 24       	eor	r1, r1
    2cec:	2f 93       	push	r18
    2cee:	3f 93       	push	r19
    2cf0:	4f 93       	push	r20
    2cf2:	5f 93       	push	r21
    2cf4:	6f 93       	push	r22
    2cf6:	7f 93       	push	r23
    2cf8:	8f 93       	push	r24
    2cfa:	9f 93       	push	r25
    2cfc:	af 93       	push	r26
    2cfe:	bf 93       	push	r27
    2d00:	ef 93       	push	r30
    2d02:	ff 93       	push	r31
    2d04:	cf 93       	push	r28
    2d06:	df 93       	push	r29
    2d08:	cd b7       	in	r28, 0x3d	; 61
    2d0a:	de b7       	in	r29, 0x3e	; 62
    2d0c:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <Global_TxComplate>
    2d10:	90 91 d1 00 	lds	r25, 0x00D1	; 0x8000d1 <Global_TxComplate+0x1>
    2d14:	fc 01       	movw	r30, r24
    2d16:	09 95       	icall
    2d18:	00 00       	nop
    2d1a:	df 91       	pop	r29
    2d1c:	cf 91       	pop	r28
    2d1e:	ff 91       	pop	r31
    2d20:	ef 91       	pop	r30
    2d22:	bf 91       	pop	r27
    2d24:	af 91       	pop	r26
    2d26:	9f 91       	pop	r25
    2d28:	8f 91       	pop	r24
    2d2a:	7f 91       	pop	r23
    2d2c:	6f 91       	pop	r22
    2d2e:	5f 91       	pop	r21
    2d30:	4f 91       	pop	r20
    2d32:	3f 91       	pop	r19
    2d34:	2f 91       	pop	r18
    2d36:	0f 90       	pop	r0
    2d38:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2d3c:	0f 90       	pop	r0
    2d3e:	1f 90       	pop	r1
    2d40:	18 95       	reti

00002d42 <__cmpsf2>:
    2d42:	0e 94 d5 16 	call	0x2daa	; 0x2daa <__fp_cmp>
    2d46:	08 f4       	brcc	.+2      	; 0x2d4a <__cmpsf2+0x8>
    2d48:	81 e0       	ldi	r24, 0x01	; 1
    2d4a:	08 95       	ret

00002d4c <__fixunssfsi>:
    2d4c:	0e 94 01 17 	call	0x2e02	; 0x2e02 <__fp_splitA>
    2d50:	88 f0       	brcs	.+34     	; 0x2d74 <__fixunssfsi+0x28>
    2d52:	9f 57       	subi	r25, 0x7F	; 127
    2d54:	98 f0       	brcs	.+38     	; 0x2d7c <__fixunssfsi+0x30>
    2d56:	b9 2f       	mov	r27, r25
    2d58:	99 27       	eor	r25, r25
    2d5a:	b7 51       	subi	r27, 0x17	; 23
    2d5c:	b0 f0       	brcs	.+44     	; 0x2d8a <__fixunssfsi+0x3e>
    2d5e:	e1 f0       	breq	.+56     	; 0x2d98 <__fixunssfsi+0x4c>
    2d60:	66 0f       	add	r22, r22
    2d62:	77 1f       	adc	r23, r23
    2d64:	88 1f       	adc	r24, r24
    2d66:	99 1f       	adc	r25, r25
    2d68:	1a f0       	brmi	.+6      	; 0x2d70 <__fixunssfsi+0x24>
    2d6a:	ba 95       	dec	r27
    2d6c:	c9 f7       	brne	.-14     	; 0x2d60 <__fixunssfsi+0x14>
    2d6e:	14 c0       	rjmp	.+40     	; 0x2d98 <__fixunssfsi+0x4c>
    2d70:	b1 30       	cpi	r27, 0x01	; 1
    2d72:	91 f0       	breq	.+36     	; 0x2d98 <__fixunssfsi+0x4c>
    2d74:	0e 94 1b 17 	call	0x2e36	; 0x2e36 <__fp_zero>
    2d78:	b1 e0       	ldi	r27, 0x01	; 1
    2d7a:	08 95       	ret
    2d7c:	0c 94 1b 17 	jmp	0x2e36	; 0x2e36 <__fp_zero>
    2d80:	67 2f       	mov	r22, r23
    2d82:	78 2f       	mov	r23, r24
    2d84:	88 27       	eor	r24, r24
    2d86:	b8 5f       	subi	r27, 0xF8	; 248
    2d88:	39 f0       	breq	.+14     	; 0x2d98 <__fixunssfsi+0x4c>
    2d8a:	b9 3f       	cpi	r27, 0xF9	; 249
    2d8c:	cc f3       	brlt	.-14     	; 0x2d80 <__fixunssfsi+0x34>
    2d8e:	86 95       	lsr	r24
    2d90:	77 95       	ror	r23
    2d92:	67 95       	ror	r22
    2d94:	b3 95       	inc	r27
    2d96:	d9 f7       	brne	.-10     	; 0x2d8e <__fixunssfsi+0x42>
    2d98:	3e f4       	brtc	.+14     	; 0x2da8 <__fixunssfsi+0x5c>
    2d9a:	90 95       	com	r25
    2d9c:	80 95       	com	r24
    2d9e:	70 95       	com	r23
    2da0:	61 95       	neg	r22
    2da2:	7f 4f       	sbci	r23, 0xFF	; 255
    2da4:	8f 4f       	sbci	r24, 0xFF	; 255
    2da6:	9f 4f       	sbci	r25, 0xFF	; 255
    2da8:	08 95       	ret

00002daa <__fp_cmp>:
    2daa:	99 0f       	add	r25, r25
    2dac:	00 08       	sbc	r0, r0
    2dae:	55 0f       	add	r21, r21
    2db0:	aa 0b       	sbc	r26, r26
    2db2:	e0 e8       	ldi	r30, 0x80	; 128
    2db4:	fe ef       	ldi	r31, 0xFE	; 254
    2db6:	16 16       	cp	r1, r22
    2db8:	17 06       	cpc	r1, r23
    2dba:	e8 07       	cpc	r30, r24
    2dbc:	f9 07       	cpc	r31, r25
    2dbe:	c0 f0       	brcs	.+48     	; 0x2df0 <__fp_cmp+0x46>
    2dc0:	12 16       	cp	r1, r18
    2dc2:	13 06       	cpc	r1, r19
    2dc4:	e4 07       	cpc	r30, r20
    2dc6:	f5 07       	cpc	r31, r21
    2dc8:	98 f0       	brcs	.+38     	; 0x2df0 <__fp_cmp+0x46>
    2dca:	62 1b       	sub	r22, r18
    2dcc:	73 0b       	sbc	r23, r19
    2dce:	84 0b       	sbc	r24, r20
    2dd0:	95 0b       	sbc	r25, r21
    2dd2:	39 f4       	brne	.+14     	; 0x2de2 <__fp_cmp+0x38>
    2dd4:	0a 26       	eor	r0, r26
    2dd6:	61 f0       	breq	.+24     	; 0x2df0 <__fp_cmp+0x46>
    2dd8:	23 2b       	or	r18, r19
    2dda:	24 2b       	or	r18, r20
    2ddc:	25 2b       	or	r18, r21
    2dde:	21 f4       	brne	.+8      	; 0x2de8 <__fp_cmp+0x3e>
    2de0:	08 95       	ret
    2de2:	0a 26       	eor	r0, r26
    2de4:	09 f4       	brne	.+2      	; 0x2de8 <__fp_cmp+0x3e>
    2de6:	a1 40       	sbci	r26, 0x01	; 1
    2de8:	a6 95       	lsr	r26
    2dea:	8f ef       	ldi	r24, 0xFF	; 255
    2dec:	81 1d       	adc	r24, r1
    2dee:	81 1d       	adc	r24, r1
    2df0:	08 95       	ret

00002df2 <__fp_split3>:
    2df2:	57 fd       	sbrc	r21, 7
    2df4:	90 58       	subi	r25, 0x80	; 128
    2df6:	44 0f       	add	r20, r20
    2df8:	55 1f       	adc	r21, r21
    2dfa:	59 f0       	breq	.+22     	; 0x2e12 <__fp_splitA+0x10>
    2dfc:	5f 3f       	cpi	r21, 0xFF	; 255
    2dfe:	71 f0       	breq	.+28     	; 0x2e1c <__fp_splitA+0x1a>
    2e00:	47 95       	ror	r20

00002e02 <__fp_splitA>:
    2e02:	88 0f       	add	r24, r24
    2e04:	97 fb       	bst	r25, 7
    2e06:	99 1f       	adc	r25, r25
    2e08:	61 f0       	breq	.+24     	; 0x2e22 <__fp_splitA+0x20>
    2e0a:	9f 3f       	cpi	r25, 0xFF	; 255
    2e0c:	79 f0       	breq	.+30     	; 0x2e2c <__fp_splitA+0x2a>
    2e0e:	87 95       	ror	r24
    2e10:	08 95       	ret
    2e12:	12 16       	cp	r1, r18
    2e14:	13 06       	cpc	r1, r19
    2e16:	14 06       	cpc	r1, r20
    2e18:	55 1f       	adc	r21, r21
    2e1a:	f2 cf       	rjmp	.-28     	; 0x2e00 <__fp_split3+0xe>
    2e1c:	46 95       	lsr	r20
    2e1e:	f1 df       	rcall	.-30     	; 0x2e02 <__fp_splitA>
    2e20:	08 c0       	rjmp	.+16     	; 0x2e32 <__fp_splitA+0x30>
    2e22:	16 16       	cp	r1, r22
    2e24:	17 06       	cpc	r1, r23
    2e26:	18 06       	cpc	r1, r24
    2e28:	99 1f       	adc	r25, r25
    2e2a:	f1 cf       	rjmp	.-30     	; 0x2e0e <__fp_splitA+0xc>
    2e2c:	86 95       	lsr	r24
    2e2e:	71 05       	cpc	r23, r1
    2e30:	61 05       	cpc	r22, r1
    2e32:	08 94       	sec
    2e34:	08 95       	ret

00002e36 <__fp_zero>:
    2e36:	e8 94       	clt

00002e38 <__fp_szero>:
    2e38:	bb 27       	eor	r27, r27
    2e3a:	66 27       	eor	r22, r22
    2e3c:	77 27       	eor	r23, r23
    2e3e:	cb 01       	movw	r24, r22
    2e40:	97 f9       	bld	r25, 7
    2e42:	08 95       	ret

00002e44 <__gesf2>:
    2e44:	0e 94 d5 16 	call	0x2daa	; 0x2daa <__fp_cmp>
    2e48:	08 f4       	brcc	.+2      	; 0x2e4c <__gesf2+0x8>
    2e4a:	8f ef       	ldi	r24, 0xFF	; 255
    2e4c:	08 95       	ret

00002e4e <__mulsf3>:
    2e4e:	0e 94 3a 17 	call	0x2e74	; 0x2e74 <__mulsf3x>
    2e52:	0c 94 ab 17 	jmp	0x2f56	; 0x2f56 <__fp_round>
    2e56:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__fp_pscA>
    2e5a:	38 f0       	brcs	.+14     	; 0x2e6a <__mulsf3+0x1c>
    2e5c:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__fp_pscB>
    2e60:	20 f0       	brcs	.+8      	; 0x2e6a <__mulsf3+0x1c>
    2e62:	95 23       	and	r25, r21
    2e64:	11 f0       	breq	.+4      	; 0x2e6a <__mulsf3+0x1c>
    2e66:	0c 94 94 17 	jmp	0x2f28	; 0x2f28 <__fp_inf>
    2e6a:	0c 94 9a 17 	jmp	0x2f34	; 0x2f34 <__fp_nan>
    2e6e:	11 24       	eor	r1, r1
    2e70:	0c 94 1c 17 	jmp	0x2e38	; 0x2e38 <__fp_szero>

00002e74 <__mulsf3x>:
    2e74:	0e 94 f9 16 	call	0x2df2	; 0x2df2 <__fp_split3>
    2e78:	70 f3       	brcs	.-36     	; 0x2e56 <__mulsf3+0x8>

00002e7a <__mulsf3_pse>:
    2e7a:	95 9f       	mul	r25, r21
    2e7c:	c1 f3       	breq	.-16     	; 0x2e6e <__mulsf3+0x20>
    2e7e:	95 0f       	add	r25, r21
    2e80:	50 e0       	ldi	r21, 0x00	; 0
    2e82:	55 1f       	adc	r21, r21
    2e84:	62 9f       	mul	r22, r18
    2e86:	f0 01       	movw	r30, r0
    2e88:	72 9f       	mul	r23, r18
    2e8a:	bb 27       	eor	r27, r27
    2e8c:	f0 0d       	add	r31, r0
    2e8e:	b1 1d       	adc	r27, r1
    2e90:	63 9f       	mul	r22, r19
    2e92:	aa 27       	eor	r26, r26
    2e94:	f0 0d       	add	r31, r0
    2e96:	b1 1d       	adc	r27, r1
    2e98:	aa 1f       	adc	r26, r26
    2e9a:	64 9f       	mul	r22, r20
    2e9c:	66 27       	eor	r22, r22
    2e9e:	b0 0d       	add	r27, r0
    2ea0:	a1 1d       	adc	r26, r1
    2ea2:	66 1f       	adc	r22, r22
    2ea4:	82 9f       	mul	r24, r18
    2ea6:	22 27       	eor	r18, r18
    2ea8:	b0 0d       	add	r27, r0
    2eaa:	a1 1d       	adc	r26, r1
    2eac:	62 1f       	adc	r22, r18
    2eae:	73 9f       	mul	r23, r19
    2eb0:	b0 0d       	add	r27, r0
    2eb2:	a1 1d       	adc	r26, r1
    2eb4:	62 1f       	adc	r22, r18
    2eb6:	83 9f       	mul	r24, r19
    2eb8:	a0 0d       	add	r26, r0
    2eba:	61 1d       	adc	r22, r1
    2ebc:	22 1f       	adc	r18, r18
    2ebe:	74 9f       	mul	r23, r20
    2ec0:	33 27       	eor	r19, r19
    2ec2:	a0 0d       	add	r26, r0
    2ec4:	61 1d       	adc	r22, r1
    2ec6:	23 1f       	adc	r18, r19
    2ec8:	84 9f       	mul	r24, r20
    2eca:	60 0d       	add	r22, r0
    2ecc:	21 1d       	adc	r18, r1
    2ece:	82 2f       	mov	r24, r18
    2ed0:	76 2f       	mov	r23, r22
    2ed2:	6a 2f       	mov	r22, r26
    2ed4:	11 24       	eor	r1, r1
    2ed6:	9f 57       	subi	r25, 0x7F	; 127
    2ed8:	50 40       	sbci	r21, 0x00	; 0
    2eda:	9a f0       	brmi	.+38     	; 0x2f02 <__mulsf3_pse+0x88>
    2edc:	f1 f0       	breq	.+60     	; 0x2f1a <__mulsf3_pse+0xa0>
    2ede:	88 23       	and	r24, r24
    2ee0:	4a f0       	brmi	.+18     	; 0x2ef4 <__mulsf3_pse+0x7a>
    2ee2:	ee 0f       	add	r30, r30
    2ee4:	ff 1f       	adc	r31, r31
    2ee6:	bb 1f       	adc	r27, r27
    2ee8:	66 1f       	adc	r22, r22
    2eea:	77 1f       	adc	r23, r23
    2eec:	88 1f       	adc	r24, r24
    2eee:	91 50       	subi	r25, 0x01	; 1
    2ef0:	50 40       	sbci	r21, 0x00	; 0
    2ef2:	a9 f7       	brne	.-22     	; 0x2ede <__mulsf3_pse+0x64>
    2ef4:	9e 3f       	cpi	r25, 0xFE	; 254
    2ef6:	51 05       	cpc	r21, r1
    2ef8:	80 f0       	brcs	.+32     	; 0x2f1a <__mulsf3_pse+0xa0>
    2efa:	0c 94 94 17 	jmp	0x2f28	; 0x2f28 <__fp_inf>
    2efe:	0c 94 1c 17 	jmp	0x2e38	; 0x2e38 <__fp_szero>
    2f02:	5f 3f       	cpi	r21, 0xFF	; 255
    2f04:	e4 f3       	brlt	.-8      	; 0x2efe <__mulsf3_pse+0x84>
    2f06:	98 3e       	cpi	r25, 0xE8	; 232
    2f08:	d4 f3       	brlt	.-12     	; 0x2efe <__mulsf3_pse+0x84>
    2f0a:	86 95       	lsr	r24
    2f0c:	77 95       	ror	r23
    2f0e:	67 95       	ror	r22
    2f10:	b7 95       	ror	r27
    2f12:	f7 95       	ror	r31
    2f14:	e7 95       	ror	r30
    2f16:	9f 5f       	subi	r25, 0xFF	; 255
    2f18:	c1 f7       	brne	.-16     	; 0x2f0a <__mulsf3_pse+0x90>
    2f1a:	fe 2b       	or	r31, r30
    2f1c:	88 0f       	add	r24, r24
    2f1e:	91 1d       	adc	r25, r1
    2f20:	96 95       	lsr	r25
    2f22:	87 95       	ror	r24
    2f24:	97 f9       	bld	r25, 7
    2f26:	08 95       	ret

00002f28 <__fp_inf>:
    2f28:	97 f9       	bld	r25, 7
    2f2a:	9f 67       	ori	r25, 0x7F	; 127
    2f2c:	80 e8       	ldi	r24, 0x80	; 128
    2f2e:	70 e0       	ldi	r23, 0x00	; 0
    2f30:	60 e0       	ldi	r22, 0x00	; 0
    2f32:	08 95       	ret

00002f34 <__fp_nan>:
    2f34:	9f ef       	ldi	r25, 0xFF	; 255
    2f36:	80 ec       	ldi	r24, 0xC0	; 192
    2f38:	08 95       	ret

00002f3a <__fp_pscA>:
    2f3a:	00 24       	eor	r0, r0
    2f3c:	0a 94       	dec	r0
    2f3e:	16 16       	cp	r1, r22
    2f40:	17 06       	cpc	r1, r23
    2f42:	18 06       	cpc	r1, r24
    2f44:	09 06       	cpc	r0, r25
    2f46:	08 95       	ret

00002f48 <__fp_pscB>:
    2f48:	00 24       	eor	r0, r0
    2f4a:	0a 94       	dec	r0
    2f4c:	12 16       	cp	r1, r18
    2f4e:	13 06       	cpc	r1, r19
    2f50:	14 06       	cpc	r1, r20
    2f52:	05 06       	cpc	r0, r21
    2f54:	08 95       	ret

00002f56 <__fp_round>:
    2f56:	09 2e       	mov	r0, r25
    2f58:	03 94       	inc	r0
    2f5a:	00 0c       	add	r0, r0
    2f5c:	11 f4       	brne	.+4      	; 0x2f62 <__fp_round+0xc>
    2f5e:	88 23       	and	r24, r24
    2f60:	52 f0       	brmi	.+20     	; 0x2f76 <__fp_round+0x20>
    2f62:	bb 0f       	add	r27, r27
    2f64:	40 f4       	brcc	.+16     	; 0x2f76 <__fp_round+0x20>
    2f66:	bf 2b       	or	r27, r31
    2f68:	11 f4       	brne	.+4      	; 0x2f6e <__fp_round+0x18>
    2f6a:	60 ff       	sbrs	r22, 0
    2f6c:	04 c0       	rjmp	.+8      	; 0x2f76 <__fp_round+0x20>
    2f6e:	6f 5f       	subi	r22, 0xFF	; 255
    2f70:	7f 4f       	sbci	r23, 0xFF	; 255
    2f72:	8f 4f       	sbci	r24, 0xFF	; 255
    2f74:	9f 4f       	sbci	r25, 0xFF	; 255
    2f76:	08 95       	ret

00002f78 <__udivmodsi4>:
    2f78:	a1 e2       	ldi	r26, 0x21	; 33
    2f7a:	1a 2e       	mov	r1, r26
    2f7c:	aa 1b       	sub	r26, r26
    2f7e:	bb 1b       	sub	r27, r27
    2f80:	fd 01       	movw	r30, r26
    2f82:	0d c0       	rjmp	.+26     	; 0x2f9e <__udivmodsi4_ep>

00002f84 <__udivmodsi4_loop>:
    2f84:	aa 1f       	adc	r26, r26
    2f86:	bb 1f       	adc	r27, r27
    2f88:	ee 1f       	adc	r30, r30
    2f8a:	ff 1f       	adc	r31, r31
    2f8c:	a2 17       	cp	r26, r18
    2f8e:	b3 07       	cpc	r27, r19
    2f90:	e4 07       	cpc	r30, r20
    2f92:	f5 07       	cpc	r31, r21
    2f94:	20 f0       	brcs	.+8      	; 0x2f9e <__udivmodsi4_ep>
    2f96:	a2 1b       	sub	r26, r18
    2f98:	b3 0b       	sbc	r27, r19
    2f9a:	e4 0b       	sbc	r30, r20
    2f9c:	f5 0b       	sbc	r31, r21

00002f9e <__udivmodsi4_ep>:
    2f9e:	66 1f       	adc	r22, r22
    2fa0:	77 1f       	adc	r23, r23
    2fa2:	88 1f       	adc	r24, r24
    2fa4:	99 1f       	adc	r25, r25
    2fa6:	1a 94       	dec	r1
    2fa8:	69 f7       	brne	.-38     	; 0x2f84 <__udivmodsi4_loop>
    2faa:	60 95       	com	r22
    2fac:	70 95       	com	r23
    2fae:	80 95       	com	r24
    2fb0:	90 95       	com	r25
    2fb2:	9b 01       	movw	r18, r22
    2fb4:	ac 01       	movw	r20, r24
    2fb6:	bd 01       	movw	r22, r26
    2fb8:	cf 01       	movw	r24, r30
    2fba:	08 95       	ret

00002fbc <__tablejump2__>:
    2fbc:	ee 0f       	add	r30, r30
    2fbe:	ff 1f       	adc	r31, r31
    2fc0:	05 90       	lpm	r0, Z+
    2fc2:	f4 91       	lpm	r31, Z
    2fc4:	e0 2d       	mov	r30, r0
    2fc6:	09 94       	ijmp

00002fc8 <_exit>:
    2fc8:	f8 94       	cli

00002fca <__stop_program>:
    2fca:	ff cf       	rjmp	.-2      	; 0x2fca <__stop_program>
