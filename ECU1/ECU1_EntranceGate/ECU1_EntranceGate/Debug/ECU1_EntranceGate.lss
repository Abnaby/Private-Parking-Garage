
ECU1_EntranceGate.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000030b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b4  00800060  000030b8  0000314c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002f  00800114  00800114  00003200  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003200  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003230  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000398  00000000  00000000  0000326c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c18  00000000  00000000  00003604  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  0000621c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000027f8  00000000  00000000  0000731d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000cd8  00000000  00000000  00009b18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001901  00000000  00000000  0000a7f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a36  00000000  00000000  0000c0f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000330  00000000  00000000  0000db27  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
       4:	0c 94 96 0d 	jmp	0x1b2c	; 0x1b2c <__vector_1>
       8:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__vector_2>
       c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      28:	0c 94 f6 14 	jmp	0x29ec	; 0x29ec <__vector_10>
      2c:	0c 94 ad 16 	jmp	0x2d5a	; 0x2d5a <__vector_11>
      30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      34:	0c 94 e6 16 	jmp	0x2dcc	; 0x2dcc <__vector_13>
      38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      40:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      48:	0c 94 f8 0d 	jmp	0x1bf0	; 0x1bf0 <__vector_18>
      4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
      54:	84 13       	cpse	r24, r20
      56:	89 13       	cpse	r24, r25
      58:	90 13       	cpse	r25, r16
      5a:	97 13       	cpse	r25, r23
      5c:	9e 13       	cpse	r25, r30
      5e:	a5 13       	cpse	r26, r21
      60:	ac 13       	cpse	r26, r28
      62:	b3 13       	cpse	r27, r19

00000064 <__ctors_end>:
      64:	11 24       	eor	r1, r1
      66:	1f be       	out	0x3f, r1	; 63
      68:	cf e5       	ldi	r28, 0x5F	; 95
      6a:	d4 e0       	ldi	r29, 0x04	; 4
      6c:	de bf       	out	0x3e, r29	; 62
      6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e8 eb       	ldi	r30, 0xB8	; 184
      78:	f0 e3       	ldi	r31, 0x30	; 48
      7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0
      80:	a4 31       	cpi	r26, 0x14	; 20
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>

00000086 <__do_clear_bss>:
      86:	21 e0       	ldi	r18, 0x01	; 1
      88:	a4 e1       	ldi	r26, 0x14	; 20
      8a:	b1 e0       	ldi	r27, 0x01	; 1
      8c:	01 c0       	rjmp	.+2      	; 0x90 <.do_clear_bss_start>

0000008e <.do_clear_bss_loop>:
      8e:	1d 92       	st	X+, r1

00000090 <.do_clear_bss_start>:
      90:	a3 34       	cpi	r26, 0x43	; 67
      92:	b2 07       	cpc	r27, r18
      94:	e1 f7       	brne	.-8      	; 0x8e <.do_clear_bss_loop>
      96:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <main>
      9a:	0c 94 5a 18 	jmp	0x30b4	; 0x30b4 <_exit>

0000009e <__bad_interrupt>:
      9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <Buzzer>:
 * @brief This function is used to make  beep sound 
 * 
 * @param copyNumberOfRepeatations number of repeated beep sound.
 */
static void Buzzer(u8 copyNumberOfRepeatations)
{
      a2:	cf 93       	push	r28
      a4:	df 93       	push	r29
      a6:	cd b7       	in	r28, 0x3d	; 61
      a8:	de b7       	in	r29, 0x3e	; 62
      aa:	6e 97       	sbiw	r28, 0x1e	; 30
      ac:	0f b6       	in	r0, 0x3f	; 63
      ae:	f8 94       	cli
      b0:	de bf       	out	0x3e, r29	; 62
      b2:	0f be       	out	0x3f, r0	; 63
      b4:	cd bf       	out	0x3d, r28	; 61
      b6:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 LOC_u8Counter = 0 ;
      b8:	19 82       	std	Y+1, r1	; 0x01
	for(LOC_u8Counter ; LOC_u8Counter<copyNumberOfRepeatations ; LOC_u8Counter++)
      ba:	f1 c0       	rjmp	.+482    	; 0x29e <__EEPROM_REGION_LENGTH__+0x9e>
	{
		GPIO_voidSetPinValue(PORTC,PIN6,HIGH);
      bc:	41 e0       	ldi	r20, 0x01	; 1
      be:	66 e0       	ldi	r22, 0x06	; 6
      c0:	82 e0       	ldi	r24, 0x02	; 2
      c2:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
      c6:	80 e0       	ldi	r24, 0x00	; 0
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	a8 ec       	ldi	r26, 0xC8	; 200
      cc:	b2 e4       	ldi	r27, 0x42	; 66
      ce:	8a 83       	std	Y+2, r24	; 0x02
      d0:	9b 83       	std	Y+3, r25	; 0x03
      d2:	ac 83       	std	Y+4, r26	; 0x04
      d4:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
      d6:	20 e0       	ldi	r18, 0x00	; 0
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	4a e7       	ldi	r20, 0x7A	; 122
      dc:	55 e4       	ldi	r21, 0x45	; 69
      de:	6a 81       	ldd	r22, Y+2	; 0x02
      e0:	7b 81       	ldd	r23, Y+3	; 0x03
      e2:	8c 81       	ldd	r24, Y+4	; 0x04
      e4:	9d 81       	ldd	r25, Y+5	; 0x05
      e6:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
      ea:	dc 01       	movw	r26, r24
      ec:	cb 01       	movw	r24, r22
      ee:	8c 8b       	std	Y+20, r24	; 0x14
      f0:	9d 8b       	std	Y+21, r25	; 0x15
      f2:	ae 8b       	std	Y+22, r26	; 0x16
      f4:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
      f6:	20 e0       	ldi	r18, 0x00	; 0
      f8:	30 e0       	ldi	r19, 0x00	; 0
      fa:	40 e8       	ldi	r20, 0x80	; 128
      fc:	5f e3       	ldi	r21, 0x3F	; 63
      fe:	6c 89       	ldd	r22, Y+20	; 0x14
     100:	7d 89       	ldd	r23, Y+21	; 0x15
     102:	8e 89       	ldd	r24, Y+22	; 0x16
     104:	9f 89       	ldd	r25, Y+23	; 0x17
     106:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     10a:	88 23       	and	r24, r24
     10c:	2c f4       	brge	.+10     	; 0x118 <Buzzer+0x76>
		__ticks = 1;
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	99 8f       	std	Y+25, r25	; 0x19
     114:	88 8f       	std	Y+24, r24	; 0x18
     116:	3f c0       	rjmp	.+126    	; 0x196 <Buzzer+0xf4>
	else if (__tmp > 65535)
     118:	20 e0       	ldi	r18, 0x00	; 0
     11a:	3f ef       	ldi	r19, 0xFF	; 255
     11c:	4f e7       	ldi	r20, 0x7F	; 127
     11e:	57 e4       	ldi	r21, 0x47	; 71
     120:	6c 89       	ldd	r22, Y+20	; 0x14
     122:	7d 89       	ldd	r23, Y+21	; 0x15
     124:	8e 89       	ldd	r24, Y+22	; 0x16
     126:	9f 89       	ldd	r25, Y+23	; 0x17
     128:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     12c:	18 16       	cp	r1, r24
     12e:	4c f5       	brge	.+82     	; 0x182 <Buzzer+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     130:	20 e0       	ldi	r18, 0x00	; 0
     132:	30 e0       	ldi	r19, 0x00	; 0
     134:	40 e2       	ldi	r20, 0x20	; 32
     136:	51 e4       	ldi	r21, 0x41	; 65
     138:	6a 81       	ldd	r22, Y+2	; 0x02
     13a:	7b 81       	ldd	r23, Y+3	; 0x03
     13c:	8c 81       	ldd	r24, Y+4	; 0x04
     13e:	9d 81       	ldd	r25, Y+5	; 0x05
     140:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     144:	dc 01       	movw	r26, r24
     146:	cb 01       	movw	r24, r22
     148:	bc 01       	movw	r22, r24
     14a:	cd 01       	movw	r24, r26
     14c:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     150:	dc 01       	movw	r26, r24
     152:	cb 01       	movw	r24, r22
     154:	99 8f       	std	Y+25, r25	; 0x19
     156:	88 8f       	std	Y+24, r24	; 0x18
     158:	0f c0       	rjmp	.+30     	; 0x178 <Buzzer+0xd6>
     15a:	80 e9       	ldi	r24, 0x90	; 144
     15c:	91 e0       	ldi	r25, 0x01	; 1
     15e:	9b 8f       	std	Y+27, r25	; 0x1b
     160:	8a 8f       	std	Y+26, r24	; 0x1a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     162:	8a 8d       	ldd	r24, Y+26	; 0x1a
     164:	9b 8d       	ldd	r25, Y+27	; 0x1b
     166:	01 97       	sbiw	r24, 0x01	; 1
     168:	f1 f7       	brne	.-4      	; 0x166 <Buzzer+0xc4>
     16a:	9b 8f       	std	Y+27, r25	; 0x1b
     16c:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     16e:	88 8d       	ldd	r24, Y+24	; 0x18
     170:	99 8d       	ldd	r25, Y+25	; 0x19
     172:	01 97       	sbiw	r24, 0x01	; 1
     174:	99 8f       	std	Y+25, r25	; 0x19
     176:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     178:	88 8d       	ldd	r24, Y+24	; 0x18
     17a:	99 8d       	ldd	r25, Y+25	; 0x19
     17c:	89 2b       	or	r24, r25
     17e:	69 f7       	brne	.-38     	; 0x15a <Buzzer+0xb8>
     180:	14 c0       	rjmp	.+40     	; 0x1aa <Buzzer+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     182:	6c 89       	ldd	r22, Y+20	; 0x14
     184:	7d 89       	ldd	r23, Y+21	; 0x15
     186:	8e 89       	ldd	r24, Y+22	; 0x16
     188:	9f 89       	ldd	r25, Y+23	; 0x17
     18a:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     18e:	dc 01       	movw	r26, r24
     190:	cb 01       	movw	r24, r22
     192:	99 8f       	std	Y+25, r25	; 0x19
     194:	88 8f       	std	Y+24, r24	; 0x18
     196:	88 8d       	ldd	r24, Y+24	; 0x18
     198:	99 8d       	ldd	r25, Y+25	; 0x19
     19a:	9d 8f       	std	Y+29, r25	; 0x1d
     19c:	8c 8f       	std	Y+28, r24	; 0x1c
     19e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     1a0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <Buzzer+0x100>
     1a6:	9d 8f       	std	Y+29, r25	; 0x1d
     1a8:	8c 8f       	std	Y+28, r24	; 0x1c
		_delay_ms(100);
		GPIO_voidSetPinValue(PORTC,PIN6,LOW);
     1aa:	40 e0       	ldi	r20, 0x00	; 0
     1ac:	66 e0       	ldi	r22, 0x06	; 6
     1ae:	82 e0       	ldi	r24, 0x02	; 2
     1b0:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     1b4:	80 e0       	ldi	r24, 0x00	; 0
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	a8 ec       	ldi	r26, 0xC8	; 200
     1ba:	b2 e4       	ldi	r27, 0x42	; 66
     1bc:	8e 83       	std	Y+6, r24	; 0x06
     1be:	9f 83       	std	Y+7, r25	; 0x07
     1c0:	a8 87       	std	Y+8, r26	; 0x08
     1c2:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	4a e7       	ldi	r20, 0x7A	; 122
     1ca:	55 e4       	ldi	r21, 0x45	; 69
     1cc:	6e 81       	ldd	r22, Y+6	; 0x06
     1ce:	7f 81       	ldd	r23, Y+7	; 0x07
     1d0:	88 85       	ldd	r24, Y+8	; 0x08
     1d2:	99 85       	ldd	r25, Y+9	; 0x09
     1d4:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     1d8:	dc 01       	movw	r26, r24
     1da:	cb 01       	movw	r24, r22
     1dc:	8a 87       	std	Y+10, r24	; 0x0a
     1de:	9b 87       	std	Y+11, r25	; 0x0b
     1e0:	ac 87       	std	Y+12, r26	; 0x0c
     1e2:	bd 87       	std	Y+13, r27	; 0x0d
	if (__tmp < 1.0)
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	40 e8       	ldi	r20, 0x80	; 128
     1ea:	5f e3       	ldi	r21, 0x3F	; 63
     1ec:	6a 85       	ldd	r22, Y+10	; 0x0a
     1ee:	7b 85       	ldd	r23, Y+11	; 0x0b
     1f0:	8c 85       	ldd	r24, Y+12	; 0x0c
     1f2:	9d 85       	ldd	r25, Y+13	; 0x0d
     1f4:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     1f8:	88 23       	and	r24, r24
     1fa:	2c f4       	brge	.+10     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
		__ticks = 1;
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	9f 87       	std	Y+15, r25	; 0x0f
     202:	8e 87       	std	Y+14, r24	; 0x0e
     204:	3f c0       	rjmp	.+126    	; 0x284 <__EEPROM_REGION_LENGTH__+0x84>
	else if (__tmp > 65535)
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	3f ef       	ldi	r19, 0xFF	; 255
     20a:	4f e7       	ldi	r20, 0x7F	; 127
     20c:	57 e4       	ldi	r21, 0x47	; 71
     20e:	6a 85       	ldd	r22, Y+10	; 0x0a
     210:	7b 85       	ldd	r23, Y+11	; 0x0b
     212:	8c 85       	ldd	r24, Y+12	; 0x0c
     214:	9d 85       	ldd	r25, Y+13	; 0x0d
     216:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     21a:	18 16       	cp	r1, r24
     21c:	4c f5       	brge	.+82     	; 0x270 <__EEPROM_REGION_LENGTH__+0x70>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	40 e2       	ldi	r20, 0x20	; 32
     224:	51 e4       	ldi	r21, 0x41	; 65
     226:	6e 81       	ldd	r22, Y+6	; 0x06
     228:	7f 81       	ldd	r23, Y+7	; 0x07
     22a:	88 85       	ldd	r24, Y+8	; 0x08
     22c:	99 85       	ldd	r25, Y+9	; 0x09
     22e:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     232:	dc 01       	movw	r26, r24
     234:	cb 01       	movw	r24, r22
     236:	bc 01       	movw	r22, r24
     238:	cd 01       	movw	r24, r26
     23a:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     23e:	dc 01       	movw	r26, r24
     240:	cb 01       	movw	r24, r22
     242:	9f 87       	std	Y+15, r25	; 0x0f
     244:	8e 87       	std	Y+14, r24	; 0x0e
     246:	0f c0       	rjmp	.+30     	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
     248:	80 e9       	ldi	r24, 0x90	; 144
     24a:	91 e0       	ldi	r25, 0x01	; 1
     24c:	99 8b       	std	Y+17, r25	; 0x11
     24e:	88 8b       	std	Y+16, r24	; 0x10
     250:	88 89       	ldd	r24, Y+16	; 0x10
     252:	99 89       	ldd	r25, Y+17	; 0x11
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	f1 f7       	brne	.-4      	; 0x254 <__EEPROM_REGION_LENGTH__+0x54>
     258:	99 8b       	std	Y+17, r25	; 0x11
     25a:	88 8b       	std	Y+16, r24	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     25c:	8e 85       	ldd	r24, Y+14	; 0x0e
     25e:	9f 85       	ldd	r25, Y+15	; 0x0f
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	9f 87       	std	Y+15, r25	; 0x0f
     264:	8e 87       	std	Y+14, r24	; 0x0e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     266:	8e 85       	ldd	r24, Y+14	; 0x0e
     268:	9f 85       	ldd	r25, Y+15	; 0x0f
     26a:	89 2b       	or	r24, r25
     26c:	69 f7       	brne	.-38     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
     26e:	14 c0       	rjmp	.+40     	; 0x298 <__EEPROM_REGION_LENGTH__+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     270:	6a 85       	ldd	r22, Y+10	; 0x0a
     272:	7b 85       	ldd	r23, Y+11	; 0x0b
     274:	8c 85       	ldd	r24, Y+12	; 0x0c
     276:	9d 85       	ldd	r25, Y+13	; 0x0d
     278:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	9f 87       	std	Y+15, r25	; 0x0f
     282:	8e 87       	std	Y+14, r24	; 0x0e
     284:	8e 85       	ldd	r24, Y+14	; 0x0e
     286:	9f 85       	ldd	r25, Y+15	; 0x0f
     288:	9b 8b       	std	Y+19, r25	; 0x13
     28a:	8a 8b       	std	Y+18, r24	; 0x12
     28c:	8a 89       	ldd	r24, Y+18	; 0x12
     28e:	9b 89       	ldd	r25, Y+19	; 0x13
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <__EEPROM_REGION_LENGTH__+0x90>
     294:	9b 8b       	std	Y+19, r25	; 0x13
     296:	8a 8b       	std	Y+18, r24	; 0x12
 * @param copyNumberOfRepeatations number of repeated beep sound.
 */
static void Buzzer(u8 copyNumberOfRepeatations)
{
	u8 LOC_u8Counter = 0 ;
	for(LOC_u8Counter ; LOC_u8Counter<copyNumberOfRepeatations ; LOC_u8Counter++)
     298:	89 81       	ldd	r24, Y+1	; 0x01
     29a:	8f 5f       	subi	r24, 0xFF	; 255
     29c:	89 83       	std	Y+1, r24	; 0x01
     29e:	99 81       	ldd	r25, Y+1	; 0x01
     2a0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2a2:	98 17       	cp	r25, r24
     2a4:	08 f4       	brcc	.+2      	; 0x2a8 <__EEPROM_REGION_LENGTH__+0xa8>
     2a6:	0a cf       	rjmp	.-492    	; 0xbc <Buzzer+0x1a>
		GPIO_voidSetPinValue(PORTC,PIN6,HIGH);
		_delay_ms(100);
		GPIO_voidSetPinValue(PORTC,PIN6,LOW);
		_delay_ms(100);		
	}	
}
     2a8:	00 00       	nop
     2aa:	6e 96       	adiw	r28, 0x1e	; 30
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <LCD_voidMainScreen>:
/**
 * @brief This Function is used to display the main screen
 * 
 */
static void LCD_voidMainScreen()
{
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	cd b7       	in	r28, 0x3d	; 61
     2c2:	de b7       	in	r29, 0x3e	; 62
     2c4:	2e 97       	sbiw	r28, 0x0e	; 14
     2c6:	0f b6       	in	r0, 0x3f	; 63
     2c8:	f8 94       	cli
     2ca:	de bf       	out	0x3e, r29	; 62
     2cc:	0f be       	out	0x3f, r0	; 63
     2ce:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSetCursorType(&myLCD, CURS_OFF ) ;
     2d0:	6c e0       	ldi	r22, 0x0C	; 12
     2d2:	84 e1       	ldi	r24, 0x14	; 20
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	0e 94 b4 08 	call	0x1168	; 0x1168 <LCD_voidSetCursorType>
	LCD_voidClear(&myLCD);
     2da:	84 e1       	ldi	r24, 0x14	; 20
     2dc:	91 e0       	ldi	r25, 0x01	; 1
     2de:	0e 94 1d 09 	call	0x123a	; 0x123a <LCD_voidClear>
	LCD_voidSendString(&myLCD,addString("Entrance Gate"));
     2e2:	6f e7       	ldi	r22, 0x7F	; 127
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	84 e1       	ldi	r24, 0x14	; 20
     2e8:	91 e0       	ldi	r25, 0x01	; 1
     2ea:	0e 94 82 08 	call	0x1104	; 0x1104 <LCD_voidSendString>
	LCD_voidGotoXY(&myLCD,0,1);
     2ee:	41 e0       	ldi	r20, 0x01	; 1
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	84 e1       	ldi	r24, 0x14	; 20
     2f4:	91 e0       	ldi	r25, 0x01	; 1
     2f6:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <LCD_voidGotoXY>
	LCD_voidSendString(&myLCD,addString("Low Power Mode "));
     2fa:	6d e8       	ldi	r22, 0x8D	; 141
     2fc:	70 e0       	ldi	r23, 0x00	; 0
     2fe:	84 e1       	ldi	r24, 0x14	; 20
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	0e 94 82 08 	call	0x1104	; 0x1104 <LCD_voidSendString>
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	a6 e1       	ldi	r26, 0x16	; 22
     30c:	b3 e4       	ldi	r27, 0x43	; 67
     30e:	89 83       	std	Y+1, r24	; 0x01
     310:	9a 83       	std	Y+2, r25	; 0x02
     312:	ab 83       	std	Y+3, r26	; 0x03
     314:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     316:	20 e0       	ldi	r18, 0x00	; 0
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	4a e7       	ldi	r20, 0x7A	; 122
     31c:	55 e4       	ldi	r21, 0x45	; 69
     31e:	69 81       	ldd	r22, Y+1	; 0x01
     320:	7a 81       	ldd	r23, Y+2	; 0x02
     322:	8b 81       	ldd	r24, Y+3	; 0x03
     324:	9c 81       	ldd	r25, Y+4	; 0x04
     326:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     32a:	dc 01       	movw	r26, r24
     32c:	cb 01       	movw	r24, r22
     32e:	8d 83       	std	Y+5, r24	; 0x05
     330:	9e 83       	std	Y+6, r25	; 0x06
     332:	af 83       	std	Y+7, r26	; 0x07
     334:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     336:	20 e0       	ldi	r18, 0x00	; 0
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	40 e8       	ldi	r20, 0x80	; 128
     33c:	5f e3       	ldi	r21, 0x3F	; 63
     33e:	6d 81       	ldd	r22, Y+5	; 0x05
     340:	7e 81       	ldd	r23, Y+6	; 0x06
     342:	8f 81       	ldd	r24, Y+7	; 0x07
     344:	98 85       	ldd	r25, Y+8	; 0x08
     346:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     34a:	88 23       	and	r24, r24
     34c:	2c f4       	brge	.+10     	; 0x358 <LCD_voidMainScreen+0x9c>
		__ticks = 1;
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	9a 87       	std	Y+10, r25	; 0x0a
     354:	89 87       	std	Y+9, r24	; 0x09
     356:	3f c0       	rjmp	.+126    	; 0x3d6 <LCD_voidMainScreen+0x11a>
	else if (__tmp > 65535)
     358:	20 e0       	ldi	r18, 0x00	; 0
     35a:	3f ef       	ldi	r19, 0xFF	; 255
     35c:	4f e7       	ldi	r20, 0x7F	; 127
     35e:	57 e4       	ldi	r21, 0x47	; 71
     360:	6d 81       	ldd	r22, Y+5	; 0x05
     362:	7e 81       	ldd	r23, Y+6	; 0x06
     364:	8f 81       	ldd	r24, Y+7	; 0x07
     366:	98 85       	ldd	r25, Y+8	; 0x08
     368:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     36c:	18 16       	cp	r1, r24
     36e:	4c f5       	brge	.+82     	; 0x3c2 <LCD_voidMainScreen+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	40 e2       	ldi	r20, 0x20	; 32
     376:	51 e4       	ldi	r21, 0x41	; 65
     378:	69 81       	ldd	r22, Y+1	; 0x01
     37a:	7a 81       	ldd	r23, Y+2	; 0x02
     37c:	8b 81       	ldd	r24, Y+3	; 0x03
     37e:	9c 81       	ldd	r25, Y+4	; 0x04
     380:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     384:	dc 01       	movw	r26, r24
     386:	cb 01       	movw	r24, r22
     388:	bc 01       	movw	r22, r24
     38a:	cd 01       	movw	r24, r26
     38c:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     390:	dc 01       	movw	r26, r24
     392:	cb 01       	movw	r24, r22
     394:	9a 87       	std	Y+10, r25	; 0x0a
     396:	89 87       	std	Y+9, r24	; 0x09
     398:	0f c0       	rjmp	.+30     	; 0x3b8 <LCD_voidMainScreen+0xfc>
     39a:	80 e9       	ldi	r24, 0x90	; 144
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	9c 87       	std	Y+12, r25	; 0x0c
     3a0:	8b 87       	std	Y+11, r24	; 0x0b
     3a2:	8b 85       	ldd	r24, Y+11	; 0x0b
     3a4:	9c 85       	ldd	r25, Y+12	; 0x0c
     3a6:	01 97       	sbiw	r24, 0x01	; 1
     3a8:	f1 f7       	brne	.-4      	; 0x3a6 <LCD_voidMainScreen+0xea>
     3aa:	9c 87       	std	Y+12, r25	; 0x0c
     3ac:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3ae:	89 85       	ldd	r24, Y+9	; 0x09
     3b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b2:	01 97       	sbiw	r24, 0x01	; 1
     3b4:	9a 87       	std	Y+10, r25	; 0x0a
     3b6:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3b8:	89 85       	ldd	r24, Y+9	; 0x09
     3ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     3bc:	89 2b       	or	r24, r25
     3be:	69 f7       	brne	.-38     	; 0x39a <LCD_voidMainScreen+0xde>
     3c0:	14 c0       	rjmp	.+40     	; 0x3ea <LCD_voidMainScreen+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3c2:	6d 81       	ldd	r22, Y+5	; 0x05
     3c4:	7e 81       	ldd	r23, Y+6	; 0x06
     3c6:	8f 81       	ldd	r24, Y+7	; 0x07
     3c8:	98 85       	ldd	r25, Y+8	; 0x08
     3ca:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     3ce:	dc 01       	movw	r26, r24
     3d0:	cb 01       	movw	r24, r22
     3d2:	9a 87       	std	Y+10, r25	; 0x0a
     3d4:	89 87       	std	Y+9, r24	; 0x09
     3d6:	89 85       	ldd	r24, Y+9	; 0x09
     3d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     3da:	9e 87       	std	Y+14, r25	; 0x0e
     3dc:	8d 87       	std	Y+13, r24	; 0x0d
     3de:	8d 85       	ldd	r24, Y+13	; 0x0d
     3e0:	9e 85       	ldd	r25, Y+14	; 0x0e
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	f1 f7       	brne	.-4      	; 0x3e2 <LCD_voidMainScreen+0x126>
     3e6:	9e 87       	std	Y+14, r25	; 0x0e
     3e8:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(LCD_WAITING_TIME);
	LCD_voidSetDisplayState(&myLCD,DISP_OFF);
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	84 e1       	ldi	r24, 0x14	; 20
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	0e 94 c9 08 	call	0x1192	; 0x1192 <LCD_voidSetDisplayState>
}
     3f4:	00 00       	nop
     3f6:	2e 96       	adiw	r28, 0x0e	; 14
     3f8:	0f b6       	in	r0, 0x3f	; 63
     3fa:	f8 94       	cli
     3fc:	de bf       	out	0x3e, r29	; 62
     3fe:	0f be       	out	0x3f, r0	; 63
     400:	cd bf       	out	0x3d, r28	; 61
     402:	df 91       	pop	r29
     404:	cf 91       	pop	r28
     406:	08 95       	ret

00000408 <LCD_voidSetup>:
/**
 * @brief This function is used to initialize the LCD driver 
 * 
 */
static void LCD_voidSetup(void)
{
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
	myLCD.LCD_SIZE_Rows = 2 ;
     410:	82 e0       	ldi	r24, 0x02	; 2
     412:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	myLCD.LCD_SIZE_Cols = 16 ;
     416:	80 e1       	ldi	r24, 0x10	; 16
     418:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <__data_end+0x1>
	myLCD.LCD_PortPins = LCD_PortPin ;
     41c:	87 e6       	ldi	r24, 0x67	; 103
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x3>
     424:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end+0x2>
	LCD_voidInit(&myLCD);
     428:	84 e1       	ldi	r24, 0x14	; 20
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 4e 04 	call	0x89c	; 0x89c <LCD_voidInit>
	/*	Main Screen	*/
	LCD_voidMainScreen();
     430:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_voidMainScreen>
}
     434:	00 00       	nop
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	08 95       	ret

0000043c <System_voidStates>:
 * @param copy_u8Selection Select one of 0 or 1
 * 							0 --> For Valid ID
 * 							1 --> For Invalid ID
 */
static void System_voidStates(u8 copy_u8Selection)
{
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	cd b7       	in	r28, 0x3d	; 61
     442:	de b7       	in	r29, 0x3e	; 62
     444:	2f 97       	sbiw	r28, 0x0f	; 15
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	f8 94       	cli
     44a:	de bf       	out	0x3e, r29	; 62
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	cd bf       	out	0x3d, r28	; 61
     450:	8f 87       	std	Y+15, r24	; 0x0f
	LCD_voidSetCursorType(&myLCD, CURS_OFF ) ;
     452:	6c e0       	ldi	r22, 0x0C	; 12
     454:	84 e1       	ldi	r24, 0x14	; 20
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	0e 94 b4 08 	call	0x1168	; 0x1168 <LCD_voidSetCursorType>
	LCD_voidClear(&myLCD);
     45c:	84 e1       	ldi	r24, 0x14	; 20
     45e:	91 e0       	ldi	r25, 0x01	; 1
     460:	0e 94 1d 09 	call	0x123a	; 0x123a <LCD_voidClear>
	LCD_voidSendString(&myLCD,addString("Entrance Gate"));
     464:	6f e7       	ldi	r22, 0x7F	; 127
     466:	70 e0       	ldi	r23, 0x00	; 0
     468:	84 e1       	ldi	r24, 0x14	; 20
     46a:	91 e0       	ldi	r25, 0x01	; 1
     46c:	0e 94 82 08 	call	0x1104	; 0x1104 <LCD_voidSendString>
	LCD_voidGotoXY(&myLCD,0,1);
     470:	41 e0       	ldi	r20, 0x01	; 1
     472:	60 e0       	ldi	r22, 0x00	; 0
     474:	84 e1       	ldi	r24, 0x14	; 20
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <LCD_voidGotoXY>
	switch(copy_u8Selection)
     47c:	8f 85       	ldd	r24, Y+15	; 0x0f
     47e:	88 2f       	mov	r24, r24
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	00 97       	sbiw	r24, 0x00	; 0
     484:	21 f0       	breq	.+8      	; 0x48e <__stack+0x2f>
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	09 f4       	brne	.+2      	; 0x48c <__stack+0x2d>
     48a:	93 c0       	rjmp	.+294    	; 0x5b2 <__stack+0x153>
		GPIO_voidSetPinValue(GREEN_LED, LOW);
		GPIO_voidSetPinValue(RED_LED, LOW);
		LCD_voidSetDisplayState(&myLCD,DISP_OFF);
		MCAL_USART_SendString((u8*)"\r\n***** ENTER RFID CARD *****\r\n");
		break ; 
		default : break ; 
     48c:	b9 c0       	rjmp	.+370    	; 0x600 <__stack+0x1a1>
	LCD_voidSendString(&myLCD,addString("Entrance Gate"));
	LCD_voidGotoXY(&myLCD,0,1);
	switch(copy_u8Selection)
	{
		case 0 : 
		GPIO_voidSetPinValue(GREEN_LED, HIGH);
     48e:	41 e0       	ldi	r20, 0x01	; 1
     490:	67 e0       	ldi	r22, 0x07	; 7
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RED_LED, LOW);
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	62 e0       	ldi	r22, 0x02	; 2
     49c:	83 e0       	ldi	r24, 0x03	; 3
     49e:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		LCD_voidSendString(&myLCD,addString("Your ID is Valid "));	
     4a2:	6d e9       	ldi	r22, 0x9D	; 157
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	84 e1       	ldi	r24, 0x14	; 20
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	0e 94 82 08 	call	0x1104	; 0x1104 <LCD_voidSendString>
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	a8 e4       	ldi	r26, 0x48	; 72
     4b4:	b3 e4       	ldi	r27, 0x43	; 67
     4b6:	89 83       	std	Y+1, r24	; 0x01
     4b8:	9a 83       	std	Y+2, r25	; 0x02
     4ba:	ab 83       	std	Y+3, r26	; 0x03
     4bc:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	4a e7       	ldi	r20, 0x7A	; 122
     4c4:	55 e4       	ldi	r21, 0x45	; 69
     4c6:	69 81       	ldd	r22, Y+1	; 0x01
     4c8:	7a 81       	ldd	r23, Y+2	; 0x02
     4ca:	8b 81       	ldd	r24, Y+3	; 0x03
     4cc:	9c 81       	ldd	r25, Y+4	; 0x04
     4ce:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     4d2:	dc 01       	movw	r26, r24
     4d4:	cb 01       	movw	r24, r22
     4d6:	8d 83       	std	Y+5, r24	; 0x05
     4d8:	9e 83       	std	Y+6, r25	; 0x06
     4da:	af 83       	std	Y+7, r26	; 0x07
     4dc:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     4de:	20 e0       	ldi	r18, 0x00	; 0
     4e0:	30 e0       	ldi	r19, 0x00	; 0
     4e2:	40 e8       	ldi	r20, 0x80	; 128
     4e4:	5f e3       	ldi	r21, 0x3F	; 63
     4e6:	6d 81       	ldd	r22, Y+5	; 0x05
     4e8:	7e 81       	ldd	r23, Y+6	; 0x06
     4ea:	8f 81       	ldd	r24, Y+7	; 0x07
     4ec:	98 85       	ldd	r25, Y+8	; 0x08
     4ee:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     4f2:	88 23       	and	r24, r24
     4f4:	2c f4       	brge	.+10     	; 0x500 <__stack+0xa1>
		__ticks = 1;
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	9a 87       	std	Y+10, r25	; 0x0a
     4fc:	89 87       	std	Y+9, r24	; 0x09
     4fe:	3f c0       	rjmp	.+126    	; 0x57e <__stack+0x11f>
	else if (__tmp > 65535)
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	3f ef       	ldi	r19, 0xFF	; 255
     504:	4f e7       	ldi	r20, 0x7F	; 127
     506:	57 e4       	ldi	r21, 0x47	; 71
     508:	6d 81       	ldd	r22, Y+5	; 0x05
     50a:	7e 81       	ldd	r23, Y+6	; 0x06
     50c:	8f 81       	ldd	r24, Y+7	; 0x07
     50e:	98 85       	ldd	r25, Y+8	; 0x08
     510:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     514:	18 16       	cp	r1, r24
     516:	4c f5       	brge	.+82     	; 0x56a <__stack+0x10b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	40 e2       	ldi	r20, 0x20	; 32
     51e:	51 e4       	ldi	r21, 0x41	; 65
     520:	69 81       	ldd	r22, Y+1	; 0x01
     522:	7a 81       	ldd	r23, Y+2	; 0x02
     524:	8b 81       	ldd	r24, Y+3	; 0x03
     526:	9c 81       	ldd	r25, Y+4	; 0x04
     528:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     52c:	dc 01       	movw	r26, r24
     52e:	cb 01       	movw	r24, r22
     530:	bc 01       	movw	r22, r24
     532:	cd 01       	movw	r24, r26
     534:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     538:	dc 01       	movw	r26, r24
     53a:	cb 01       	movw	r24, r22
     53c:	9a 87       	std	Y+10, r25	; 0x0a
     53e:	89 87       	std	Y+9, r24	; 0x09
     540:	0f c0       	rjmp	.+30     	; 0x560 <__stack+0x101>
     542:	80 e9       	ldi	r24, 0x90	; 144
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	9c 87       	std	Y+12, r25	; 0x0c
     548:	8b 87       	std	Y+11, r24	; 0x0b
     54a:	8b 85       	ldd	r24, Y+11	; 0x0b
     54c:	9c 85       	ldd	r25, Y+12	; 0x0c
     54e:	01 97       	sbiw	r24, 0x01	; 1
     550:	f1 f7       	brne	.-4      	; 0x54e <__stack+0xef>
     552:	9c 87       	std	Y+12, r25	; 0x0c
     554:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     556:	89 85       	ldd	r24, Y+9	; 0x09
     558:	9a 85       	ldd	r25, Y+10	; 0x0a
     55a:	01 97       	sbiw	r24, 0x01	; 1
     55c:	9a 87       	std	Y+10, r25	; 0x0a
     55e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     560:	89 85       	ldd	r24, Y+9	; 0x09
     562:	9a 85       	ldd	r25, Y+10	; 0x0a
     564:	89 2b       	or	r24, r25
     566:	69 f7       	brne	.-38     	; 0x542 <__stack+0xe3>
     568:	14 c0       	rjmp	.+40     	; 0x592 <__stack+0x133>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     56a:	6d 81       	ldd	r22, Y+5	; 0x05
     56c:	7e 81       	ldd	r23, Y+6	; 0x06
     56e:	8f 81       	ldd	r24, Y+7	; 0x07
     570:	98 85       	ldd	r25, Y+8	; 0x08
     572:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     576:	dc 01       	movw	r26, r24
     578:	cb 01       	movw	r24, r22
     57a:	9a 87       	std	Y+10, r25	; 0x0a
     57c:	89 87       	std	Y+9, r24	; 0x09
     57e:	89 85       	ldd	r24, Y+9	; 0x09
     580:	9a 85       	ldd	r25, Y+10	; 0x0a
     582:	9e 87       	std	Y+14, r25	; 0x0e
     584:	8d 87       	std	Y+13, r24	; 0x0d
     586:	8d 85       	ldd	r24, Y+13	; 0x0d
     588:	9e 85       	ldd	r25, Y+14	; 0x0e
     58a:	01 97       	sbiw	r24, 0x01	; 1
     58c:	f1 f7       	brne	.-4      	; 0x58a <__stack+0x12b>
     58e:	9e 87       	std	Y+14, r25	; 0x0e
     590:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(200);
		GPIO_voidSetPinValue(GREEN_LED, LOW);
     592:	40 e0       	ldi	r20, 0x00	; 0
     594:	67 e0       	ldi	r22, 0x07	; 7
     596:	82 e0       	ldi	r24, 0x02	; 2
     598:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RED_LED, LOW);
     59c:	40 e0       	ldi	r20, 0x00	; 0
     59e:	62 e0       	ldi	r22, 0x02	; 2
     5a0:	83 e0       	ldi	r24, 0x03	; 3
     5a2:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		LCD_voidSetDisplayState(&myLCD,DISP_OFF);
     5a6:	60 e0       	ldi	r22, 0x00	; 0
     5a8:	84 e1       	ldi	r24, 0x14	; 20
     5aa:	91 e0       	ldi	r25, 0x01	; 1
     5ac:	0e 94 c9 08 	call	0x1192	; 0x1192 <LCD_voidSetDisplayState>
		break ; 
     5b0:	27 c0       	rjmp	.+78     	; 0x600 <__stack+0x1a1>
		case 1 : 
		GPIO_voidSetPinValue(GREEN_LED, LOW);
     5b2:	40 e0       	ldi	r20, 0x00	; 0
     5b4:	67 e0       	ldi	r22, 0x07	; 7
     5b6:	82 e0       	ldi	r24, 0x02	; 2
     5b8:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RED_LED, HIGH);
     5bc:	41 e0       	ldi	r20, 0x01	; 1
     5be:	62 e0       	ldi	r22, 0x02	; 2
     5c0:	83 e0       	ldi	r24, 0x03	; 3
     5c2:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		LCD_voidSendString(&myLCD,addString("Invalid ID"));
     5c6:	6f ea       	ldi	r22, 0xAF	; 175
     5c8:	70 e0       	ldi	r23, 0x00	; 0
     5ca:	84 e1       	ldi	r24, 0x14	; 20
     5cc:	91 e0       	ldi	r25, 0x01	; 1
     5ce:	0e 94 82 08 	call	0x1104	; 0x1104 <LCD_voidSendString>
		Buzzer(3);
     5d2:	83 e0       	ldi	r24, 0x03	; 3
     5d4:	0e 94 51 00 	call	0xa2	; 0xa2 <Buzzer>
		GPIO_voidSetPinValue(GREEN_LED, LOW);
     5d8:	40 e0       	ldi	r20, 0x00	; 0
     5da:	67 e0       	ldi	r22, 0x07	; 7
     5dc:	82 e0       	ldi	r24, 0x02	; 2
     5de:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RED_LED, LOW);
     5e2:	40 e0       	ldi	r20, 0x00	; 0
     5e4:	62 e0       	ldi	r22, 0x02	; 2
     5e6:	83 e0       	ldi	r24, 0x03	; 3
     5e8:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		LCD_voidSetDisplayState(&myLCD,DISP_OFF);
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	84 e1       	ldi	r24, 0x14	; 20
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	0e 94 c9 08 	call	0x1192	; 0x1192 <LCD_voidSetDisplayState>
		MCAL_USART_SendString((u8*)"\r\n***** ENTER RFID CARD *****\r\n");
     5f6:	8a eb       	ldi	r24, 0xBA	; 186
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <MCAL_USART_SendString>
		break ; 
     5fe:	00 00       	nop
		default : break ; 
	}

}
     600:	00 00       	nop
     602:	2f 96       	adiw	r28, 0x0f	; 15
     604:	0f b6       	in	r0, 0x3f	; 63
     606:	f8 94       	cli
     608:	de bf       	out	0x3e, r29	; 62
     60a:	0f be       	out	0x3f, r0	; 63
     60c:	cd bf       	out	0x3d, r28	; 61
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	08 95       	ret

00000614 <ECU1_Entance_APP_SETUP>:
*******************************************************************************/


/*				MAIN FCNs				*/
void ECU1_Entance_APP_SETUP(void) 
{
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
	/*	MCAL INIT	*/
	// GPIO 
	GPIO_voidInit(); 
     61c:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <GPIO_voidInit>
	GPIO_voidSetPinDirection(PORTA,PIN0,OUTPUT); //	For Trigger Master 
     620:	41 e0       	ldi	r20, 0x01	; 1
     622:	60 e0       	ldi	r22, 0x00	; 0
     624:	80 e0       	ldi	r24, 0x00	; 0
     626:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
	GPIO_voidSetPinDirection(PORTC,PIN6,OUTPUT); // For Buzzer
     62a:	41 e0       	ldi	r20, 0x01	; 1
     62c:	66 e0       	ldi	r22, 0x06	; 6
     62e:	82 e0       	ldi	r24, 0x02	; 2
     630:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
	GPIO_voidSetPinDirection(GREEN_LED,OUTPUT); // For Green Led
     634:	41 e0       	ldi	r20, 0x01	; 1
     636:	67 e0       	ldi	r22, 0x07	; 7
     638:	82 e0       	ldi	r24, 0x02	; 2
     63a:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
	GPIO_voidSetPinDirection(RED_LED,OUTPUT); // For Red Led 
     63e:	41 e0       	ldi	r20, 0x01	; 1
     640:	62 e0       	ldi	r22, 0x02	; 2
     642:	83 e0       	ldi	r24, 0x03	; 3
     644:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
	

	
	// SPI
	GPIO_voidSPI_SlaveInit();
     648:	0e 94 45 12 	call	0x248a	; 0x248a <GPIO_voidSPI_SlaveInit>
	MCAL_SPI_voidInit(&mySPI);
     64c:	81 e6       	ldi	r24, 0x61	; 97
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	0e 94 79 14 	call	0x28f2	; 0x28f2 <MCAL_SPI_voidInit>
	
	/*	HAL Init	*/
	PIR_voidInit(); 
     654:	0e 94 cb 0c 	call	0x1996	; 0x1996 <PIR_voidInit>
	
	RFID_voidInit();
     658:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <RFID_voidInit>
	RFID_voidGetData_Asynch(RFID_Callback);
     65c:	88 e7       	ldi	r24, 0x78	; 120
     65e:	93 e0       	ldi	r25, 0x03	; 3
     660:	0e 94 76 0d 	call	0x1aec	; 0x1aec <RFID_voidGetData_Asynch>
	
	GateControl_voidInit(); 
     664:	0e 94 0a 04 	call	0x814	; 0x814 <GateControl_voidInit>
	
	LCD_voidSetup();
     668:	0e 94 04 02 	call	0x408	; 0x408 <LCD_voidSetup>
	MCAL_USART_SendString((u8*)"\r\n***** ENTRANCE GATE *****\r\n*****ENTER RFID CARD *****\r\n");
     66c:	8a ed       	ldi	r24, 0xDA	; 218
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <MCAL_USART_SendString>

	
	
	/*	Global Interrupt	*/
	ENABLE_GLOBAL_INTERRUPT();
     674:	8f e5       	ldi	r24, 0x5F	; 95
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	2f e5       	ldi	r18, 0x5F	; 95
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	f9 01       	movw	r30, r18
     67e:	20 81       	ld	r18, Z
     680:	20 68       	ori	r18, 0x80	; 128
     682:	fc 01       	movw	r30, r24
     684:	20 83       	st	Z, r18

	
}
     686:	00 00       	nop
     688:	df 91       	pop	r29
     68a:	cf 91       	pop	r28
     68c:	08 95       	ret

0000068e <ECU1_Entance_APP_LOOP>:
 #include<util/delay.h>
 #else 
#endif

void ECU1_Entance_APP_LOOP(void) 
{
     68e:	cf 93       	push	r28
     690:	df 93       	push	r29
     692:	cd b7       	in	r28, 0x3d	; 61
     694:	de b7       	in	r29, 0x3e	; 62
	// Stuck Here Until Get Valid ID
	while(Glob_ID_Valid !=  VALID_ID)
     696:	02 c0       	rjmp	.+4      	; 0x69c <ECU1_Entance_APP_LOOP+0xe>
	{
		GateControl_voidCloseGate() ;
     698:	0e 94 3a 04 	call	0x874	; 0x874 <GateControl_voidCloseGate>
#endif

void ECU1_Entance_APP_LOOP(void) 
{
	// Stuck Here Until Get Valid ID
	while(Glob_ID_Valid !=  VALID_ID)
     69c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     6a0:	81 33       	cpi	r24, 0x31	; 49
     6a2:	d1 f7       	brne	.-12     	; 0x698 <ECU1_Entance_APP_LOOP+0xa>
		GateControl_voidCloseGate() ;
	}
	// If Glob_ID_Valid == VALID_ID
	{
		/* Disable Interrupts	*/
		DISABLE_GLOBAL_INTERRUPT();
     6a4:	8f e5       	ldi	r24, 0x5F	; 95
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	2f e5       	ldi	r18, 0x5F	; 95
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	f9 01       	movw	r30, r18
     6ae:	20 81       	ld	r18, Z
     6b0:	2f 77       	andi	r18, 0x7F	; 127
     6b2:	fc 01       	movw	r30, r24
     6b4:	20 83       	st	Z, r18
		
		GateControl_voidOpenGate() ; 
     6b6:	0e 94 26 04 	call	0x84c	; 0x84c <GateControl_voidOpenGate>
		while(PIR_u8ExistMovement() == 1) ; 
     6ba:	00 00       	nop
     6bc:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <PIR_u8ExistMovement>
     6c0:	81 30       	cpi	r24, 0x01	; 1
     6c2:	e1 f3       	breq	.-8      	; 0x6bc <ECU1_Entance_APP_LOOP+0x2e>
		Glob_ID_Valid =  NOT_VALID_ID ; 
     6c4:	80 e3       	ldi	r24, 0x30	; 48
     6c6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		/*	Clear Any Pending Flag of USART	*/
		MCAL_voidClearFlags();
     6ca:	0e 94 93 16 	call	0x2d26	; 0x2d26 <MCAL_voidClearFlags>
		/* Renable Interrupts	*/ 
		ENABLE_GLOBAL_INTERRUPT();
     6ce:	8f e5       	ldi	r24, 0x5F	; 95
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	2f e5       	ldi	r18, 0x5F	; 95
     6d4:	30 e0       	ldi	r19, 0x00	; 0
     6d6:	f9 01       	movw	r30, r18
     6d8:	20 81       	ld	r18, Z
     6da:	20 68       	ori	r18, 0x80	; 128
     6dc:	fc 01       	movw	r30, r24
     6de:	20 83       	st	Z, r18
		MCAL_USART_SendString((u8*)"\r\n***** ENTER RFID CARD *****\r\n");
     6e0:	8a eb       	ldi	r24, 0xBA	; 186
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	0e 94 1a 16 	call	0x2c34	; 0x2c34 <MCAL_USART_SendString>

	}


}
     6e8:	00 00       	nop
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <RFID_Callback>:
*******************************************************************************/



void RFID_Callback(u8 *ptr_Name , u8 *ptr_ID)
{
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	00 d0       	rcall	.+0      	; 0x6f6 <RFID_Callback+0x6>
     6f6:	00 d0       	rcall	.+0      	; 0x6f8 <RFID_Callback+0x8>
     6f8:	cd b7       	in	r28, 0x3d	; 61
     6fa:	de b7       	in	r29, 0x3e	; 62
     6fc:	9a 83       	std	Y+2, r25	; 0x02
     6fe:	89 83       	std	Y+1, r24	; 0x01
     700:	7c 83       	std	Y+4, r23	; 0x04
     702:	6b 83       	std	Y+3, r22	; 0x03
			i++ ; 
		}
		 #else 
	#endif 
	
	APP_voidSendDataThroughSPI(ptr_Name , ptr_ID) ; 
     704:	2b 81       	ldd	r18, Y+3	; 0x03
     706:	3c 81       	ldd	r19, Y+4	; 0x04
     708:	89 81       	ldd	r24, Y+1	; 0x01
     70a:	9a 81       	ldd	r25, Y+2	; 0x02
     70c:	b9 01       	movw	r22, r18
     70e:	0e 94 91 03 	call	0x722	; 0x722 <APP_voidSendDataThroughSPI>
}
     712:	00 00       	nop
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	0f 90       	pop	r0
     71a:	0f 90       	pop	r0
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	08 95       	ret

00000722 <APP_voidSendDataThroughSPI>:
void APP_voidSendDataThroughSPI(u8 *ptr_Name , u8 *ptr_ID)
{
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	00 d0       	rcall	.+0      	; 0x728 <APP_voidSendDataThroughSPI+0x6>
     728:	00 d0       	rcall	.+0      	; 0x72a <APP_voidSendDataThroughSPI+0x8>
     72a:	cd b7       	in	r28, 0x3d	; 61
     72c:	de b7       	in	r29, 0x3e	; 62
     72e:	9a 83       	std	Y+2, r25	; 0x02
     730:	89 83       	std	Y+1, r24	; 0x01
     732:	7c 83       	std	Y+4, r23	; 0x04
     734:	6b 83       	std	Y+3, r22	; 0x03
	SPI_START_SEND();
     736:	60 e0       	ldi	r22, 0x00	; 0
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	0e 94 cd 11 	call	0x239a	; 0x239a <GPIO_voidTogglePin>

	
	APP_voidSendStringThroughSPI(ptr_Name) ; 
     73e:	89 81       	ldd	r24, Y+1	; 0x01
     740:	9a 81       	ldd	r25, Y+2	; 0x02
     742:	0e 94 d7 03 	call	0x7ae	; 0x7ae <APP_voidSendStringThroughSPI>
	APP_voidSendStringThroughSPI(ptr_ID) ;
     746:	8b 81       	ldd	r24, Y+3	; 0x03
     748:	9c 81       	ldd	r25, Y+4	; 0x04
     74a:	0e 94 d7 03 	call	0x7ae	; 0x7ae <APP_voidSendStringThroughSPI>
	APP_IsValidID();	  
     74e:	0e 94 b1 03 	call	0x762	; 0x762 <APP_IsValidID>
}
     752:	00 00       	nop
     754:	0f 90       	pop	r0
     756:	0f 90       	pop	r0
     758:	0f 90       	pop	r0
     75a:	0f 90       	pop	r0
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	08 95       	ret

00000762 <APP_IsValidID>:

void APP_IsValidID(void)
{
     762:	cf 93       	push	r28
     764:	df 93       	push	r29
     766:	1f 92       	push	r1
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
	ID_Check_t LOC_Result = NOT_VALID_ID ; 
     76c:	80 e3       	ldi	r24, 0x30	; 48
     76e:	89 83       	std	Y+1, r24	; 0x01
	do
	{
		MCAL_SPI_voidByteExchangeAsynch(VALID_ID_SYMBOL , &LOC_Result);
     770:	ce 01       	movw	r24, r28
     772:	01 96       	adiw	r24, 0x01	; 1
     774:	bc 01       	movw	r22, r24
     776:	84 e2       	ldi	r24, 0x24	; 36
     778:	0e 94 c8 14 	call	0x2990	; 0x2990 <MCAL_SPI_voidByteExchangeAsynch>
	}while(!( LOC_Result == '1' || LOC_Result == '0') );
     77c:	89 81       	ldd	r24, Y+1	; 0x01
     77e:	81 33       	cpi	r24, 0x31	; 49
     780:	19 f0       	breq	.+6      	; 0x788 <APP_IsValidID+0x26>
     782:	89 81       	ldd	r24, Y+1	; 0x01
     784:	80 33       	cpi	r24, 0x30	; 48
     786:	a1 f7       	brne	.-24     	; 0x770 <APP_IsValidID+0xe>
	Glob_ID_Valid = LOC_Result ; 
     788:	89 81       	ldd	r24, Y+1	; 0x01
     78a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	(Glob_ID_Valid == VALID_ID) ? (System_voidStates(0)) : (System_voidStates(1)) ; 
     78e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     792:	81 33       	cpi	r24, 0x31	; 49
     794:	21 f4       	brne	.+8      	; 0x79e <APP_IsValidID+0x3c>
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	0e 94 1e 02 	call	0x43c	; 0x43c <System_voidStates>

}
     79c:	03 c0       	rjmp	.+6      	; 0x7a4 <APP_IsValidID+0x42>
	do
	{
		MCAL_SPI_voidByteExchangeAsynch(VALID_ID_SYMBOL , &LOC_Result);
	}while(!( LOC_Result == '1' || LOC_Result == '0') );
	Glob_ID_Valid = LOC_Result ; 
	(Glob_ID_Valid == VALID_ID) ? (System_voidStates(0)) : (System_voidStates(1)) ; 
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	0e 94 1e 02 	call	0x43c	; 0x43c <System_voidStates>

}
     7a4:	00 00       	nop
     7a6:	0f 90       	pop	r0
     7a8:	df 91       	pop	r29
     7aa:	cf 91       	pop	r28
     7ac:	08 95       	ret

000007ae <APP_voidSendStringThroughSPI>:
void APP_voidSendStringThroughSPI(u8 *ptr_String)
{
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	00 d0       	rcall	.+0      	; 0x7b4 <APP_voidSendStringThroughSPI+0x6>
     7b4:	00 d0       	rcall	.+0      	; 0x7b6 <APP_voidSendStringThroughSPI+0x8>
     7b6:	cd b7       	in	r28, 0x3d	; 61
     7b8:	de b7       	in	r29, 0x3e	; 62
     7ba:	9c 83       	std	Y+4, r25	; 0x04
     7bc:	8b 83       	std	Y+3, r24	; 0x03
	u8 LOC_u8DummyData = 0 ; 
     7be:	1a 82       	std	Y+2, r1	; 0x02
	u8 i = 0;
     7c0:	19 82       	std	Y+1, r1	; 0x01
	while(ptr_String[i] != '\0' )
     7c2:	15 c0       	rjmp	.+42     	; 0x7ee <APP_voidSendStringThroughSPI+0x40>
	{
		do
		{
			MCAL_SPI_voidByteExchangeAsynch(ptr_String[i] , &LOC_u8DummyData);
     7c4:	89 81       	ldd	r24, Y+1	; 0x01
     7c6:	88 2f       	mov	r24, r24
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	2b 81       	ldd	r18, Y+3	; 0x03
     7cc:	3c 81       	ldd	r19, Y+4	; 0x04
     7ce:	82 0f       	add	r24, r18
     7d0:	93 1f       	adc	r25, r19
     7d2:	fc 01       	movw	r30, r24
     7d4:	20 81       	ld	r18, Z
     7d6:	ce 01       	movw	r24, r28
     7d8:	02 96       	adiw	r24, 0x02	; 2
     7da:	bc 01       	movw	r22, r24
     7dc:	82 2f       	mov	r24, r18
     7de:	0e 94 c8 14 	call	0x2990	; 0x2990 <MCAL_SPI_voidByteExchangeAsynch>
				MCAL_USART_TxByteSynch('\n') ;
				MCAL_USART_TxByteSynch('\r') ;
			 #else 

			#endif
		}while(LOC_u8DummyData != MASTER_ACK);
     7e2:	8a 81       	ldd	r24, Y+2	; 0x02
     7e4:	8b 32       	cpi	r24, 0x2B	; 43
     7e6:	71 f7       	brne	.-36     	; 0x7c4 <APP_voidSendStringThroughSPI+0x16>
		i++ ; 
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	8f 5f       	subi	r24, 0xFF	; 255
     7ec:	89 83       	std	Y+1, r24	; 0x01
}
void APP_voidSendStringThroughSPI(u8 *ptr_String)
{
	u8 LOC_u8DummyData = 0 ; 
	u8 i = 0;
	while(ptr_String[i] != '\0' )
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	88 2f       	mov	r24, r24
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	2b 81       	ldd	r18, Y+3	; 0x03
     7f6:	3c 81       	ldd	r19, Y+4	; 0x04
     7f8:	82 0f       	add	r24, r18
     7fa:	93 1f       	adc	r25, r19
     7fc:	fc 01       	movw	r30, r24
     7fe:	80 81       	ld	r24, Z
     800:	88 23       	and	r24, r24
     802:	01 f7       	brne	.-64     	; 0x7c4 <APP_voidSendStringThroughSPI+0x16>

			#endif
		}while(LOC_u8DummyData != MASTER_ACK);
		i++ ; 
	}
}
     804:	00 00       	nop
     806:	0f 90       	pop	r0
     808:	0f 90       	pop	r0
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <GateControl_voidInit>:
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	cd b7       	in	r28, 0x3d	; 61
     81a:	de b7       	in	r29, 0x3e	; 62
     81c:	83 e7       	ldi	r24, 0x73	; 115
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	0e 94 61 12 	call	0x24c2	; 0x24c2 <PWM_voidInit>
     824:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     828:	80 7a       	andi	r24, 0xA0	; 160
     82a:	68 2f       	mov	r22, r24
     82c:	83 e7       	ldi	r24, 0x73	; 115
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <PWM_voidSetOCPin>
     834:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     838:	87 70       	andi	r24, 0x07	; 7
     83a:	41 e0       	ldi	r20, 0x01	; 1
     83c:	68 2f       	mov	r22, r24
     83e:	83 e0       	ldi	r24, 0x03	; 3
     840:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     844:	00 00       	nop
     846:	df 91       	pop	r29
     848:	cf 91       	pop	r28
     84a:	08 95       	ret

0000084c <GateControl_voidOpenGate>:
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	cd b7       	in	r28, 0x3d	; 61
     852:	de b7       	in	r29, 0x3e	; 62
     854:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     858:	80 7a       	andi	r24, 0xA0	; 160
     85a:	2c eb       	ldi	r18, 0xBC	; 188
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	43 ec       	ldi	r20, 0xC3	; 195
     860:	59 e0       	ldi	r21, 0x09	; 9
     862:	68 2f       	mov	r22, r24
     864:	83 e7       	ldi	r24, 0x73	; 115
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	0e 94 18 14 	call	0x2830	; 0x2830 <PWM_voidPhaseFrequencyCorrectSetValues>
     86c:	00 00       	nop
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <GateControl_voidCloseGate>:
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	cd b7       	in	r28, 0x3d	; 61
     87a:	de b7       	in	r29, 0x3e	; 62
     87c:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <ptr_usrConfig>
     880:	80 7a       	andi	r24, 0xA0	; 160
     882:	2d e7       	ldi	r18, 0x7D	; 125
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	43 ec       	ldi	r20, 0xC3	; 195
     888:	59 e0       	ldi	r21, 0x09	; 9
     88a:	68 2f       	mov	r22, r24
     88c:	83 e7       	ldi	r24, 0x73	; 115
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 18 14 	call	0x2830	; 0x2830 <PWM_voidPhaseFrequencyCorrectSetValues>
     894:	00 00       	nop
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	08 95       	ret

0000089c <LCD_voidInit>:
{

	LCD_voidSendChar(ptrLCD,storedCharIndex);
	
	
}
     89c:	cf 93       	push	r28
     89e:	df 93       	push	r29
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
     8a4:	60 97       	sbiw	r28, 0x10	; 16
     8a6:	0f b6       	in	r0, 0x3f	; 63
     8a8:	f8 94       	cli
     8aa:	de bf       	out	0x3e, r29	; 62
     8ac:	0f be       	out	0x3f, r0	; 63
     8ae:	cd bf       	out	0x3d, r28	; 61
     8b0:	98 8b       	std	Y+16, r25	; 0x10
     8b2:	8f 87       	std	Y+15, r24	; 0x0f
     8b4:	8f 85       	ldd	r24, Y+15	; 0x0f
     8b6:	98 89       	ldd	r25, Y+16	; 0x10
     8b8:	fc 01       	movw	r30, r24
     8ba:	82 81       	ldd	r24, Z+2	; 0x02
     8bc:	93 81       	ldd	r25, Z+3	; 0x03
     8be:	05 96       	adiw	r24, 0x05	; 5
     8c0:	fc 01       	movw	r30, r24
     8c2:	20 81       	ld	r18, Z
     8c4:	8f 85       	ldd	r24, Y+15	; 0x0f
     8c6:	98 89       	ldd	r25, Y+16	; 0x10
     8c8:	fc 01       	movw	r30, r24
     8ca:	82 81       	ldd	r24, Z+2	; 0x02
     8cc:	93 81       	ldd	r25, Z+3	; 0x03
     8ce:	04 96       	adiw	r24, 0x04	; 4
     8d0:	fc 01       	movw	r30, r24
     8d2:	80 81       	ld	r24, Z
     8d4:	41 e0       	ldi	r20, 0x01	; 1
     8d6:	62 2f       	mov	r22, r18
     8d8:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     8dc:	8f 85       	ldd	r24, Y+15	; 0x0f
     8de:	98 89       	ldd	r25, Y+16	; 0x10
     8e0:	fc 01       	movw	r30, r24
     8e2:	82 81       	ldd	r24, Z+2	; 0x02
     8e4:	93 81       	ldd	r25, Z+3	; 0x03
     8e6:	07 96       	adiw	r24, 0x07	; 7
     8e8:	fc 01       	movw	r30, r24
     8ea:	20 81       	ld	r18, Z
     8ec:	8f 85       	ldd	r24, Y+15	; 0x0f
     8ee:	98 89       	ldd	r25, Y+16	; 0x10
     8f0:	fc 01       	movw	r30, r24
     8f2:	82 81       	ldd	r24, Z+2	; 0x02
     8f4:	93 81       	ldd	r25, Z+3	; 0x03
     8f6:	06 96       	adiw	r24, 0x06	; 6
     8f8:	fc 01       	movw	r30, r24
     8fa:	80 81       	ld	r24, Z
     8fc:	41 e0       	ldi	r20, 0x01	; 1
     8fe:	62 2f       	mov	r22, r18
     900:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     904:	8f 85       	ldd	r24, Y+15	; 0x0f
     906:	98 89       	ldd	r25, Y+16	; 0x10
     908:	fc 01       	movw	r30, r24
     90a:	82 81       	ldd	r24, Z+2	; 0x02
     90c:	93 81       	ldd	r25, Z+3	; 0x03
     90e:	09 96       	adiw	r24, 0x09	; 9
     910:	fc 01       	movw	r30, r24
     912:	20 81       	ld	r18, Z
     914:	8f 85       	ldd	r24, Y+15	; 0x0f
     916:	98 89       	ldd	r25, Y+16	; 0x10
     918:	fc 01       	movw	r30, r24
     91a:	82 81       	ldd	r24, Z+2	; 0x02
     91c:	93 81       	ldd	r25, Z+3	; 0x03
     91e:	08 96       	adiw	r24, 0x08	; 8
     920:	fc 01       	movw	r30, r24
     922:	80 81       	ld	r24, Z
     924:	41 e0       	ldi	r20, 0x01	; 1
     926:	62 2f       	mov	r22, r18
     928:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     92c:	8f 85       	ldd	r24, Y+15	; 0x0f
     92e:	98 89       	ldd	r25, Y+16	; 0x10
     930:	fc 01       	movw	r30, r24
     932:	82 81       	ldd	r24, Z+2	; 0x02
     934:	93 81       	ldd	r25, Z+3	; 0x03
     936:	0b 96       	adiw	r24, 0x0b	; 11
     938:	fc 01       	movw	r30, r24
     93a:	20 81       	ld	r18, Z
     93c:	8f 85       	ldd	r24, Y+15	; 0x0f
     93e:	98 89       	ldd	r25, Y+16	; 0x10
     940:	fc 01       	movw	r30, r24
     942:	82 81       	ldd	r24, Z+2	; 0x02
     944:	93 81       	ldd	r25, Z+3	; 0x03
     946:	0a 96       	adiw	r24, 0x0a	; 10
     948:	fc 01       	movw	r30, r24
     94a:	80 81       	ld	r24, Z
     94c:	41 e0       	ldi	r20, 0x01	; 1
     94e:	62 2f       	mov	r22, r18
     950:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     954:	8f 85       	ldd	r24, Y+15	; 0x0f
     956:	98 89       	ldd	r25, Y+16	; 0x10
     958:	fc 01       	movw	r30, r24
     95a:	82 81       	ldd	r24, Z+2	; 0x02
     95c:	93 81       	ldd	r25, Z+3	; 0x03
     95e:	03 96       	adiw	r24, 0x03	; 3
     960:	fc 01       	movw	r30, r24
     962:	20 81       	ld	r18, Z
     964:	8f 85       	ldd	r24, Y+15	; 0x0f
     966:	98 89       	ldd	r25, Y+16	; 0x10
     968:	fc 01       	movw	r30, r24
     96a:	82 81       	ldd	r24, Z+2	; 0x02
     96c:	93 81       	ldd	r25, Z+3	; 0x03
     96e:	02 96       	adiw	r24, 0x02	; 2
     970:	fc 01       	movw	r30, r24
     972:	80 81       	ld	r24, Z
     974:	41 e0       	ldi	r20, 0x01	; 1
     976:	62 2f       	mov	r22, r18
     978:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     97c:	8f 85       	ldd	r24, Y+15	; 0x0f
     97e:	98 89       	ldd	r25, Y+16	; 0x10
     980:	fc 01       	movw	r30, r24
     982:	82 81       	ldd	r24, Z+2	; 0x02
     984:	93 81       	ldd	r25, Z+3	; 0x03
     986:	01 96       	adiw	r24, 0x01	; 1
     988:	fc 01       	movw	r30, r24
     98a:	20 81       	ld	r18, Z
     98c:	8f 85       	ldd	r24, Y+15	; 0x0f
     98e:	98 89       	ldd	r25, Y+16	; 0x10
     990:	fc 01       	movw	r30, r24
     992:	82 81       	ldd	r24, Z+2	; 0x02
     994:	93 81       	ldd	r25, Z+3	; 0x03
     996:	fc 01       	movw	r30, r24
     998:	80 81       	ld	r24, Z
     99a:	41 e0       	ldi	r20, 0x01	; 1
     99c:	62 2f       	mov	r22, r18
     99e:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
     9a2:	8f 85       	ldd	r24, Y+15	; 0x0f
     9a4:	98 89       	ldd	r25, Y+16	; 0x10
     9a6:	62 e0       	ldi	r22, 0x02	; 2
     9a8:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
     9ac:	8f 85       	ldd	r24, Y+15	; 0x0f
     9ae:	98 89       	ldd	r25, Y+16	; 0x10
     9b0:	68 e2       	ldi	r22, 0x28	; 40
     9b2:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
     9b6:	8f 85       	ldd	r24, Y+15	; 0x0f
     9b8:	98 89       	ldd	r25, Y+16	; 0x10
     9ba:	61 e0       	ldi	r22, 0x01	; 1
     9bc:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
     9c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     9c2:	98 89       	ldd	r25, Y+16	; 0x10
     9c4:	6f e0       	ldi	r22, 0x0F	; 15
     9c6:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
     9ca:	8f 85       	ldd	r24, Y+15	; 0x0f
     9cc:	98 89       	ldd	r25, Y+16	; 0x10
     9ce:	60 e8       	ldi	r22, 0x80	; 128
     9d0:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	a0 e0       	ldi	r26, 0x00	; 0
     9da:	b0 e4       	ldi	r27, 0x40	; 64
     9dc:	89 83       	std	Y+1, r24	; 0x01
     9de:	9a 83       	std	Y+2, r25	; 0x02
     9e0:	ab 83       	std	Y+3, r26	; 0x03
     9e2:	bc 83       	std	Y+4, r27	; 0x04
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	4a e7       	ldi	r20, 0x7A	; 122
     9ea:	55 e4       	ldi	r21, 0x45	; 69
     9ec:	69 81       	ldd	r22, Y+1	; 0x01
     9ee:	7a 81       	ldd	r23, Y+2	; 0x02
     9f0:	8b 81       	ldd	r24, Y+3	; 0x03
     9f2:	9c 81       	ldd	r25, Y+4	; 0x04
     9f4:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     9f8:	dc 01       	movw	r26, r24
     9fa:	cb 01       	movw	r24, r22
     9fc:	8d 83       	std	Y+5, r24	; 0x05
     9fe:	9e 83       	std	Y+6, r25	; 0x06
     a00:	af 83       	std	Y+7, r26	; 0x07
     a02:	b8 87       	std	Y+8, r27	; 0x08
     a04:	20 e0       	ldi	r18, 0x00	; 0
     a06:	30 e0       	ldi	r19, 0x00	; 0
     a08:	40 e8       	ldi	r20, 0x80	; 128
     a0a:	5f e3       	ldi	r21, 0x3F	; 63
     a0c:	6d 81       	ldd	r22, Y+5	; 0x05
     a0e:	7e 81       	ldd	r23, Y+6	; 0x06
     a10:	8f 81       	ldd	r24, Y+7	; 0x07
     a12:	98 85       	ldd	r25, Y+8	; 0x08
     a14:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     a18:	88 23       	and	r24, r24
     a1a:	2c f4       	brge	.+10     	; 0xa26 <LCD_voidInit+0x18a>
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	9a 87       	std	Y+10, r25	; 0x0a
     a22:	89 87       	std	Y+9, r24	; 0x09
     a24:	3f c0       	rjmp	.+126    	; 0xaa4 <LCD_voidInit+0x208>
     a26:	20 e0       	ldi	r18, 0x00	; 0
     a28:	3f ef       	ldi	r19, 0xFF	; 255
     a2a:	4f e7       	ldi	r20, 0x7F	; 127
     a2c:	57 e4       	ldi	r21, 0x47	; 71
     a2e:	6d 81       	ldd	r22, Y+5	; 0x05
     a30:	7e 81       	ldd	r23, Y+6	; 0x06
     a32:	8f 81       	ldd	r24, Y+7	; 0x07
     a34:	98 85       	ldd	r25, Y+8	; 0x08
     a36:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     a3a:	18 16       	cp	r1, r24
     a3c:	4c f5       	brge	.+82     	; 0xa90 <LCD_voidInit+0x1f4>
     a3e:	20 e0       	ldi	r18, 0x00	; 0
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	40 e2       	ldi	r20, 0x20	; 32
     a44:	51 e4       	ldi	r21, 0x41	; 65
     a46:	69 81       	ldd	r22, Y+1	; 0x01
     a48:	7a 81       	ldd	r23, Y+2	; 0x02
     a4a:	8b 81       	ldd	r24, Y+3	; 0x03
     a4c:	9c 81       	ldd	r25, Y+4	; 0x04
     a4e:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     a52:	dc 01       	movw	r26, r24
     a54:	cb 01       	movw	r24, r22
     a56:	bc 01       	movw	r22, r24
     a58:	cd 01       	movw	r24, r26
     a5a:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     a5e:	dc 01       	movw	r26, r24
     a60:	cb 01       	movw	r24, r22
     a62:	9a 87       	std	Y+10, r25	; 0x0a
     a64:	89 87       	std	Y+9, r24	; 0x09
     a66:	0f c0       	rjmp	.+30     	; 0xa86 <LCD_voidInit+0x1ea>
     a68:	80 e9       	ldi	r24, 0x90	; 144
     a6a:	91 e0       	ldi	r25, 0x01	; 1
     a6c:	9c 87       	std	Y+12, r25	; 0x0c
     a6e:	8b 87       	std	Y+11, r24	; 0x0b
     a70:	8b 85       	ldd	r24, Y+11	; 0x0b
     a72:	9c 85       	ldd	r25, Y+12	; 0x0c
     a74:	01 97       	sbiw	r24, 0x01	; 1
     a76:	f1 f7       	brne	.-4      	; 0xa74 <LCD_voidInit+0x1d8>
     a78:	9c 87       	std	Y+12, r25	; 0x0c
     a7a:	8b 87       	std	Y+11, r24	; 0x0b
     a7c:	89 85       	ldd	r24, Y+9	; 0x09
     a7e:	9a 85       	ldd	r25, Y+10	; 0x0a
     a80:	01 97       	sbiw	r24, 0x01	; 1
     a82:	9a 87       	std	Y+10, r25	; 0x0a
     a84:	89 87       	std	Y+9, r24	; 0x09
     a86:	89 85       	ldd	r24, Y+9	; 0x09
     a88:	9a 85       	ldd	r25, Y+10	; 0x0a
     a8a:	89 2b       	or	r24, r25
     a8c:	69 f7       	brne	.-38     	; 0xa68 <LCD_voidInit+0x1cc>
     a8e:	14 c0       	rjmp	.+40     	; 0xab8 <LCD_voidInit+0x21c>
     a90:	6d 81       	ldd	r22, Y+5	; 0x05
     a92:	7e 81       	ldd	r23, Y+6	; 0x06
     a94:	8f 81       	ldd	r24, Y+7	; 0x07
     a96:	98 85       	ldd	r25, Y+8	; 0x08
     a98:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     a9c:	dc 01       	movw	r26, r24
     a9e:	cb 01       	movw	r24, r22
     aa0:	9a 87       	std	Y+10, r25	; 0x0a
     aa2:	89 87       	std	Y+9, r24	; 0x09
     aa4:	89 85       	ldd	r24, Y+9	; 0x09
     aa6:	9a 85       	ldd	r25, Y+10	; 0x0a
     aa8:	9e 87       	std	Y+14, r25	; 0x0e
     aaa:	8d 87       	std	Y+13, r24	; 0x0d
     aac:	8d 85       	ldd	r24, Y+13	; 0x0d
     aae:	9e 85       	ldd	r25, Y+14	; 0x0e
     ab0:	01 97       	sbiw	r24, 0x01	; 1
     ab2:	f1 f7       	brne	.-4      	; 0xab0 <LCD_voidInit+0x214>
     ab4:	9e 87       	std	Y+14, r25	; 0x0e
     ab6:	8d 87       	std	Y+13, r24	; 0x0d
     ab8:	00 00       	nop
     aba:	60 96       	adiw	r28, 0x10	; 16
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	f8 94       	cli
     ac0:	de bf       	out	0x3e, r29	; 62
     ac2:	0f be       	out	0x3f, r0	; 63
     ac4:	cd bf       	out	0x3d, r28	; 61
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	08 95       	ret

00000acc <LCD_voidSendChar>:
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	cd b7       	in	r28, 0x3d	; 61
     ad2:	de b7       	in	r29, 0x3e	; 62
     ad4:	eb 97       	sbiw	r28, 0x3b	; 59
     ad6:	0f b6       	in	r0, 0x3f	; 63
     ad8:	f8 94       	cli
     ada:	de bf       	out	0x3e, r29	; 62
     adc:	0f be       	out	0x3f, r0	; 63
     ade:	cd bf       	out	0x3d, r28	; 61
     ae0:	9a af       	std	Y+58, r25	; 0x3a
     ae2:	89 af       	std	Y+57, r24	; 0x39
     ae4:	6b af       	std	Y+59, r22	; 0x3b
     ae6:	8b ad       	ldd	r24, Y+59	; 0x3b
     ae8:	82 95       	swap	r24
     aea:	8f 70       	andi	r24, 0x0F	; 15
     aec:	38 2f       	mov	r19, r24
     aee:	31 70       	andi	r19, 0x01	; 1
     af0:	89 ad       	ldd	r24, Y+57	; 0x39
     af2:	9a ad       	ldd	r25, Y+58	; 0x3a
     af4:	fc 01       	movw	r30, r24
     af6:	82 81       	ldd	r24, Z+2	; 0x02
     af8:	93 81       	ldd	r25, Z+3	; 0x03
     afa:	05 96       	adiw	r24, 0x05	; 5
     afc:	fc 01       	movw	r30, r24
     afe:	20 81       	ld	r18, Z
     b00:	89 ad       	ldd	r24, Y+57	; 0x39
     b02:	9a ad       	ldd	r25, Y+58	; 0x3a
     b04:	fc 01       	movw	r30, r24
     b06:	82 81       	ldd	r24, Z+2	; 0x02
     b08:	93 81       	ldd	r25, Z+3	; 0x03
     b0a:	04 96       	adiw	r24, 0x04	; 4
     b0c:	fc 01       	movw	r30, r24
     b0e:	80 81       	ld	r24, Z
     b10:	43 2f       	mov	r20, r19
     b12:	62 2f       	mov	r22, r18
     b14:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     b18:	8b ad       	ldd	r24, Y+59	; 0x3b
     b1a:	82 95       	swap	r24
     b1c:	86 95       	lsr	r24
     b1e:	87 70       	andi	r24, 0x07	; 7
     b20:	38 2f       	mov	r19, r24
     b22:	31 70       	andi	r19, 0x01	; 1
     b24:	89 ad       	ldd	r24, Y+57	; 0x39
     b26:	9a ad       	ldd	r25, Y+58	; 0x3a
     b28:	fc 01       	movw	r30, r24
     b2a:	82 81       	ldd	r24, Z+2	; 0x02
     b2c:	93 81       	ldd	r25, Z+3	; 0x03
     b2e:	07 96       	adiw	r24, 0x07	; 7
     b30:	fc 01       	movw	r30, r24
     b32:	20 81       	ld	r18, Z
     b34:	89 ad       	ldd	r24, Y+57	; 0x39
     b36:	9a ad       	ldd	r25, Y+58	; 0x3a
     b38:	fc 01       	movw	r30, r24
     b3a:	82 81       	ldd	r24, Z+2	; 0x02
     b3c:	93 81       	ldd	r25, Z+3	; 0x03
     b3e:	06 96       	adiw	r24, 0x06	; 6
     b40:	fc 01       	movw	r30, r24
     b42:	80 81       	ld	r24, Z
     b44:	43 2f       	mov	r20, r19
     b46:	62 2f       	mov	r22, r18
     b48:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     b4c:	8b ad       	ldd	r24, Y+59	; 0x3b
     b4e:	82 95       	swap	r24
     b50:	86 95       	lsr	r24
     b52:	86 95       	lsr	r24
     b54:	83 70       	andi	r24, 0x03	; 3
     b56:	38 2f       	mov	r19, r24
     b58:	31 70       	andi	r19, 0x01	; 1
     b5a:	89 ad       	ldd	r24, Y+57	; 0x39
     b5c:	9a ad       	ldd	r25, Y+58	; 0x3a
     b5e:	fc 01       	movw	r30, r24
     b60:	82 81       	ldd	r24, Z+2	; 0x02
     b62:	93 81       	ldd	r25, Z+3	; 0x03
     b64:	09 96       	adiw	r24, 0x09	; 9
     b66:	fc 01       	movw	r30, r24
     b68:	20 81       	ld	r18, Z
     b6a:	89 ad       	ldd	r24, Y+57	; 0x39
     b6c:	9a ad       	ldd	r25, Y+58	; 0x3a
     b6e:	fc 01       	movw	r30, r24
     b70:	82 81       	ldd	r24, Z+2	; 0x02
     b72:	93 81       	ldd	r25, Z+3	; 0x03
     b74:	08 96       	adiw	r24, 0x08	; 8
     b76:	fc 01       	movw	r30, r24
     b78:	80 81       	ld	r24, Z
     b7a:	43 2f       	mov	r20, r19
     b7c:	62 2f       	mov	r22, r18
     b7e:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     b82:	8b ad       	ldd	r24, Y+59	; 0x3b
     b84:	38 2f       	mov	r19, r24
     b86:	33 1f       	adc	r19, r19
     b88:	33 27       	eor	r19, r19
     b8a:	33 1f       	adc	r19, r19
     b8c:	89 ad       	ldd	r24, Y+57	; 0x39
     b8e:	9a ad       	ldd	r25, Y+58	; 0x3a
     b90:	fc 01       	movw	r30, r24
     b92:	82 81       	ldd	r24, Z+2	; 0x02
     b94:	93 81       	ldd	r25, Z+3	; 0x03
     b96:	0b 96       	adiw	r24, 0x0b	; 11
     b98:	fc 01       	movw	r30, r24
     b9a:	20 81       	ld	r18, Z
     b9c:	89 ad       	ldd	r24, Y+57	; 0x39
     b9e:	9a ad       	ldd	r25, Y+58	; 0x3a
     ba0:	fc 01       	movw	r30, r24
     ba2:	82 81       	ldd	r24, Z+2	; 0x02
     ba4:	93 81       	ldd	r25, Z+3	; 0x03
     ba6:	0a 96       	adiw	r24, 0x0a	; 10
     ba8:	fc 01       	movw	r30, r24
     baa:	80 81       	ld	r24, Z
     bac:	43 2f       	mov	r20, r19
     bae:	62 2f       	mov	r22, r18
     bb0:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     bb4:	89 ad       	ldd	r24, Y+57	; 0x39
     bb6:	9a ad       	ldd	r25, Y+58	; 0x3a
     bb8:	fc 01       	movw	r30, r24
     bba:	82 81       	ldd	r24, Z+2	; 0x02
     bbc:	93 81       	ldd	r25, Z+3	; 0x03
     bbe:	03 96       	adiw	r24, 0x03	; 3
     bc0:	fc 01       	movw	r30, r24
     bc2:	20 81       	ld	r18, Z
     bc4:	89 ad       	ldd	r24, Y+57	; 0x39
     bc6:	9a ad       	ldd	r25, Y+58	; 0x3a
     bc8:	fc 01       	movw	r30, r24
     bca:	82 81       	ldd	r24, Z+2	; 0x02
     bcc:	93 81       	ldd	r25, Z+3	; 0x03
     bce:	02 96       	adiw	r24, 0x02	; 2
     bd0:	fc 01       	movw	r30, r24
     bd2:	80 81       	ld	r24, Z
     bd4:	41 e0       	ldi	r20, 0x01	; 1
     bd6:	62 2f       	mov	r22, r18
     bd8:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     bdc:	89 ad       	ldd	r24, Y+57	; 0x39
     bde:	9a ad       	ldd	r25, Y+58	; 0x3a
     be0:	fc 01       	movw	r30, r24
     be2:	82 81       	ldd	r24, Z+2	; 0x02
     be4:	93 81       	ldd	r25, Z+3	; 0x03
     be6:	01 96       	adiw	r24, 0x01	; 1
     be8:	fc 01       	movw	r30, r24
     bea:	20 81       	ld	r18, Z
     bec:	89 ad       	ldd	r24, Y+57	; 0x39
     bee:	9a ad       	ldd	r25, Y+58	; 0x3a
     bf0:	fc 01       	movw	r30, r24
     bf2:	82 81       	ldd	r24, Z+2	; 0x02
     bf4:	93 81       	ldd	r25, Z+3	; 0x03
     bf6:	fc 01       	movw	r30, r24
     bf8:	80 81       	ld	r24, Z
     bfa:	41 e0       	ldi	r20, 0x01	; 1
     bfc:	62 2f       	mov	r22, r18
     bfe:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	a0 e8       	ldi	r26, 0x80	; 128
     c08:	bf e3       	ldi	r27, 0x3F	; 63
     c0a:	89 83       	std	Y+1, r24	; 0x01
     c0c:	9a 83       	std	Y+2, r25	; 0x02
     c0e:	ab 83       	std	Y+3, r26	; 0x03
     c10:	bc 83       	std	Y+4, r27	; 0x04
     c12:	20 e0       	ldi	r18, 0x00	; 0
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	4a e7       	ldi	r20, 0x7A	; 122
     c18:	55 e4       	ldi	r21, 0x45	; 69
     c1a:	69 81       	ldd	r22, Y+1	; 0x01
     c1c:	7a 81       	ldd	r23, Y+2	; 0x02
     c1e:	8b 81       	ldd	r24, Y+3	; 0x03
     c20:	9c 81       	ldd	r25, Y+4	; 0x04
     c22:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     c26:	dc 01       	movw	r26, r24
     c28:	cb 01       	movw	r24, r22
     c2a:	8f a7       	std	Y+47, r24	; 0x2f
     c2c:	98 ab       	std	Y+48, r25	; 0x30
     c2e:	a9 ab       	std	Y+49, r26	; 0x31
     c30:	ba ab       	std	Y+50, r27	; 0x32
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	40 e8       	ldi	r20, 0x80	; 128
     c38:	5f e3       	ldi	r21, 0x3F	; 63
     c3a:	6f a5       	ldd	r22, Y+47	; 0x2f
     c3c:	78 a9       	ldd	r23, Y+48	; 0x30
     c3e:	89 a9       	ldd	r24, Y+49	; 0x31
     c40:	9a a9       	ldd	r25, Y+50	; 0x32
     c42:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     c46:	88 23       	and	r24, r24
     c48:	2c f4       	brge	.+10     	; 0xc54 <LCD_voidSendChar+0x188>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	9c ab       	std	Y+52, r25	; 0x34
     c50:	8b ab       	std	Y+51, r24	; 0x33
     c52:	3f c0       	rjmp	.+126    	; 0xcd2 <LCD_voidSendChar+0x206>
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	3f ef       	ldi	r19, 0xFF	; 255
     c58:	4f e7       	ldi	r20, 0x7F	; 127
     c5a:	57 e4       	ldi	r21, 0x47	; 71
     c5c:	6f a5       	ldd	r22, Y+47	; 0x2f
     c5e:	78 a9       	ldd	r23, Y+48	; 0x30
     c60:	89 a9       	ldd	r24, Y+49	; 0x31
     c62:	9a a9       	ldd	r25, Y+50	; 0x32
     c64:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     c68:	18 16       	cp	r1, r24
     c6a:	4c f5       	brge	.+82     	; 0xcbe <LCD_voidSendChar+0x1f2>
     c6c:	20 e0       	ldi	r18, 0x00	; 0
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	40 e2       	ldi	r20, 0x20	; 32
     c72:	51 e4       	ldi	r21, 0x41	; 65
     c74:	69 81       	ldd	r22, Y+1	; 0x01
     c76:	7a 81       	ldd	r23, Y+2	; 0x02
     c78:	8b 81       	ldd	r24, Y+3	; 0x03
     c7a:	9c 81       	ldd	r25, Y+4	; 0x04
     c7c:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     c80:	dc 01       	movw	r26, r24
     c82:	cb 01       	movw	r24, r22
     c84:	bc 01       	movw	r22, r24
     c86:	cd 01       	movw	r24, r26
     c88:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     c8c:	dc 01       	movw	r26, r24
     c8e:	cb 01       	movw	r24, r22
     c90:	9c ab       	std	Y+52, r25	; 0x34
     c92:	8b ab       	std	Y+51, r24	; 0x33
     c94:	0f c0       	rjmp	.+30     	; 0xcb4 <LCD_voidSendChar+0x1e8>
     c96:	80 e9       	ldi	r24, 0x90	; 144
     c98:	91 e0       	ldi	r25, 0x01	; 1
     c9a:	9e ab       	std	Y+54, r25	; 0x36
     c9c:	8d ab       	std	Y+53, r24	; 0x35
     c9e:	8d a9       	ldd	r24, Y+53	; 0x35
     ca0:	9e a9       	ldd	r25, Y+54	; 0x36
     ca2:	01 97       	sbiw	r24, 0x01	; 1
     ca4:	f1 f7       	brne	.-4      	; 0xca2 <LCD_voidSendChar+0x1d6>
     ca6:	9e ab       	std	Y+54, r25	; 0x36
     ca8:	8d ab       	std	Y+53, r24	; 0x35
     caa:	8b a9       	ldd	r24, Y+51	; 0x33
     cac:	9c a9       	ldd	r25, Y+52	; 0x34
     cae:	01 97       	sbiw	r24, 0x01	; 1
     cb0:	9c ab       	std	Y+52, r25	; 0x34
     cb2:	8b ab       	std	Y+51, r24	; 0x33
     cb4:	8b a9       	ldd	r24, Y+51	; 0x33
     cb6:	9c a9       	ldd	r25, Y+52	; 0x34
     cb8:	89 2b       	or	r24, r25
     cba:	69 f7       	brne	.-38     	; 0xc96 <LCD_voidSendChar+0x1ca>
     cbc:	14 c0       	rjmp	.+40     	; 0xce6 <LCD_voidSendChar+0x21a>
     cbe:	6f a5       	ldd	r22, Y+47	; 0x2f
     cc0:	78 a9       	ldd	r23, Y+48	; 0x30
     cc2:	89 a9       	ldd	r24, Y+49	; 0x31
     cc4:	9a a9       	ldd	r25, Y+50	; 0x32
     cc6:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     cca:	dc 01       	movw	r26, r24
     ccc:	cb 01       	movw	r24, r22
     cce:	9c ab       	std	Y+52, r25	; 0x34
     cd0:	8b ab       	std	Y+51, r24	; 0x33
     cd2:	8b a9       	ldd	r24, Y+51	; 0x33
     cd4:	9c a9       	ldd	r25, Y+52	; 0x34
     cd6:	98 af       	std	Y+56, r25	; 0x38
     cd8:	8f ab       	std	Y+55, r24	; 0x37
     cda:	8f a9       	ldd	r24, Y+55	; 0x37
     cdc:	98 ad       	ldd	r25, Y+56	; 0x38
     cde:	01 97       	sbiw	r24, 0x01	; 1
     ce0:	f1 f7       	brne	.-4      	; 0xcde <LCD_voidSendChar+0x212>
     ce2:	98 af       	std	Y+56, r25	; 0x38
     ce4:	8f ab       	std	Y+55, r24	; 0x37
     ce6:	89 ad       	ldd	r24, Y+57	; 0x39
     ce8:	9a ad       	ldd	r25, Y+58	; 0x3a
     cea:	fc 01       	movw	r30, r24
     cec:	82 81       	ldd	r24, Z+2	; 0x02
     cee:	93 81       	ldd	r25, Z+3	; 0x03
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	fc 01       	movw	r30, r24
     cf4:	20 81       	ld	r18, Z
     cf6:	89 ad       	ldd	r24, Y+57	; 0x39
     cf8:	9a ad       	ldd	r25, Y+58	; 0x3a
     cfa:	fc 01       	movw	r30, r24
     cfc:	82 81       	ldd	r24, Z+2	; 0x02
     cfe:	93 81       	ldd	r25, Z+3	; 0x03
     d00:	fc 01       	movw	r30, r24
     d02:	80 81       	ld	r24, Z
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	62 2f       	mov	r22, r18
     d08:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	a0 e8       	ldi	r26, 0x80	; 128
     d12:	bf e3       	ldi	r27, 0x3F	; 63
     d14:	8d 83       	std	Y+5, r24	; 0x05
     d16:	9e 83       	std	Y+6, r25	; 0x06
     d18:	af 83       	std	Y+7, r26	; 0x07
     d1a:	b8 87       	std	Y+8, r27	; 0x08
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	4a e7       	ldi	r20, 0x7A	; 122
     d22:	55 e4       	ldi	r21, 0x45	; 69
     d24:	6d 81       	ldd	r22, Y+5	; 0x05
     d26:	7e 81       	ldd	r23, Y+6	; 0x06
     d28:	8f 81       	ldd	r24, Y+7	; 0x07
     d2a:	98 85       	ldd	r25, Y+8	; 0x08
     d2c:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     d30:	dc 01       	movw	r26, r24
     d32:	cb 01       	movw	r24, r22
     d34:	8d a3       	std	Y+37, r24	; 0x25
     d36:	9e a3       	std	Y+38, r25	; 0x26
     d38:	af a3       	std	Y+39, r26	; 0x27
     d3a:	b8 a7       	std	Y+40, r27	; 0x28
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	40 e8       	ldi	r20, 0x80	; 128
     d42:	5f e3       	ldi	r21, 0x3F	; 63
     d44:	6d a1       	ldd	r22, Y+37	; 0x25
     d46:	7e a1       	ldd	r23, Y+38	; 0x26
     d48:	8f a1       	ldd	r24, Y+39	; 0x27
     d4a:	98 a5       	ldd	r25, Y+40	; 0x28
     d4c:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     d50:	88 23       	and	r24, r24
     d52:	2c f4       	brge	.+10     	; 0xd5e <LCD_voidSendChar+0x292>
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	9a a7       	std	Y+42, r25	; 0x2a
     d5a:	89 a7       	std	Y+41, r24	; 0x29
     d5c:	3f c0       	rjmp	.+126    	; 0xddc <LCD_voidSendChar+0x310>
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	3f ef       	ldi	r19, 0xFF	; 255
     d62:	4f e7       	ldi	r20, 0x7F	; 127
     d64:	57 e4       	ldi	r21, 0x47	; 71
     d66:	6d a1       	ldd	r22, Y+37	; 0x25
     d68:	7e a1       	ldd	r23, Y+38	; 0x26
     d6a:	8f a1       	ldd	r24, Y+39	; 0x27
     d6c:	98 a5       	ldd	r25, Y+40	; 0x28
     d6e:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     d72:	18 16       	cp	r1, r24
     d74:	4c f5       	brge	.+82     	; 0xdc8 <LCD_voidSendChar+0x2fc>
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	40 e2       	ldi	r20, 0x20	; 32
     d7c:	51 e4       	ldi	r21, 0x41	; 65
     d7e:	6d 81       	ldd	r22, Y+5	; 0x05
     d80:	7e 81       	ldd	r23, Y+6	; 0x06
     d82:	8f 81       	ldd	r24, Y+7	; 0x07
     d84:	98 85       	ldd	r25, Y+8	; 0x08
     d86:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     d8a:	dc 01       	movw	r26, r24
     d8c:	cb 01       	movw	r24, r22
     d8e:	bc 01       	movw	r22, r24
     d90:	cd 01       	movw	r24, r26
     d92:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     d96:	dc 01       	movw	r26, r24
     d98:	cb 01       	movw	r24, r22
     d9a:	9a a7       	std	Y+42, r25	; 0x2a
     d9c:	89 a7       	std	Y+41, r24	; 0x29
     d9e:	0f c0       	rjmp	.+30     	; 0xdbe <LCD_voidSendChar+0x2f2>
     da0:	80 e9       	ldi	r24, 0x90	; 144
     da2:	91 e0       	ldi	r25, 0x01	; 1
     da4:	9c a7       	std	Y+44, r25	; 0x2c
     da6:	8b a7       	std	Y+43, r24	; 0x2b
     da8:	8b a5       	ldd	r24, Y+43	; 0x2b
     daa:	9c a5       	ldd	r25, Y+44	; 0x2c
     dac:	01 97       	sbiw	r24, 0x01	; 1
     dae:	f1 f7       	brne	.-4      	; 0xdac <LCD_voidSendChar+0x2e0>
     db0:	9c a7       	std	Y+44, r25	; 0x2c
     db2:	8b a7       	std	Y+43, r24	; 0x2b
     db4:	89 a5       	ldd	r24, Y+41	; 0x29
     db6:	9a a5       	ldd	r25, Y+42	; 0x2a
     db8:	01 97       	sbiw	r24, 0x01	; 1
     dba:	9a a7       	std	Y+42, r25	; 0x2a
     dbc:	89 a7       	std	Y+41, r24	; 0x29
     dbe:	89 a5       	ldd	r24, Y+41	; 0x29
     dc0:	9a a5       	ldd	r25, Y+42	; 0x2a
     dc2:	89 2b       	or	r24, r25
     dc4:	69 f7       	brne	.-38     	; 0xda0 <LCD_voidSendChar+0x2d4>
     dc6:	14 c0       	rjmp	.+40     	; 0xdf0 <LCD_voidSendChar+0x324>
     dc8:	6d a1       	ldd	r22, Y+37	; 0x25
     dca:	7e a1       	ldd	r23, Y+38	; 0x26
     dcc:	8f a1       	ldd	r24, Y+39	; 0x27
     dce:	98 a5       	ldd	r25, Y+40	; 0x28
     dd0:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     dd4:	dc 01       	movw	r26, r24
     dd6:	cb 01       	movw	r24, r22
     dd8:	9a a7       	std	Y+42, r25	; 0x2a
     dda:	89 a7       	std	Y+41, r24	; 0x29
     ddc:	89 a5       	ldd	r24, Y+41	; 0x29
     dde:	9a a5       	ldd	r25, Y+42	; 0x2a
     de0:	9e a7       	std	Y+46, r25	; 0x2e
     de2:	8d a7       	std	Y+45, r24	; 0x2d
     de4:	8d a5       	ldd	r24, Y+45	; 0x2d
     de6:	9e a5       	ldd	r25, Y+46	; 0x2e
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	f1 f7       	brne	.-4      	; 0xde8 <LCD_voidSendChar+0x31c>
     dec:	9e a7       	std	Y+46, r25	; 0x2e
     dee:	8d a7       	std	Y+45, r24	; 0x2d
     df0:	8b ad       	ldd	r24, Y+59	; 0x3b
     df2:	38 2f       	mov	r19, r24
     df4:	31 70       	andi	r19, 0x01	; 1
     df6:	89 ad       	ldd	r24, Y+57	; 0x39
     df8:	9a ad       	ldd	r25, Y+58	; 0x3a
     dfa:	fc 01       	movw	r30, r24
     dfc:	82 81       	ldd	r24, Z+2	; 0x02
     dfe:	93 81       	ldd	r25, Z+3	; 0x03
     e00:	05 96       	adiw	r24, 0x05	; 5
     e02:	fc 01       	movw	r30, r24
     e04:	20 81       	ld	r18, Z
     e06:	89 ad       	ldd	r24, Y+57	; 0x39
     e08:	9a ad       	ldd	r25, Y+58	; 0x3a
     e0a:	fc 01       	movw	r30, r24
     e0c:	82 81       	ldd	r24, Z+2	; 0x02
     e0e:	93 81       	ldd	r25, Z+3	; 0x03
     e10:	04 96       	adiw	r24, 0x04	; 4
     e12:	fc 01       	movw	r30, r24
     e14:	80 81       	ld	r24, Z
     e16:	43 2f       	mov	r20, r19
     e18:	62 2f       	mov	r22, r18
     e1a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     e1e:	8b ad       	ldd	r24, Y+59	; 0x3b
     e20:	86 95       	lsr	r24
     e22:	38 2f       	mov	r19, r24
     e24:	31 70       	andi	r19, 0x01	; 1
     e26:	89 ad       	ldd	r24, Y+57	; 0x39
     e28:	9a ad       	ldd	r25, Y+58	; 0x3a
     e2a:	fc 01       	movw	r30, r24
     e2c:	82 81       	ldd	r24, Z+2	; 0x02
     e2e:	93 81       	ldd	r25, Z+3	; 0x03
     e30:	07 96       	adiw	r24, 0x07	; 7
     e32:	fc 01       	movw	r30, r24
     e34:	20 81       	ld	r18, Z
     e36:	89 ad       	ldd	r24, Y+57	; 0x39
     e38:	9a ad       	ldd	r25, Y+58	; 0x3a
     e3a:	fc 01       	movw	r30, r24
     e3c:	82 81       	ldd	r24, Z+2	; 0x02
     e3e:	93 81       	ldd	r25, Z+3	; 0x03
     e40:	06 96       	adiw	r24, 0x06	; 6
     e42:	fc 01       	movw	r30, r24
     e44:	80 81       	ld	r24, Z
     e46:	43 2f       	mov	r20, r19
     e48:	62 2f       	mov	r22, r18
     e4a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     e4e:	8b ad       	ldd	r24, Y+59	; 0x3b
     e50:	86 95       	lsr	r24
     e52:	86 95       	lsr	r24
     e54:	38 2f       	mov	r19, r24
     e56:	31 70       	andi	r19, 0x01	; 1
     e58:	89 ad       	ldd	r24, Y+57	; 0x39
     e5a:	9a ad       	ldd	r25, Y+58	; 0x3a
     e5c:	fc 01       	movw	r30, r24
     e5e:	82 81       	ldd	r24, Z+2	; 0x02
     e60:	93 81       	ldd	r25, Z+3	; 0x03
     e62:	09 96       	adiw	r24, 0x09	; 9
     e64:	fc 01       	movw	r30, r24
     e66:	20 81       	ld	r18, Z
     e68:	89 ad       	ldd	r24, Y+57	; 0x39
     e6a:	9a ad       	ldd	r25, Y+58	; 0x3a
     e6c:	fc 01       	movw	r30, r24
     e6e:	82 81       	ldd	r24, Z+2	; 0x02
     e70:	93 81       	ldd	r25, Z+3	; 0x03
     e72:	08 96       	adiw	r24, 0x08	; 8
     e74:	fc 01       	movw	r30, r24
     e76:	80 81       	ld	r24, Z
     e78:	43 2f       	mov	r20, r19
     e7a:	62 2f       	mov	r22, r18
     e7c:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     e80:	8b ad       	ldd	r24, Y+59	; 0x3b
     e82:	86 95       	lsr	r24
     e84:	86 95       	lsr	r24
     e86:	86 95       	lsr	r24
     e88:	38 2f       	mov	r19, r24
     e8a:	31 70       	andi	r19, 0x01	; 1
     e8c:	89 ad       	ldd	r24, Y+57	; 0x39
     e8e:	9a ad       	ldd	r25, Y+58	; 0x3a
     e90:	fc 01       	movw	r30, r24
     e92:	82 81       	ldd	r24, Z+2	; 0x02
     e94:	93 81       	ldd	r25, Z+3	; 0x03
     e96:	0b 96       	adiw	r24, 0x0b	; 11
     e98:	fc 01       	movw	r30, r24
     e9a:	20 81       	ld	r18, Z
     e9c:	89 ad       	ldd	r24, Y+57	; 0x39
     e9e:	9a ad       	ldd	r25, Y+58	; 0x3a
     ea0:	fc 01       	movw	r30, r24
     ea2:	82 81       	ldd	r24, Z+2	; 0x02
     ea4:	93 81       	ldd	r25, Z+3	; 0x03
     ea6:	0a 96       	adiw	r24, 0x0a	; 10
     ea8:	fc 01       	movw	r30, r24
     eaa:	80 81       	ld	r24, Z
     eac:	43 2f       	mov	r20, r19
     eae:	62 2f       	mov	r22, r18
     eb0:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     eb4:	89 ad       	ldd	r24, Y+57	; 0x39
     eb6:	9a ad       	ldd	r25, Y+58	; 0x3a
     eb8:	fc 01       	movw	r30, r24
     eba:	82 81       	ldd	r24, Z+2	; 0x02
     ebc:	93 81       	ldd	r25, Z+3	; 0x03
     ebe:	03 96       	adiw	r24, 0x03	; 3
     ec0:	fc 01       	movw	r30, r24
     ec2:	20 81       	ld	r18, Z
     ec4:	89 ad       	ldd	r24, Y+57	; 0x39
     ec6:	9a ad       	ldd	r25, Y+58	; 0x3a
     ec8:	fc 01       	movw	r30, r24
     eca:	82 81       	ldd	r24, Z+2	; 0x02
     ecc:	93 81       	ldd	r25, Z+3	; 0x03
     ece:	02 96       	adiw	r24, 0x02	; 2
     ed0:	fc 01       	movw	r30, r24
     ed2:	80 81       	ld	r24, Z
     ed4:	41 e0       	ldi	r20, 0x01	; 1
     ed6:	62 2f       	mov	r22, r18
     ed8:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     edc:	89 ad       	ldd	r24, Y+57	; 0x39
     ede:	9a ad       	ldd	r25, Y+58	; 0x3a
     ee0:	fc 01       	movw	r30, r24
     ee2:	82 81       	ldd	r24, Z+2	; 0x02
     ee4:	93 81       	ldd	r25, Z+3	; 0x03
     ee6:	01 96       	adiw	r24, 0x01	; 1
     ee8:	fc 01       	movw	r30, r24
     eea:	20 81       	ld	r18, Z
     eec:	89 ad       	ldd	r24, Y+57	; 0x39
     eee:	9a ad       	ldd	r25, Y+58	; 0x3a
     ef0:	fc 01       	movw	r30, r24
     ef2:	82 81       	ldd	r24, Z+2	; 0x02
     ef4:	93 81       	ldd	r25, Z+3	; 0x03
     ef6:	fc 01       	movw	r30, r24
     ef8:	80 81       	ld	r24, Z
     efa:	41 e0       	ldi	r20, 0x01	; 1
     efc:	62 2f       	mov	r22, r18
     efe:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	a0 e8       	ldi	r26, 0x80	; 128
     f08:	bf e3       	ldi	r27, 0x3F	; 63
     f0a:	89 87       	std	Y+9, r24	; 0x09
     f0c:	9a 87       	std	Y+10, r25	; 0x0a
     f0e:	ab 87       	std	Y+11, r26	; 0x0b
     f10:	bc 87       	std	Y+12, r27	; 0x0c
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	4a e7       	ldi	r20, 0x7A	; 122
     f18:	55 e4       	ldi	r21, 0x45	; 69
     f1a:	69 85       	ldd	r22, Y+9	; 0x09
     f1c:	7a 85       	ldd	r23, Y+10	; 0x0a
     f1e:	8b 85       	ldd	r24, Y+11	; 0x0b
     f20:	9c 85       	ldd	r25, Y+12	; 0x0c
     f22:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     f26:	dc 01       	movw	r26, r24
     f28:	cb 01       	movw	r24, r22
     f2a:	8b 8f       	std	Y+27, r24	; 0x1b
     f2c:	9c 8f       	std	Y+28, r25	; 0x1c
     f2e:	ad 8f       	std	Y+29, r26	; 0x1d
     f30:	be 8f       	std	Y+30, r27	; 0x1e
     f32:	20 e0       	ldi	r18, 0x00	; 0
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	40 e8       	ldi	r20, 0x80	; 128
     f38:	5f e3       	ldi	r21, 0x3F	; 63
     f3a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f3c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f3e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f40:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f42:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
     f46:	88 23       	and	r24, r24
     f48:	2c f4       	brge	.+10     	; 0xf54 <LCD_voidSendChar+0x488>
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	98 a3       	std	Y+32, r25	; 0x20
     f50:	8f 8f       	std	Y+31, r24	; 0x1f
     f52:	3f c0       	rjmp	.+126    	; 0xfd2 <LCD_voidSendChar+0x506>
     f54:	20 e0       	ldi	r18, 0x00	; 0
     f56:	3f ef       	ldi	r19, 0xFF	; 255
     f58:	4f e7       	ldi	r20, 0x7F	; 127
     f5a:	57 e4       	ldi	r21, 0x47	; 71
     f5c:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f5e:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f60:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f62:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f64:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
     f68:	18 16       	cp	r1, r24
     f6a:	4c f5       	brge	.+82     	; 0xfbe <LCD_voidSendChar+0x4f2>
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	40 e2       	ldi	r20, 0x20	; 32
     f72:	51 e4       	ldi	r21, 0x41	; 65
     f74:	69 85       	ldd	r22, Y+9	; 0x09
     f76:	7a 85       	ldd	r23, Y+10	; 0x0a
     f78:	8b 85       	ldd	r24, Y+11	; 0x0b
     f7a:	9c 85       	ldd	r25, Y+12	; 0x0c
     f7c:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
     f80:	dc 01       	movw	r26, r24
     f82:	cb 01       	movw	r24, r22
     f84:	bc 01       	movw	r22, r24
     f86:	cd 01       	movw	r24, r26
     f88:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	98 a3       	std	Y+32, r25	; 0x20
     f92:	8f 8f       	std	Y+31, r24	; 0x1f
     f94:	0f c0       	rjmp	.+30     	; 0xfb4 <LCD_voidSendChar+0x4e8>
     f96:	80 e9       	ldi	r24, 0x90	; 144
     f98:	91 e0       	ldi	r25, 0x01	; 1
     f9a:	9a a3       	std	Y+34, r25	; 0x22
     f9c:	89 a3       	std	Y+33, r24	; 0x21
     f9e:	89 a1       	ldd	r24, Y+33	; 0x21
     fa0:	9a a1       	ldd	r25, Y+34	; 0x22
     fa2:	01 97       	sbiw	r24, 0x01	; 1
     fa4:	f1 f7       	brne	.-4      	; 0xfa2 <LCD_voidSendChar+0x4d6>
     fa6:	9a a3       	std	Y+34, r25	; 0x22
     fa8:	89 a3       	std	Y+33, r24	; 0x21
     faa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     fac:	98 a1       	ldd	r25, Y+32	; 0x20
     fae:	01 97       	sbiw	r24, 0x01	; 1
     fb0:	98 a3       	std	Y+32, r25	; 0x20
     fb2:	8f 8f       	std	Y+31, r24	; 0x1f
     fb4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     fb6:	98 a1       	ldd	r25, Y+32	; 0x20
     fb8:	89 2b       	or	r24, r25
     fba:	69 f7       	brne	.-38     	; 0xf96 <LCD_voidSendChar+0x4ca>
     fbc:	14 c0       	rjmp	.+40     	; 0xfe6 <LCD_voidSendChar+0x51a>
     fbe:	6b 8d       	ldd	r22, Y+27	; 0x1b
     fc0:	7c 8d       	ldd	r23, Y+28	; 0x1c
     fc2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fc4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     fc6:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
     fca:	dc 01       	movw	r26, r24
     fcc:	cb 01       	movw	r24, r22
     fce:	98 a3       	std	Y+32, r25	; 0x20
     fd0:	8f 8f       	std	Y+31, r24	; 0x1f
     fd2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     fd4:	98 a1       	ldd	r25, Y+32	; 0x20
     fd6:	9c a3       	std	Y+36, r25	; 0x24
     fd8:	8b a3       	std	Y+35, r24	; 0x23
     fda:	8b a1       	ldd	r24, Y+35	; 0x23
     fdc:	9c a1       	ldd	r25, Y+36	; 0x24
     fde:	01 97       	sbiw	r24, 0x01	; 1
     fe0:	f1 f7       	brne	.-4      	; 0xfde <LCD_voidSendChar+0x512>
     fe2:	9c a3       	std	Y+36, r25	; 0x24
     fe4:	8b a3       	std	Y+35, r24	; 0x23
     fe6:	89 ad       	ldd	r24, Y+57	; 0x39
     fe8:	9a ad       	ldd	r25, Y+58	; 0x3a
     fea:	fc 01       	movw	r30, r24
     fec:	82 81       	ldd	r24, Z+2	; 0x02
     fee:	93 81       	ldd	r25, Z+3	; 0x03
     ff0:	01 96       	adiw	r24, 0x01	; 1
     ff2:	fc 01       	movw	r30, r24
     ff4:	20 81       	ld	r18, Z
     ff6:	89 ad       	ldd	r24, Y+57	; 0x39
     ff8:	9a ad       	ldd	r25, Y+58	; 0x3a
     ffa:	fc 01       	movw	r30, r24
     ffc:	82 81       	ldd	r24, Z+2	; 0x02
     ffe:	93 81       	ldd	r25, Z+3	; 0x03
    1000:	fc 01       	movw	r30, r24
    1002:	80 81       	ld	r24, Z
    1004:	40 e0       	ldi	r20, 0x00	; 0
    1006:	62 2f       	mov	r22, r18
    1008:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	a0 e8       	ldi	r26, 0x80	; 128
    1012:	bf e3       	ldi	r27, 0x3F	; 63
    1014:	8d 87       	std	Y+13, r24	; 0x0d
    1016:	9e 87       	std	Y+14, r25	; 0x0e
    1018:	af 87       	std	Y+15, r26	; 0x0f
    101a:	b8 8b       	std	Y+16, r27	; 0x10
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	4a e7       	ldi	r20, 0x7A	; 122
    1022:	55 e4       	ldi	r21, 0x45	; 69
    1024:	6d 85       	ldd	r22, Y+13	; 0x0d
    1026:	7e 85       	ldd	r23, Y+14	; 0x0e
    1028:	8f 85       	ldd	r24, Y+15	; 0x0f
    102a:	98 89       	ldd	r25, Y+16	; 0x10
    102c:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    1030:	dc 01       	movw	r26, r24
    1032:	cb 01       	movw	r24, r22
    1034:	89 8b       	std	Y+17, r24	; 0x11
    1036:	9a 8b       	std	Y+18, r25	; 0x12
    1038:	ab 8b       	std	Y+19, r26	; 0x13
    103a:	bc 8b       	std	Y+20, r27	; 0x14
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e8       	ldi	r20, 0x80	; 128
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	69 89       	ldd	r22, Y+17	; 0x11
    1046:	7a 89       	ldd	r23, Y+18	; 0x12
    1048:	8b 89       	ldd	r24, Y+19	; 0x13
    104a:	9c 89       	ldd	r25, Y+20	; 0x14
    104c:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
    1050:	88 23       	and	r24, r24
    1052:	2c f4       	brge	.+10     	; 0x105e <LCD_voidSendChar+0x592>
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	9e 8b       	std	Y+22, r25	; 0x16
    105a:	8d 8b       	std	Y+21, r24	; 0x15
    105c:	3f c0       	rjmp	.+126    	; 0x10dc <LCD_voidSendChar+0x610>
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	3f ef       	ldi	r19, 0xFF	; 255
    1062:	4f e7       	ldi	r20, 0x7F	; 127
    1064:	57 e4       	ldi	r21, 0x47	; 71
    1066:	69 89       	ldd	r22, Y+17	; 0x11
    1068:	7a 89       	ldd	r23, Y+18	; 0x12
    106a:	8b 89       	ldd	r24, Y+19	; 0x13
    106c:	9c 89       	ldd	r25, Y+20	; 0x14
    106e:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
    1072:	18 16       	cp	r1, r24
    1074:	4c f5       	brge	.+82     	; 0x10c8 <LCD_voidSendChar+0x5fc>
    1076:	20 e0       	ldi	r18, 0x00	; 0
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	40 e2       	ldi	r20, 0x20	; 32
    107c:	51 e4       	ldi	r21, 0x41	; 65
    107e:	6d 85       	ldd	r22, Y+13	; 0x0d
    1080:	7e 85       	ldd	r23, Y+14	; 0x0e
    1082:	8f 85       	ldd	r24, Y+15	; 0x0f
    1084:	98 89       	ldd	r25, Y+16	; 0x10
    1086:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    108a:	dc 01       	movw	r26, r24
    108c:	cb 01       	movw	r24, r22
    108e:	bc 01       	movw	r22, r24
    1090:	cd 01       	movw	r24, r26
    1092:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    1096:	dc 01       	movw	r26, r24
    1098:	cb 01       	movw	r24, r22
    109a:	9e 8b       	std	Y+22, r25	; 0x16
    109c:	8d 8b       	std	Y+21, r24	; 0x15
    109e:	0f c0       	rjmp	.+30     	; 0x10be <LCD_voidSendChar+0x5f2>
    10a0:	80 e9       	ldi	r24, 0x90	; 144
    10a2:	91 e0       	ldi	r25, 0x01	; 1
    10a4:	98 8f       	std	Y+24, r25	; 0x18
    10a6:	8f 8b       	std	Y+23, r24	; 0x17
    10a8:	8f 89       	ldd	r24, Y+23	; 0x17
    10aa:	98 8d       	ldd	r25, Y+24	; 0x18
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	f1 f7       	brne	.-4      	; 0x10ac <LCD_voidSendChar+0x5e0>
    10b0:	98 8f       	std	Y+24, r25	; 0x18
    10b2:	8f 8b       	std	Y+23, r24	; 0x17
    10b4:	8d 89       	ldd	r24, Y+21	; 0x15
    10b6:	9e 89       	ldd	r25, Y+22	; 0x16
    10b8:	01 97       	sbiw	r24, 0x01	; 1
    10ba:	9e 8b       	std	Y+22, r25	; 0x16
    10bc:	8d 8b       	std	Y+21, r24	; 0x15
    10be:	8d 89       	ldd	r24, Y+21	; 0x15
    10c0:	9e 89       	ldd	r25, Y+22	; 0x16
    10c2:	89 2b       	or	r24, r25
    10c4:	69 f7       	brne	.-38     	; 0x10a0 <LCD_voidSendChar+0x5d4>
    10c6:	14 c0       	rjmp	.+40     	; 0x10f0 <LCD_voidSendChar+0x624>
    10c8:	69 89       	ldd	r22, Y+17	; 0x11
    10ca:	7a 89       	ldd	r23, Y+18	; 0x12
    10cc:	8b 89       	ldd	r24, Y+19	; 0x13
    10ce:	9c 89       	ldd	r25, Y+20	; 0x14
    10d0:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    10d4:	dc 01       	movw	r26, r24
    10d6:	cb 01       	movw	r24, r22
    10d8:	9e 8b       	std	Y+22, r25	; 0x16
    10da:	8d 8b       	std	Y+21, r24	; 0x15
    10dc:	8d 89       	ldd	r24, Y+21	; 0x15
    10de:	9e 89       	ldd	r25, Y+22	; 0x16
    10e0:	9a 8f       	std	Y+26, r25	; 0x1a
    10e2:	89 8f       	std	Y+25, r24	; 0x19
    10e4:	89 8d       	ldd	r24, Y+25	; 0x19
    10e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    10e8:	01 97       	sbiw	r24, 0x01	; 1
    10ea:	f1 f7       	brne	.-4      	; 0x10e8 <LCD_voidSendChar+0x61c>
    10ec:	9a 8f       	std	Y+26, r25	; 0x1a
    10ee:	89 8f       	std	Y+25, r24	; 0x19
    10f0:	00 00       	nop
    10f2:	eb 96       	adiw	r28, 0x3b	; 59
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	df 91       	pop	r29
    1100:	cf 91       	pop	r28
    1102:	08 95       	ret

00001104 <LCD_voidSendString>:
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	00 d0       	rcall	.+0      	; 0x110a <LCD_voidSendString+0x6>
    110a:	00 d0       	rcall	.+0      	; 0x110c <LCD_voidSendString+0x8>
    110c:	1f 92       	push	r1
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	9b 83       	std	Y+3, r25	; 0x03
    1114:	8a 83       	std	Y+2, r24	; 0x02
    1116:	7d 83       	std	Y+5, r23	; 0x05
    1118:	6c 83       	std	Y+4, r22	; 0x04
    111a:	19 82       	std	Y+1, r1	; 0x01
    111c:	11 c0       	rjmp	.+34     	; 0x1140 <LCD_voidSendString+0x3c>
    111e:	89 81       	ldd	r24, Y+1	; 0x01
    1120:	88 2f       	mov	r24, r24
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	2c 81       	ldd	r18, Y+4	; 0x04
    1126:	3d 81       	ldd	r19, Y+5	; 0x05
    1128:	82 0f       	add	r24, r18
    112a:	93 1f       	adc	r25, r19
    112c:	fc 01       	movw	r30, r24
    112e:	20 81       	ld	r18, Z
    1130:	8a 81       	ldd	r24, Y+2	; 0x02
    1132:	9b 81       	ldd	r25, Y+3	; 0x03
    1134:	62 2f       	mov	r22, r18
    1136:	0e 94 66 05 	call	0xacc	; 0xacc <LCD_voidSendChar>
    113a:	89 81       	ldd	r24, Y+1	; 0x01
    113c:	8f 5f       	subi	r24, 0xFF	; 255
    113e:	89 83       	std	Y+1, r24	; 0x01
    1140:	89 81       	ldd	r24, Y+1	; 0x01
    1142:	88 2f       	mov	r24, r24
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	2c 81       	ldd	r18, Y+4	; 0x04
    1148:	3d 81       	ldd	r19, Y+5	; 0x05
    114a:	82 0f       	add	r24, r18
    114c:	93 1f       	adc	r25, r19
    114e:	fc 01       	movw	r30, r24
    1150:	80 81       	ld	r24, Z
    1152:	88 23       	and	r24, r24
    1154:	21 f7       	brne	.-56     	; 0x111e <LCD_voidSendString+0x1a>
    1156:	00 00       	nop
    1158:	0f 90       	pop	r0
    115a:	0f 90       	pop	r0
    115c:	0f 90       	pop	r0
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	08 95       	ret

00001168 <LCD_voidSetCursorType>:
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	00 d0       	rcall	.+0      	; 0x116e <LCD_voidSetCursorType+0x6>
    116e:	1f 92       	push	r1
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	9a 83       	std	Y+2, r25	; 0x02
    1176:	89 83       	std	Y+1, r24	; 0x01
    1178:	6b 83       	std	Y+3, r22	; 0x03
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	9a 81       	ldd	r25, Y+2	; 0x02
    117e:	6b 81       	ldd	r22, Y+3	; 0x03
    1180:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
    1184:	00 00       	nop
    1186:	0f 90       	pop	r0
    1188:	0f 90       	pop	r0
    118a:	0f 90       	pop	r0
    118c:	df 91       	pop	r29
    118e:	cf 91       	pop	r28
    1190:	08 95       	ret

00001192 <LCD_voidSetDisplayState>:
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	00 d0       	rcall	.+0      	; 0x1198 <LCD_voidSetDisplayState+0x6>
    1198:	1f 92       	push	r1
    119a:	cd b7       	in	r28, 0x3d	; 61
    119c:	de b7       	in	r29, 0x3e	; 62
    119e:	9a 83       	std	Y+2, r25	; 0x02
    11a0:	89 83       	std	Y+1, r24	; 0x01
    11a2:	6b 83       	std	Y+3, r22	; 0x03
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	88 2f       	mov	r24, r24
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	89 2b       	or	r24, r25
    11ac:	31 f4       	brne	.+12     	; 0x11ba <LCD_voidSetDisplayState+0x28>
    11ae:	89 81       	ldd	r24, Y+1	; 0x01
    11b0:	9a 81       	ldd	r25, Y+2	; 0x02
    11b2:	68 e0       	ldi	r22, 0x08	; 8
    11b4:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
    11b8:	05 c0       	rjmp	.+10     	; 0x11c4 <LCD_voidSetDisplayState+0x32>
    11ba:	89 81       	ldd	r24, Y+1	; 0x01
    11bc:	9a 81       	ldd	r25, Y+2	; 0x02
    11be:	6c e0       	ldi	r22, 0x0C	; 12
    11c0:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
    11c4:	00 00       	nop
    11c6:	0f 90       	pop	r0
    11c8:	0f 90       	pop	r0
    11ca:	0f 90       	pop	r0
    11cc:	df 91       	pop	r29
    11ce:	cf 91       	pop	r28
    11d0:	08 95       	ret

000011d2 <LCD_voidGotoXY>:
    11d2:	cf 93       	push	r28
    11d4:	df 93       	push	r29
    11d6:	00 d0       	rcall	.+0      	; 0x11d8 <LCD_voidGotoXY+0x6>
    11d8:	00 d0       	rcall	.+0      	; 0x11da <LCD_voidGotoXY+0x8>
    11da:	1f 92       	push	r1
    11dc:	cd b7       	in	r28, 0x3d	; 61
    11de:	de b7       	in	r29, 0x3e	; 62
    11e0:	9b 83       	std	Y+3, r25	; 0x03
    11e2:	8a 83       	std	Y+2, r24	; 0x02
    11e4:	6c 83       	std	Y+4, r22	; 0x04
    11e6:	4d 83       	std	Y+5, r20	; 0x05
    11e8:	19 82       	std	Y+1, r1	; 0x01
    11ea:	8a 81       	ldd	r24, Y+2	; 0x02
    11ec:	9b 81       	ldd	r25, Y+3	; 0x03
    11ee:	fc 01       	movw	r30, r24
    11f0:	90 81       	ld	r25, Z
    11f2:	8d 81       	ldd	r24, Y+5	; 0x05
    11f4:	89 17       	cp	r24, r25
    11f6:	c0 f4       	brcc	.+48     	; 0x1228 <LCD_voidGotoXY+0x56>
    11f8:	8a 81       	ldd	r24, Y+2	; 0x02
    11fa:	9b 81       	ldd	r25, Y+3	; 0x03
    11fc:	fc 01       	movw	r30, r24
    11fe:	91 81       	ldd	r25, Z+1	; 0x01
    1200:	8c 81       	ldd	r24, Y+4	; 0x04
    1202:	89 17       	cp	r24, r25
    1204:	88 f4       	brcc	.+34     	; 0x1228 <LCD_voidGotoXY+0x56>
    1206:	8d 81       	ldd	r24, Y+5	; 0x05
    1208:	98 2f       	mov	r25, r24
    120a:	92 95       	swap	r25
    120c:	99 0f       	add	r25, r25
    120e:	99 0f       	add	r25, r25
    1210:	90 7c       	andi	r25, 0xC0	; 192
    1212:	8c 81       	ldd	r24, Y+4	; 0x04
    1214:	89 0f       	add	r24, r25
    1216:	89 83       	std	Y+1, r24	; 0x01
    1218:	89 81       	ldd	r24, Y+1	; 0x01
    121a:	80 68       	ori	r24, 0x80	; 128
    121c:	89 83       	std	Y+1, r24	; 0x01
    121e:	8a 81       	ldd	r24, Y+2	; 0x02
    1220:	9b 81       	ldd	r25, Y+3	; 0x03
    1222:	69 81       	ldd	r22, Y+1	; 0x01
    1224:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
    1228:	00 00       	nop
    122a:	0f 90       	pop	r0
    122c:	0f 90       	pop	r0
    122e:	0f 90       	pop	r0
    1230:	0f 90       	pop	r0
    1232:	0f 90       	pop	r0
    1234:	df 91       	pop	r29
    1236:	cf 91       	pop	r28
    1238:	08 95       	ret

0000123a <LCD_voidClear>:
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	cd b7       	in	r28, 0x3d	; 61
    1240:	de b7       	in	r29, 0x3e	; 62
    1242:	60 97       	sbiw	r28, 0x10	; 16
    1244:	0f b6       	in	r0, 0x3f	; 63
    1246:	f8 94       	cli
    1248:	de bf       	out	0x3e, r29	; 62
    124a:	0f be       	out	0x3f, r0	; 63
    124c:	cd bf       	out	0x3d, r28	; 61
    124e:	98 8b       	std	Y+16, r25	; 0x10
    1250:	8f 87       	std	Y+15, r24	; 0x0f
    1252:	8f 85       	ldd	r24, Y+15	; 0x0f
    1254:	98 89       	ldd	r25, Y+16	; 0x10
    1256:	61 e0       	ldi	r22, 0x01	; 1
    1258:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
    125c:	80 e0       	ldi	r24, 0x00	; 0
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	a0 e8       	ldi	r26, 0x80	; 128
    1262:	bf e3       	ldi	r27, 0x3F	; 63
    1264:	89 83       	std	Y+1, r24	; 0x01
    1266:	9a 83       	std	Y+2, r25	; 0x02
    1268:	ab 83       	std	Y+3, r26	; 0x03
    126a:	bc 83       	std	Y+4, r27	; 0x04
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	4a e7       	ldi	r20, 0x7A	; 122
    1272:	55 e4       	ldi	r21, 0x45	; 69
    1274:	69 81       	ldd	r22, Y+1	; 0x01
    1276:	7a 81       	ldd	r23, Y+2	; 0x02
    1278:	8b 81       	ldd	r24, Y+3	; 0x03
    127a:	9c 81       	ldd	r25, Y+4	; 0x04
    127c:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    1280:	dc 01       	movw	r26, r24
    1282:	cb 01       	movw	r24, r22
    1284:	8d 83       	std	Y+5, r24	; 0x05
    1286:	9e 83       	std	Y+6, r25	; 0x06
    1288:	af 83       	std	Y+7, r26	; 0x07
    128a:	b8 87       	std	Y+8, r27	; 0x08
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	40 e8       	ldi	r20, 0x80	; 128
    1292:	5f e3       	ldi	r21, 0x3F	; 63
    1294:	6d 81       	ldd	r22, Y+5	; 0x05
    1296:	7e 81       	ldd	r23, Y+6	; 0x06
    1298:	8f 81       	ldd	r24, Y+7	; 0x07
    129a:	98 85       	ldd	r25, Y+8	; 0x08
    129c:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
    12a0:	88 23       	and	r24, r24
    12a2:	2c f4       	brge	.+10     	; 0x12ae <LCD_voidClear+0x74>
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	9a 87       	std	Y+10, r25	; 0x0a
    12aa:	89 87       	std	Y+9, r24	; 0x09
    12ac:	3f c0       	rjmp	.+126    	; 0x132c <LCD_voidClear+0xf2>
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	3f ef       	ldi	r19, 0xFF	; 255
    12b2:	4f e7       	ldi	r20, 0x7F	; 127
    12b4:	57 e4       	ldi	r21, 0x47	; 71
    12b6:	6d 81       	ldd	r22, Y+5	; 0x05
    12b8:	7e 81       	ldd	r23, Y+6	; 0x06
    12ba:	8f 81       	ldd	r24, Y+7	; 0x07
    12bc:	98 85       	ldd	r25, Y+8	; 0x08
    12be:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
    12c2:	18 16       	cp	r1, r24
    12c4:	4c f5       	brge	.+82     	; 0x1318 <LCD_voidClear+0xde>
    12c6:	20 e0       	ldi	r18, 0x00	; 0
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	40 e2       	ldi	r20, 0x20	; 32
    12cc:	51 e4       	ldi	r21, 0x41	; 65
    12ce:	69 81       	ldd	r22, Y+1	; 0x01
    12d0:	7a 81       	ldd	r23, Y+2	; 0x02
    12d2:	8b 81       	ldd	r24, Y+3	; 0x03
    12d4:	9c 81       	ldd	r25, Y+4	; 0x04
    12d6:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    12da:	dc 01       	movw	r26, r24
    12dc:	cb 01       	movw	r24, r22
    12de:	bc 01       	movw	r22, r24
    12e0:	cd 01       	movw	r24, r26
    12e2:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    12e6:	dc 01       	movw	r26, r24
    12e8:	cb 01       	movw	r24, r22
    12ea:	9a 87       	std	Y+10, r25	; 0x0a
    12ec:	89 87       	std	Y+9, r24	; 0x09
    12ee:	0f c0       	rjmp	.+30     	; 0x130e <LCD_voidClear+0xd4>
    12f0:	80 e9       	ldi	r24, 0x90	; 144
    12f2:	91 e0       	ldi	r25, 0x01	; 1
    12f4:	9c 87       	std	Y+12, r25	; 0x0c
    12f6:	8b 87       	std	Y+11, r24	; 0x0b
    12f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    12fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	f1 f7       	brne	.-4      	; 0x12fc <LCD_voidClear+0xc2>
    1300:	9c 87       	std	Y+12, r25	; 0x0c
    1302:	8b 87       	std	Y+11, r24	; 0x0b
    1304:	89 85       	ldd	r24, Y+9	; 0x09
    1306:	9a 85       	ldd	r25, Y+10	; 0x0a
    1308:	01 97       	sbiw	r24, 0x01	; 1
    130a:	9a 87       	std	Y+10, r25	; 0x0a
    130c:	89 87       	std	Y+9, r24	; 0x09
    130e:	89 85       	ldd	r24, Y+9	; 0x09
    1310:	9a 85       	ldd	r25, Y+10	; 0x0a
    1312:	89 2b       	or	r24, r25
    1314:	69 f7       	brne	.-38     	; 0x12f0 <LCD_voidClear+0xb6>
    1316:	14 c0       	rjmp	.+40     	; 0x1340 <LCD_voidClear+0x106>
    1318:	6d 81       	ldd	r22, Y+5	; 0x05
    131a:	7e 81       	ldd	r23, Y+6	; 0x06
    131c:	8f 81       	ldd	r24, Y+7	; 0x07
    131e:	98 85       	ldd	r25, Y+8	; 0x08
    1320:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    1324:	dc 01       	movw	r26, r24
    1326:	cb 01       	movw	r24, r22
    1328:	9a 87       	std	Y+10, r25	; 0x0a
    132a:	89 87       	std	Y+9, r24	; 0x09
    132c:	89 85       	ldd	r24, Y+9	; 0x09
    132e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1330:	9e 87       	std	Y+14, r25	; 0x0e
    1332:	8d 87       	std	Y+13, r24	; 0x0d
    1334:	8d 85       	ldd	r24, Y+13	; 0x0d
    1336:	9e 85       	ldd	r25, Y+14	; 0x0e
    1338:	01 97       	sbiw	r24, 0x01	; 1
    133a:	f1 f7       	brne	.-4      	; 0x1338 <LCD_voidClear+0xfe>
    133c:	9e 87       	std	Y+14, r25	; 0x0e
    133e:	8d 87       	std	Y+13, r24	; 0x0d
    1340:	8f 85       	ldd	r24, Y+15	; 0x0f
    1342:	98 89       	ldd	r25, Y+16	; 0x10
    1344:	60 e8       	ldi	r22, 0x80	; 128
    1346:	0e 94 af 09 	call	0x135e	; 0x135e <LCD_voidWriteCmd>
    134a:	00 00       	nop
    134c:	60 96       	adiw	r28, 0x10	; 16
    134e:	0f b6       	in	r0, 0x3f	; 63
    1350:	f8 94       	cli
    1352:	de bf       	out	0x3e, r29	; 62
    1354:	0f be       	out	0x3f, r0	; 63
    1356:	cd bf       	out	0x3d, r28	; 61
    1358:	df 91       	pop	r29
    135a:	cf 91       	pop	r28
    135c:	08 95       	ret

0000135e <LCD_voidWriteCmd>:
/************************************ Static FCNs**********************************/
void LCD_voidWriteCmd(LCD_Config* x , u8 copy_u8Cmd)
{
    135e:	cf 93       	push	r28
    1360:	df 93       	push	r29
    1362:	cd b7       	in	r28, 0x3d	; 61
    1364:	de b7       	in	r29, 0x3e	; 62
    1366:	eb 97       	sbiw	r28, 0x3b	; 59
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	9a af       	std	Y+58, r25	; 0x3a
    1374:	89 af       	std	Y+57, r24	; 0x39
    1376:	6b af       	std	Y+59, r22	; 0x3b
		 

#elif LCD_Mode == _4_WIRE_MODE
		// Add CMD in Data Line

        GPIO_voidSetPinValue(_4_D4_PORT_PIN(x),GET_BIT(copy_u8Cmd,4));  //DB4
    1378:	8b ad       	ldd	r24, Y+59	; 0x3b
    137a:	82 95       	swap	r24
    137c:	8f 70       	andi	r24, 0x0F	; 15
    137e:	38 2f       	mov	r19, r24
    1380:	31 70       	andi	r19, 0x01	; 1
    1382:	89 ad       	ldd	r24, Y+57	; 0x39
    1384:	9a ad       	ldd	r25, Y+58	; 0x3a
    1386:	fc 01       	movw	r30, r24
    1388:	82 81       	ldd	r24, Z+2	; 0x02
    138a:	93 81       	ldd	r25, Z+3	; 0x03
    138c:	05 96       	adiw	r24, 0x05	; 5
    138e:	fc 01       	movw	r30, r24
    1390:	20 81       	ld	r18, Z
    1392:	89 ad       	ldd	r24, Y+57	; 0x39
    1394:	9a ad       	ldd	r25, Y+58	; 0x3a
    1396:	fc 01       	movw	r30, r24
    1398:	82 81       	ldd	r24, Z+2	; 0x02
    139a:	93 81       	ldd	r25, Z+3	; 0x03
    139c:	04 96       	adiw	r24, 0x04	; 4
    139e:	fc 01       	movw	r30, r24
    13a0:	80 81       	ld	r24, Z
    13a2:	43 2f       	mov	r20, r19
    13a4:	62 2f       	mov	r22, r18
    13a6:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D5_PORT_PIN(x),GET_BIT(copy_u8Cmd,5));  //DB5
    13aa:	8b ad       	ldd	r24, Y+59	; 0x3b
    13ac:	82 95       	swap	r24
    13ae:	86 95       	lsr	r24
    13b0:	87 70       	andi	r24, 0x07	; 7
    13b2:	38 2f       	mov	r19, r24
    13b4:	31 70       	andi	r19, 0x01	; 1
    13b6:	89 ad       	ldd	r24, Y+57	; 0x39
    13b8:	9a ad       	ldd	r25, Y+58	; 0x3a
    13ba:	fc 01       	movw	r30, r24
    13bc:	82 81       	ldd	r24, Z+2	; 0x02
    13be:	93 81       	ldd	r25, Z+3	; 0x03
    13c0:	07 96       	adiw	r24, 0x07	; 7
    13c2:	fc 01       	movw	r30, r24
    13c4:	20 81       	ld	r18, Z
    13c6:	89 ad       	ldd	r24, Y+57	; 0x39
    13c8:	9a ad       	ldd	r25, Y+58	; 0x3a
    13ca:	fc 01       	movw	r30, r24
    13cc:	82 81       	ldd	r24, Z+2	; 0x02
    13ce:	93 81       	ldd	r25, Z+3	; 0x03
    13d0:	06 96       	adiw	r24, 0x06	; 6
    13d2:	fc 01       	movw	r30, r24
    13d4:	80 81       	ld	r24, Z
    13d6:	43 2f       	mov	r20, r19
    13d8:	62 2f       	mov	r22, r18
    13da:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D6_PORT_PIN(x),GET_BIT(copy_u8Cmd,6));  //DB6
    13de:	8b ad       	ldd	r24, Y+59	; 0x3b
    13e0:	82 95       	swap	r24
    13e2:	86 95       	lsr	r24
    13e4:	86 95       	lsr	r24
    13e6:	83 70       	andi	r24, 0x03	; 3
    13e8:	38 2f       	mov	r19, r24
    13ea:	31 70       	andi	r19, 0x01	; 1
    13ec:	89 ad       	ldd	r24, Y+57	; 0x39
    13ee:	9a ad       	ldd	r25, Y+58	; 0x3a
    13f0:	fc 01       	movw	r30, r24
    13f2:	82 81       	ldd	r24, Z+2	; 0x02
    13f4:	93 81       	ldd	r25, Z+3	; 0x03
    13f6:	09 96       	adiw	r24, 0x09	; 9
    13f8:	fc 01       	movw	r30, r24
    13fa:	20 81       	ld	r18, Z
    13fc:	89 ad       	ldd	r24, Y+57	; 0x39
    13fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    1400:	fc 01       	movw	r30, r24
    1402:	82 81       	ldd	r24, Z+2	; 0x02
    1404:	93 81       	ldd	r25, Z+3	; 0x03
    1406:	08 96       	adiw	r24, 0x08	; 8
    1408:	fc 01       	movw	r30, r24
    140a:	80 81       	ld	r24, Z
    140c:	43 2f       	mov	r20, r19
    140e:	62 2f       	mov	r22, r18
    1410:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D7_PORT_PIN(x),GET_BIT(copy_u8Cmd,7));  //DB7 
    1414:	8b ad       	ldd	r24, Y+59	; 0x3b
    1416:	38 2f       	mov	r19, r24
    1418:	33 1f       	adc	r19, r19
    141a:	33 27       	eor	r19, r19
    141c:	33 1f       	adc	r19, r19
    141e:	89 ad       	ldd	r24, Y+57	; 0x39
    1420:	9a ad       	ldd	r25, Y+58	; 0x3a
    1422:	fc 01       	movw	r30, r24
    1424:	82 81       	ldd	r24, Z+2	; 0x02
    1426:	93 81       	ldd	r25, Z+3	; 0x03
    1428:	0b 96       	adiw	r24, 0x0b	; 11
    142a:	fc 01       	movw	r30, r24
    142c:	20 81       	ld	r18, Z
    142e:	89 ad       	ldd	r24, Y+57	; 0x39
    1430:	9a ad       	ldd	r25, Y+58	; 0x3a
    1432:	fc 01       	movw	r30, r24
    1434:	82 81       	ldd	r24, Z+2	; 0x02
    1436:	93 81       	ldd	r25, Z+3	; 0x03
    1438:	0a 96       	adiw	r24, 0x0a	; 10
    143a:	fc 01       	movw	r30, r24
    143c:	80 81       	ld	r24, Z
    143e:	43 2f       	mov	r20, r19
    1440:	62 2f       	mov	r22, r18
    1442:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RS_PORT_PIN(x) , LOW) ;
    1446:	89 ad       	ldd	r24, Y+57	; 0x39
    1448:	9a ad       	ldd	r25, Y+58	; 0x3a
    144a:	fc 01       	movw	r30, r24
    144c:	82 81       	ldd	r24, Z+2	; 0x02
    144e:	93 81       	ldd	r25, Z+3	; 0x03
    1450:	03 96       	adiw	r24, 0x03	; 3
    1452:	fc 01       	movw	r30, r24
    1454:	20 81       	ld	r18, Z
    1456:	89 ad       	ldd	r24, Y+57	; 0x39
    1458:	9a ad       	ldd	r25, Y+58	; 0x3a
    145a:	fc 01       	movw	r30, r24
    145c:	82 81       	ldd	r24, Z+2	; 0x02
    145e:	93 81       	ldd	r25, Z+3	; 0x03
    1460:	02 96       	adiw	r24, 0x02	; 2
    1462:	fc 01       	movw	r30, r24
    1464:	80 81       	ld	r24, Z
    1466:	40 e0       	ldi	r20, 0x00	; 0
    1468:	62 2f       	mov	r22, r18
    146a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		WRITE_DATA_TO_LCD(x);		
    146e:	89 ad       	ldd	r24, Y+57	; 0x39
    1470:	9a ad       	ldd	r25, Y+58	; 0x3a
    1472:	fc 01       	movw	r30, r24
    1474:	82 81       	ldd	r24, Z+2	; 0x02
    1476:	93 81       	ldd	r25, Z+3	; 0x03
    1478:	01 96       	adiw	r24, 0x01	; 1
    147a:	fc 01       	movw	r30, r24
    147c:	20 81       	ld	r18, Z
    147e:	89 ad       	ldd	r24, Y+57	; 0x39
    1480:	9a ad       	ldd	r25, Y+58	; 0x3a
    1482:	fc 01       	movw	r30, r24
    1484:	82 81       	ldd	r24, Z+2	; 0x02
    1486:	93 81       	ldd	r25, Z+3	; 0x03
    1488:	fc 01       	movw	r30, r24
    148a:	80 81       	ld	r24, Z
    148c:	41 e0       	ldi	r20, 0x01	; 1
    148e:	62 2f       	mov	r22, r18
    1490:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
    1494:	80 e0       	ldi	r24, 0x00	; 0
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	a0 e8       	ldi	r26, 0x80	; 128
    149a:	bf e3       	ldi	r27, 0x3F	; 63
    149c:	89 83       	std	Y+1, r24	; 0x01
    149e:	9a 83       	std	Y+2, r25	; 0x02
    14a0:	ab 83       	std	Y+3, r26	; 0x03
    14a2:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14a4:	20 e0       	ldi	r18, 0x00	; 0
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	4a e7       	ldi	r20, 0x7A	; 122
    14aa:	55 e4       	ldi	r21, 0x45	; 69
    14ac:	69 81       	ldd	r22, Y+1	; 0x01
    14ae:	7a 81       	ldd	r23, Y+2	; 0x02
    14b0:	8b 81       	ldd	r24, Y+3	; 0x03
    14b2:	9c 81       	ldd	r25, Y+4	; 0x04
    14b4:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    14b8:	dc 01       	movw	r26, r24
    14ba:	cb 01       	movw	r24, r22
    14bc:	8f a7       	std	Y+47, r24	; 0x2f
    14be:	98 ab       	std	Y+48, r25	; 0x30
    14c0:	a9 ab       	std	Y+49, r26	; 0x31
    14c2:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	40 e8       	ldi	r20, 0x80	; 128
    14ca:	5f e3       	ldi	r21, 0x3F	; 63
    14cc:	6f a5       	ldd	r22, Y+47	; 0x2f
    14ce:	78 a9       	ldd	r23, Y+48	; 0x30
    14d0:	89 a9       	ldd	r24, Y+49	; 0x31
    14d2:	9a a9       	ldd	r25, Y+50	; 0x32
    14d4:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
    14d8:	88 23       	and	r24, r24
    14da:	2c f4       	brge	.+10     	; 0x14e6 <LCD_voidWriteCmd+0x188>
		__ticks = 1;
    14dc:	81 e0       	ldi	r24, 0x01	; 1
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	9c ab       	std	Y+52, r25	; 0x34
    14e2:	8b ab       	std	Y+51, r24	; 0x33
    14e4:	3f c0       	rjmp	.+126    	; 0x1564 <LCD_voidWriteCmd+0x206>
	else if (__tmp > 65535)
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	3f ef       	ldi	r19, 0xFF	; 255
    14ea:	4f e7       	ldi	r20, 0x7F	; 127
    14ec:	57 e4       	ldi	r21, 0x47	; 71
    14ee:	6f a5       	ldd	r22, Y+47	; 0x2f
    14f0:	78 a9       	ldd	r23, Y+48	; 0x30
    14f2:	89 a9       	ldd	r24, Y+49	; 0x31
    14f4:	9a a9       	ldd	r25, Y+50	; 0x32
    14f6:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
    14fa:	18 16       	cp	r1, r24
    14fc:	4c f5       	brge	.+82     	; 0x1550 <LCD_voidWriteCmd+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	40 e2       	ldi	r20, 0x20	; 32
    1504:	51 e4       	ldi	r21, 0x41	; 65
    1506:	69 81       	ldd	r22, Y+1	; 0x01
    1508:	7a 81       	ldd	r23, Y+2	; 0x02
    150a:	8b 81       	ldd	r24, Y+3	; 0x03
    150c:	9c 81       	ldd	r25, Y+4	; 0x04
    150e:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    1512:	dc 01       	movw	r26, r24
    1514:	cb 01       	movw	r24, r22
    1516:	bc 01       	movw	r22, r24
    1518:	cd 01       	movw	r24, r26
    151a:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    151e:	dc 01       	movw	r26, r24
    1520:	cb 01       	movw	r24, r22
    1522:	9c ab       	std	Y+52, r25	; 0x34
    1524:	8b ab       	std	Y+51, r24	; 0x33
    1526:	0f c0       	rjmp	.+30     	; 0x1546 <LCD_voidWriteCmd+0x1e8>
    1528:	80 e9       	ldi	r24, 0x90	; 144
    152a:	91 e0       	ldi	r25, 0x01	; 1
    152c:	9e ab       	std	Y+54, r25	; 0x36
    152e:	8d ab       	std	Y+53, r24	; 0x35
    1530:	8d a9       	ldd	r24, Y+53	; 0x35
    1532:	9e a9       	ldd	r25, Y+54	; 0x36
    1534:	01 97       	sbiw	r24, 0x01	; 1
    1536:	f1 f7       	brne	.-4      	; 0x1534 <LCD_voidWriteCmd+0x1d6>
    1538:	9e ab       	std	Y+54, r25	; 0x36
    153a:	8d ab       	std	Y+53, r24	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    153c:	8b a9       	ldd	r24, Y+51	; 0x33
    153e:	9c a9       	ldd	r25, Y+52	; 0x34
    1540:	01 97       	sbiw	r24, 0x01	; 1
    1542:	9c ab       	std	Y+52, r25	; 0x34
    1544:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1546:	8b a9       	ldd	r24, Y+51	; 0x33
    1548:	9c a9       	ldd	r25, Y+52	; 0x34
    154a:	89 2b       	or	r24, r25
    154c:	69 f7       	brne	.-38     	; 0x1528 <LCD_voidWriteCmd+0x1ca>
    154e:	14 c0       	rjmp	.+40     	; 0x1578 <LCD_voidWriteCmd+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1550:	6f a5       	ldd	r22, Y+47	; 0x2f
    1552:	78 a9       	ldd	r23, Y+48	; 0x30
    1554:	89 a9       	ldd	r24, Y+49	; 0x31
    1556:	9a a9       	ldd	r25, Y+50	; 0x32
    1558:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    155c:	dc 01       	movw	r26, r24
    155e:	cb 01       	movw	r24, r22
    1560:	9c ab       	std	Y+52, r25	; 0x34
    1562:	8b ab       	std	Y+51, r24	; 0x33
    1564:	8b a9       	ldd	r24, Y+51	; 0x33
    1566:	9c a9       	ldd	r25, Y+52	; 0x34
    1568:	98 af       	std	Y+56, r25	; 0x38
    156a:	8f ab       	std	Y+55, r24	; 0x37
    156c:	8f a9       	ldd	r24, Y+55	; 0x37
    156e:	98 ad       	ldd	r25, Y+56	; 0x38
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	f1 f7       	brne	.-4      	; 0x1570 <LCD_voidWriteCmd+0x212>
    1574:	98 af       	std	Y+56, r25	; 0x38
    1576:	8f ab       	std	Y+55, r24	; 0x37
    1578:	89 ad       	ldd	r24, Y+57	; 0x39
    157a:	9a ad       	ldd	r25, Y+58	; 0x3a
    157c:	fc 01       	movw	r30, r24
    157e:	82 81       	ldd	r24, Z+2	; 0x02
    1580:	93 81       	ldd	r25, Z+3	; 0x03
    1582:	01 96       	adiw	r24, 0x01	; 1
    1584:	fc 01       	movw	r30, r24
    1586:	20 81       	ld	r18, Z
    1588:	89 ad       	ldd	r24, Y+57	; 0x39
    158a:	9a ad       	ldd	r25, Y+58	; 0x3a
    158c:	fc 01       	movw	r30, r24
    158e:	82 81       	ldd	r24, Z+2	; 0x02
    1590:	93 81       	ldd	r25, Z+3	; 0x03
    1592:	fc 01       	movw	r30, r24
    1594:	80 81       	ld	r24, Z
    1596:	40 e0       	ldi	r20, 0x00	; 0
    1598:	62 2f       	mov	r22, r18
    159a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
    159e:	80 e0       	ldi	r24, 0x00	; 0
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	a0 e8       	ldi	r26, 0x80	; 128
    15a4:	bf e3       	ldi	r27, 0x3F	; 63
    15a6:	8d 83       	std	Y+5, r24	; 0x05
    15a8:	9e 83       	std	Y+6, r25	; 0x06
    15aa:	af 83       	std	Y+7, r26	; 0x07
    15ac:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	4a e7       	ldi	r20, 0x7A	; 122
    15b4:	55 e4       	ldi	r21, 0x45	; 69
    15b6:	6d 81       	ldd	r22, Y+5	; 0x05
    15b8:	7e 81       	ldd	r23, Y+6	; 0x06
    15ba:	8f 81       	ldd	r24, Y+7	; 0x07
    15bc:	98 85       	ldd	r25, Y+8	; 0x08
    15be:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	8d a3       	std	Y+37, r24	; 0x25
    15c8:	9e a3       	std	Y+38, r25	; 0x26
    15ca:	af a3       	std	Y+39, r26	; 0x27
    15cc:	b8 a7       	std	Y+40, r27	; 0x28
	if (__tmp < 1.0)
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	40 e8       	ldi	r20, 0x80	; 128
    15d4:	5f e3       	ldi	r21, 0x3F	; 63
    15d6:	6d a1       	ldd	r22, Y+37	; 0x25
    15d8:	7e a1       	ldd	r23, Y+38	; 0x26
    15da:	8f a1       	ldd	r24, Y+39	; 0x27
    15dc:	98 a5       	ldd	r25, Y+40	; 0x28
    15de:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
    15e2:	88 23       	and	r24, r24
    15e4:	2c f4       	brge	.+10     	; 0x15f0 <LCD_voidWriteCmd+0x292>
		__ticks = 1;
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	9a a7       	std	Y+42, r25	; 0x2a
    15ec:	89 a7       	std	Y+41, r24	; 0x29
    15ee:	3f c0       	rjmp	.+126    	; 0x166e <LCD_voidWriteCmd+0x310>
	else if (__tmp > 65535)
    15f0:	20 e0       	ldi	r18, 0x00	; 0
    15f2:	3f ef       	ldi	r19, 0xFF	; 255
    15f4:	4f e7       	ldi	r20, 0x7F	; 127
    15f6:	57 e4       	ldi	r21, 0x47	; 71
    15f8:	6d a1       	ldd	r22, Y+37	; 0x25
    15fa:	7e a1       	ldd	r23, Y+38	; 0x26
    15fc:	8f a1       	ldd	r24, Y+39	; 0x27
    15fe:	98 a5       	ldd	r25, Y+40	; 0x28
    1600:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
    1604:	18 16       	cp	r1, r24
    1606:	4c f5       	brge	.+82     	; 0x165a <LCD_voidWriteCmd+0x2fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1608:	20 e0       	ldi	r18, 0x00	; 0
    160a:	30 e0       	ldi	r19, 0x00	; 0
    160c:	40 e2       	ldi	r20, 0x20	; 32
    160e:	51 e4       	ldi	r21, 0x41	; 65
    1610:	6d 81       	ldd	r22, Y+5	; 0x05
    1612:	7e 81       	ldd	r23, Y+6	; 0x06
    1614:	8f 81       	ldd	r24, Y+7	; 0x07
    1616:	98 85       	ldd	r25, Y+8	; 0x08
    1618:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    161c:	dc 01       	movw	r26, r24
    161e:	cb 01       	movw	r24, r22
    1620:	bc 01       	movw	r22, r24
    1622:	cd 01       	movw	r24, r26
    1624:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    1628:	dc 01       	movw	r26, r24
    162a:	cb 01       	movw	r24, r22
    162c:	9a a7       	std	Y+42, r25	; 0x2a
    162e:	89 a7       	std	Y+41, r24	; 0x29
    1630:	0f c0       	rjmp	.+30     	; 0x1650 <LCD_voidWriteCmd+0x2f2>
    1632:	80 e9       	ldi	r24, 0x90	; 144
    1634:	91 e0       	ldi	r25, 0x01	; 1
    1636:	9c a7       	std	Y+44, r25	; 0x2c
    1638:	8b a7       	std	Y+43, r24	; 0x2b
    163a:	8b a5       	ldd	r24, Y+43	; 0x2b
    163c:	9c a5       	ldd	r25, Y+44	; 0x2c
    163e:	01 97       	sbiw	r24, 0x01	; 1
    1640:	f1 f7       	brne	.-4      	; 0x163e <LCD_voidWriteCmd+0x2e0>
    1642:	9c a7       	std	Y+44, r25	; 0x2c
    1644:	8b a7       	std	Y+43, r24	; 0x2b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1646:	89 a5       	ldd	r24, Y+41	; 0x29
    1648:	9a a5       	ldd	r25, Y+42	; 0x2a
    164a:	01 97       	sbiw	r24, 0x01	; 1
    164c:	9a a7       	std	Y+42, r25	; 0x2a
    164e:	89 a7       	std	Y+41, r24	; 0x29
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1650:	89 a5       	ldd	r24, Y+41	; 0x29
    1652:	9a a5       	ldd	r25, Y+42	; 0x2a
    1654:	89 2b       	or	r24, r25
    1656:	69 f7       	brne	.-38     	; 0x1632 <LCD_voidWriteCmd+0x2d4>
    1658:	14 c0       	rjmp	.+40     	; 0x1682 <LCD_voidWriteCmd+0x324>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    165a:	6d a1       	ldd	r22, Y+37	; 0x25
    165c:	7e a1       	ldd	r23, Y+38	; 0x26
    165e:	8f a1       	ldd	r24, Y+39	; 0x27
    1660:	98 a5       	ldd	r25, Y+40	; 0x28
    1662:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	9a a7       	std	Y+42, r25	; 0x2a
    166c:	89 a7       	std	Y+41, r24	; 0x29
    166e:	89 a5       	ldd	r24, Y+41	; 0x29
    1670:	9a a5       	ldd	r25, Y+42	; 0x2a
    1672:	9e a7       	std	Y+46, r25	; 0x2e
    1674:	8d a7       	std	Y+45, r24	; 0x2d
    1676:	8d a5       	ldd	r24, Y+45	; 0x2d
    1678:	9e a5       	ldd	r25, Y+46	; 0x2e
    167a:	01 97       	sbiw	r24, 0x01	; 1
    167c:	f1 f7       	brne	.-4      	; 0x167a <LCD_voidWriteCmd+0x31c>
    167e:	9e a7       	std	Y+46, r25	; 0x2e
    1680:	8d a7       	std	Y+45, r24	; 0x2d
        GPIO_voidSetPinValue(_4_D4_PORT_PIN(x),GET_BIT(copy_u8Cmd,0));  //DB4
    1682:	8b ad       	ldd	r24, Y+59	; 0x3b
    1684:	38 2f       	mov	r19, r24
    1686:	31 70       	andi	r19, 0x01	; 1
    1688:	89 ad       	ldd	r24, Y+57	; 0x39
    168a:	9a ad       	ldd	r25, Y+58	; 0x3a
    168c:	fc 01       	movw	r30, r24
    168e:	82 81       	ldd	r24, Z+2	; 0x02
    1690:	93 81       	ldd	r25, Z+3	; 0x03
    1692:	05 96       	adiw	r24, 0x05	; 5
    1694:	fc 01       	movw	r30, r24
    1696:	20 81       	ld	r18, Z
    1698:	89 ad       	ldd	r24, Y+57	; 0x39
    169a:	9a ad       	ldd	r25, Y+58	; 0x3a
    169c:	fc 01       	movw	r30, r24
    169e:	82 81       	ldd	r24, Z+2	; 0x02
    16a0:	93 81       	ldd	r25, Z+3	; 0x03
    16a2:	04 96       	adiw	r24, 0x04	; 4
    16a4:	fc 01       	movw	r30, r24
    16a6:	80 81       	ld	r24, Z
    16a8:	43 2f       	mov	r20, r19
    16aa:	62 2f       	mov	r22, r18
    16ac:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D5_PORT_PIN(x),GET_BIT(copy_u8Cmd,1));  //DB5
    16b0:	8b ad       	ldd	r24, Y+59	; 0x3b
    16b2:	86 95       	lsr	r24
    16b4:	38 2f       	mov	r19, r24
    16b6:	31 70       	andi	r19, 0x01	; 1
    16b8:	89 ad       	ldd	r24, Y+57	; 0x39
    16ba:	9a ad       	ldd	r25, Y+58	; 0x3a
    16bc:	fc 01       	movw	r30, r24
    16be:	82 81       	ldd	r24, Z+2	; 0x02
    16c0:	93 81       	ldd	r25, Z+3	; 0x03
    16c2:	07 96       	adiw	r24, 0x07	; 7
    16c4:	fc 01       	movw	r30, r24
    16c6:	20 81       	ld	r18, Z
    16c8:	89 ad       	ldd	r24, Y+57	; 0x39
    16ca:	9a ad       	ldd	r25, Y+58	; 0x3a
    16cc:	fc 01       	movw	r30, r24
    16ce:	82 81       	ldd	r24, Z+2	; 0x02
    16d0:	93 81       	ldd	r25, Z+3	; 0x03
    16d2:	06 96       	adiw	r24, 0x06	; 6
    16d4:	fc 01       	movw	r30, r24
    16d6:	80 81       	ld	r24, Z
    16d8:	43 2f       	mov	r20, r19
    16da:	62 2f       	mov	r22, r18
    16dc:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D6_PORT_PIN(x),GET_BIT(copy_u8Cmd,2));  //DB6
    16e0:	8b ad       	ldd	r24, Y+59	; 0x3b
    16e2:	86 95       	lsr	r24
    16e4:	86 95       	lsr	r24
    16e6:	38 2f       	mov	r19, r24
    16e8:	31 70       	andi	r19, 0x01	; 1
    16ea:	89 ad       	ldd	r24, Y+57	; 0x39
    16ec:	9a ad       	ldd	r25, Y+58	; 0x3a
    16ee:	fc 01       	movw	r30, r24
    16f0:	82 81       	ldd	r24, Z+2	; 0x02
    16f2:	93 81       	ldd	r25, Z+3	; 0x03
    16f4:	09 96       	adiw	r24, 0x09	; 9
    16f6:	fc 01       	movw	r30, r24
    16f8:	20 81       	ld	r18, Z
    16fa:	89 ad       	ldd	r24, Y+57	; 0x39
    16fc:	9a ad       	ldd	r25, Y+58	; 0x3a
    16fe:	fc 01       	movw	r30, r24
    1700:	82 81       	ldd	r24, Z+2	; 0x02
    1702:	93 81       	ldd	r25, Z+3	; 0x03
    1704:	08 96       	adiw	r24, 0x08	; 8
    1706:	fc 01       	movw	r30, r24
    1708:	80 81       	ld	r24, Z
    170a:	43 2f       	mov	r20, r19
    170c:	62 2f       	mov	r22, r18
    170e:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
        GPIO_voidSetPinValue(_4_D7_PORT_PIN(x),GET_BIT(copy_u8Cmd,3));  //DB7 	
    1712:	8b ad       	ldd	r24, Y+59	; 0x3b
    1714:	86 95       	lsr	r24
    1716:	86 95       	lsr	r24
    1718:	86 95       	lsr	r24
    171a:	38 2f       	mov	r19, r24
    171c:	31 70       	andi	r19, 0x01	; 1
    171e:	89 ad       	ldd	r24, Y+57	; 0x39
    1720:	9a ad       	ldd	r25, Y+58	; 0x3a
    1722:	fc 01       	movw	r30, r24
    1724:	82 81       	ldd	r24, Z+2	; 0x02
    1726:	93 81       	ldd	r25, Z+3	; 0x03
    1728:	0b 96       	adiw	r24, 0x0b	; 11
    172a:	fc 01       	movw	r30, r24
    172c:	20 81       	ld	r18, Z
    172e:	89 ad       	ldd	r24, Y+57	; 0x39
    1730:	9a ad       	ldd	r25, Y+58	; 0x3a
    1732:	fc 01       	movw	r30, r24
    1734:	82 81       	ldd	r24, Z+2	; 0x02
    1736:	93 81       	ldd	r25, Z+3	; 0x03
    1738:	0a 96       	adiw	r24, 0x0a	; 10
    173a:	fc 01       	movw	r30, r24
    173c:	80 81       	ld	r24, Z
    173e:	43 2f       	mov	r20, r19
    1740:	62 2f       	mov	r22, r18
    1742:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		GPIO_voidSetPinValue(RS_PORT_PIN(x) , LOW) ;
    1746:	89 ad       	ldd	r24, Y+57	; 0x39
    1748:	9a ad       	ldd	r25, Y+58	; 0x3a
    174a:	fc 01       	movw	r30, r24
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	03 96       	adiw	r24, 0x03	; 3
    1752:	fc 01       	movw	r30, r24
    1754:	20 81       	ld	r18, Z
    1756:	89 ad       	ldd	r24, Y+57	; 0x39
    1758:	9a ad       	ldd	r25, Y+58	; 0x3a
    175a:	fc 01       	movw	r30, r24
    175c:	82 81       	ldd	r24, Z+2	; 0x02
    175e:	93 81       	ldd	r25, Z+3	; 0x03
    1760:	02 96       	adiw	r24, 0x02	; 2
    1762:	fc 01       	movw	r30, r24
    1764:	80 81       	ld	r24, Z
    1766:	40 e0       	ldi	r20, 0x00	; 0
    1768:	62 2f       	mov	r22, r18
    176a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
		WRITE_DATA_TO_LCD(x);		
    176e:	89 ad       	ldd	r24, Y+57	; 0x39
    1770:	9a ad       	ldd	r25, Y+58	; 0x3a
    1772:	fc 01       	movw	r30, r24
    1774:	82 81       	ldd	r24, Z+2	; 0x02
    1776:	93 81       	ldd	r25, Z+3	; 0x03
    1778:	01 96       	adiw	r24, 0x01	; 1
    177a:	fc 01       	movw	r30, r24
    177c:	20 81       	ld	r18, Z
    177e:	89 ad       	ldd	r24, Y+57	; 0x39
    1780:	9a ad       	ldd	r25, Y+58	; 0x3a
    1782:	fc 01       	movw	r30, r24
    1784:	82 81       	ldd	r24, Z+2	; 0x02
    1786:	93 81       	ldd	r25, Z+3	; 0x03
    1788:	fc 01       	movw	r30, r24
    178a:	80 81       	ld	r24, Z
    178c:	41 e0       	ldi	r20, 0x01	; 1
    178e:	62 2f       	mov	r22, r18
    1790:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	a0 e8       	ldi	r26, 0x80	; 128
    179a:	bf e3       	ldi	r27, 0x3F	; 63
    179c:	89 87       	std	Y+9, r24	; 0x09
    179e:	9a 87       	std	Y+10, r25	; 0x0a
    17a0:	ab 87       	std	Y+11, r26	; 0x0b
    17a2:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	4a e7       	ldi	r20, 0x7A	; 122
    17aa:	55 e4       	ldi	r21, 0x45	; 69
    17ac:	69 85       	ldd	r22, Y+9	; 0x09
    17ae:	7a 85       	ldd	r23, Y+10	; 0x0a
    17b0:	8b 85       	ldd	r24, Y+11	; 0x0b
    17b2:	9c 85       	ldd	r25, Y+12	; 0x0c
    17b4:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    17b8:	dc 01       	movw	r26, r24
    17ba:	cb 01       	movw	r24, r22
    17bc:	8b 8f       	std	Y+27, r24	; 0x1b
    17be:	9c 8f       	std	Y+28, r25	; 0x1c
    17c0:	ad 8f       	std	Y+29, r26	; 0x1d
    17c2:	be 8f       	std	Y+30, r27	; 0x1e
	if (__tmp < 1.0)
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	40 e8       	ldi	r20, 0x80	; 128
    17ca:	5f e3       	ldi	r21, 0x3F	; 63
    17cc:	6b 8d       	ldd	r22, Y+27	; 0x1b
    17ce:	7c 8d       	ldd	r23, Y+28	; 0x1c
    17d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17d2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17d4:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
    17d8:	88 23       	and	r24, r24
    17da:	2c f4       	brge	.+10     	; 0x17e6 <LCD_voidWriteCmd+0x488>
		__ticks = 1;
    17dc:	81 e0       	ldi	r24, 0x01	; 1
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	98 a3       	std	Y+32, r25	; 0x20
    17e2:	8f 8f       	std	Y+31, r24	; 0x1f
    17e4:	3f c0       	rjmp	.+126    	; 0x1864 <LCD_voidWriteCmd+0x506>
	else if (__tmp > 65535)
    17e6:	20 e0       	ldi	r18, 0x00	; 0
    17e8:	3f ef       	ldi	r19, 0xFF	; 255
    17ea:	4f e7       	ldi	r20, 0x7F	; 127
    17ec:	57 e4       	ldi	r21, 0x47	; 71
    17ee:	6b 8d       	ldd	r22, Y+27	; 0x1b
    17f0:	7c 8d       	ldd	r23, Y+28	; 0x1c
    17f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17f6:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
    17fa:	18 16       	cp	r1, r24
    17fc:	4c f5       	brge	.+82     	; 0x1850 <LCD_voidWriteCmd+0x4f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	40 e2       	ldi	r20, 0x20	; 32
    1804:	51 e4       	ldi	r21, 0x41	; 65
    1806:	69 85       	ldd	r22, Y+9	; 0x09
    1808:	7a 85       	ldd	r23, Y+10	; 0x0a
    180a:	8b 85       	ldd	r24, Y+11	; 0x0b
    180c:	9c 85       	ldd	r25, Y+12	; 0x0c
    180e:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    1812:	dc 01       	movw	r26, r24
    1814:	cb 01       	movw	r24, r22
    1816:	bc 01       	movw	r22, r24
    1818:	cd 01       	movw	r24, r26
    181a:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    181e:	dc 01       	movw	r26, r24
    1820:	cb 01       	movw	r24, r22
    1822:	98 a3       	std	Y+32, r25	; 0x20
    1824:	8f 8f       	std	Y+31, r24	; 0x1f
    1826:	0f c0       	rjmp	.+30     	; 0x1846 <LCD_voidWriteCmd+0x4e8>
    1828:	80 e9       	ldi	r24, 0x90	; 144
    182a:	91 e0       	ldi	r25, 0x01	; 1
    182c:	9a a3       	std	Y+34, r25	; 0x22
    182e:	89 a3       	std	Y+33, r24	; 0x21
    1830:	89 a1       	ldd	r24, Y+33	; 0x21
    1832:	9a a1       	ldd	r25, Y+34	; 0x22
    1834:	01 97       	sbiw	r24, 0x01	; 1
    1836:	f1 f7       	brne	.-4      	; 0x1834 <LCD_voidWriteCmd+0x4d6>
    1838:	9a a3       	std	Y+34, r25	; 0x22
    183a:	89 a3       	std	Y+33, r24	; 0x21
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    183c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    183e:	98 a1       	ldd	r25, Y+32	; 0x20
    1840:	01 97       	sbiw	r24, 0x01	; 1
    1842:	98 a3       	std	Y+32, r25	; 0x20
    1844:	8f 8f       	std	Y+31, r24	; 0x1f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1846:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1848:	98 a1       	ldd	r25, Y+32	; 0x20
    184a:	89 2b       	or	r24, r25
    184c:	69 f7       	brne	.-38     	; 0x1828 <LCD_voidWriteCmd+0x4ca>
    184e:	14 c0       	rjmp	.+40     	; 0x1878 <LCD_voidWriteCmd+0x51a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1850:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1852:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1854:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1856:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1858:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    185c:	dc 01       	movw	r26, r24
    185e:	cb 01       	movw	r24, r22
    1860:	98 a3       	std	Y+32, r25	; 0x20
    1862:	8f 8f       	std	Y+31, r24	; 0x1f
    1864:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1866:	98 a1       	ldd	r25, Y+32	; 0x20
    1868:	9c a3       	std	Y+36, r25	; 0x24
    186a:	8b a3       	std	Y+35, r24	; 0x23
    186c:	8b a1       	ldd	r24, Y+35	; 0x23
    186e:	9c a1       	ldd	r25, Y+36	; 0x24
    1870:	01 97       	sbiw	r24, 0x01	; 1
    1872:	f1 f7       	brne	.-4      	; 0x1870 <LCD_voidWriteCmd+0x512>
    1874:	9c a3       	std	Y+36, r25	; 0x24
    1876:	8b a3       	std	Y+35, r24	; 0x23
    1878:	89 ad       	ldd	r24, Y+57	; 0x39
    187a:	9a ad       	ldd	r25, Y+58	; 0x3a
    187c:	fc 01       	movw	r30, r24
    187e:	82 81       	ldd	r24, Z+2	; 0x02
    1880:	93 81       	ldd	r25, Z+3	; 0x03
    1882:	01 96       	adiw	r24, 0x01	; 1
    1884:	fc 01       	movw	r30, r24
    1886:	20 81       	ld	r18, Z
    1888:	89 ad       	ldd	r24, Y+57	; 0x39
    188a:	9a ad       	ldd	r25, Y+58	; 0x3a
    188c:	fc 01       	movw	r30, r24
    188e:	82 81       	ldd	r24, Z+2	; 0x02
    1890:	93 81       	ldd	r25, Z+3	; 0x03
    1892:	fc 01       	movw	r30, r24
    1894:	80 81       	ld	r24, Z
    1896:	40 e0       	ldi	r20, 0x00	; 0
    1898:	62 2f       	mov	r22, r18
    189a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <GPIO_voidSetPinValue>
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	a0 e8       	ldi	r26, 0x80	; 128
    18a4:	bf e3       	ldi	r27, 0x3F	; 63
    18a6:	8d 87       	std	Y+13, r24	; 0x0d
    18a8:	9e 87       	std	Y+14, r25	; 0x0e
    18aa:	af 87       	std	Y+15, r26	; 0x0f
    18ac:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    18ae:	20 e0       	ldi	r18, 0x00	; 0
    18b0:	30 e0       	ldi	r19, 0x00	; 0
    18b2:	4a e7       	ldi	r20, 0x7A	; 122
    18b4:	55 e4       	ldi	r21, 0x45	; 69
    18b6:	6d 85       	ldd	r22, Y+13	; 0x0d
    18b8:	7e 85       	ldd	r23, Y+14	; 0x0e
    18ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    18bc:	98 89       	ldd	r25, Y+16	; 0x10
    18be:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    18c2:	dc 01       	movw	r26, r24
    18c4:	cb 01       	movw	r24, r22
    18c6:	89 8b       	std	Y+17, r24	; 0x11
    18c8:	9a 8b       	std	Y+18, r25	; 0x12
    18ca:	ab 8b       	std	Y+19, r26	; 0x13
    18cc:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    18ce:	20 e0       	ldi	r18, 0x00	; 0
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	40 e8       	ldi	r20, 0x80	; 128
    18d4:	5f e3       	ldi	r21, 0x3F	; 63
    18d6:	69 89       	ldd	r22, Y+17	; 0x11
    18d8:	7a 89       	ldd	r23, Y+18	; 0x12
    18da:	8b 89       	ldd	r24, Y+19	; 0x13
    18dc:	9c 89       	ldd	r25, Y+20	; 0x14
    18de:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <__cmpsf2>
    18e2:	88 23       	and	r24, r24
    18e4:	2c f4       	brge	.+10     	; 0x18f0 <LCD_voidWriteCmd+0x592>
		__ticks = 1;
    18e6:	81 e0       	ldi	r24, 0x01	; 1
    18e8:	90 e0       	ldi	r25, 0x00	; 0
    18ea:	9e 8b       	std	Y+22, r25	; 0x16
    18ec:	8d 8b       	std	Y+21, r24	; 0x15
    18ee:	3f c0       	rjmp	.+126    	; 0x196e <LCD_voidWriteCmd+0x610>
	else if (__tmp > 65535)
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	3f ef       	ldi	r19, 0xFF	; 255
    18f4:	4f e7       	ldi	r20, 0x7F	; 127
    18f6:	57 e4       	ldi	r21, 0x47	; 71
    18f8:	69 89       	ldd	r22, Y+17	; 0x11
    18fa:	7a 89       	ldd	r23, Y+18	; 0x12
    18fc:	8b 89       	ldd	r24, Y+19	; 0x13
    18fe:	9c 89       	ldd	r25, Y+20	; 0x14
    1900:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__gesf2>
    1904:	18 16       	cp	r1, r24
    1906:	4c f5       	brge	.+82     	; 0x195a <LCD_voidWriteCmd+0x5fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1908:	20 e0       	ldi	r18, 0x00	; 0
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	40 e2       	ldi	r20, 0x20	; 32
    190e:	51 e4       	ldi	r21, 0x41	; 65
    1910:	6d 85       	ldd	r22, Y+13	; 0x0d
    1912:	7e 85       	ldd	r23, Y+14	; 0x0e
    1914:	8f 85       	ldd	r24, Y+15	; 0x0f
    1916:	98 89       	ldd	r25, Y+16	; 0x10
    1918:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <__mulsf3>
    191c:	dc 01       	movw	r26, r24
    191e:	cb 01       	movw	r24, r22
    1920:	bc 01       	movw	r22, r24
    1922:	cd 01       	movw	r24, r26
    1924:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    1928:	dc 01       	movw	r26, r24
    192a:	cb 01       	movw	r24, r22
    192c:	9e 8b       	std	Y+22, r25	; 0x16
    192e:	8d 8b       	std	Y+21, r24	; 0x15
    1930:	0f c0       	rjmp	.+30     	; 0x1950 <LCD_voidWriteCmd+0x5f2>
    1932:	80 e9       	ldi	r24, 0x90	; 144
    1934:	91 e0       	ldi	r25, 0x01	; 1
    1936:	98 8f       	std	Y+24, r25	; 0x18
    1938:	8f 8b       	std	Y+23, r24	; 0x17
    193a:	8f 89       	ldd	r24, Y+23	; 0x17
    193c:	98 8d       	ldd	r25, Y+24	; 0x18
    193e:	01 97       	sbiw	r24, 0x01	; 1
    1940:	f1 f7       	brne	.-4      	; 0x193e <LCD_voidWriteCmd+0x5e0>
    1942:	98 8f       	std	Y+24, r25	; 0x18
    1944:	8f 8b       	std	Y+23, r24	; 0x17
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1946:	8d 89       	ldd	r24, Y+21	; 0x15
    1948:	9e 89       	ldd	r25, Y+22	; 0x16
    194a:	01 97       	sbiw	r24, 0x01	; 1
    194c:	9e 8b       	std	Y+22, r25	; 0x16
    194e:	8d 8b       	std	Y+21, r24	; 0x15
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1950:	8d 89       	ldd	r24, Y+21	; 0x15
    1952:	9e 89       	ldd	r25, Y+22	; 0x16
    1954:	89 2b       	or	r24, r25
    1956:	69 f7       	brne	.-38     	; 0x1932 <LCD_voidWriteCmd+0x5d4>

#endif
}
    1958:	14 c0       	rjmp	.+40     	; 0x1982 <LCD_voidWriteCmd+0x624>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    195a:	69 89       	ldd	r22, Y+17	; 0x11
    195c:	7a 89       	ldd	r23, Y+18	; 0x12
    195e:	8b 89       	ldd	r24, Y+19	; 0x13
    1960:	9c 89       	ldd	r25, Y+20	; 0x14
    1962:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <__fixunssfsi>
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22
    196a:	9e 8b       	std	Y+22, r25	; 0x16
    196c:	8d 8b       	std	Y+21, r24	; 0x15
    196e:	8d 89       	ldd	r24, Y+21	; 0x15
    1970:	9e 89       	ldd	r25, Y+22	; 0x16
    1972:	9a 8f       	std	Y+26, r25	; 0x1a
    1974:	89 8f       	std	Y+25, r24	; 0x19
    1976:	89 8d       	ldd	r24, Y+25	; 0x19
    1978:	9a 8d       	ldd	r25, Y+26	; 0x1a
    197a:	01 97       	sbiw	r24, 0x01	; 1
    197c:	f1 f7       	brne	.-4      	; 0x197a <LCD_voidWriteCmd+0x61c>
    197e:	9a 8f       	std	Y+26, r25	; 0x1a
    1980:	89 8f       	std	Y+25, r24	; 0x19
    1982:	00 00       	nop
    1984:	eb 96       	adiw	r28, 0x3b	; 59
    1986:	0f b6       	in	r0, 0x3f	; 63
    1988:	f8 94       	cli
    198a:	de bf       	out	0x3e, r29	; 62
    198c:	0f be       	out	0x3f, r0	; 63
    198e:	cd bf       	out	0x3d, r28	; 61
    1990:	df 91       	pop	r29
    1992:	cf 91       	pop	r28
    1994:	08 95       	ret

00001996 <PIR_voidInit>:
/******************************************************************************
* Function Definitions
*******************************************************************************/

void PIR_voidInit(void)
{
    1996:	cf 93       	push	r28
    1998:	df 93       	push	r29
    199a:	cd b7       	in	r28, 0x3d	; 61
    199c:	de b7       	in	r29, 0x3e	; 62
	#if PIR_BASED_ON == PIR_INTERRUPT 
	#else 
		GPIO_voidSetPinDirection(PIR_PORT_PIN,INPUT_FLOAT);
    199e:	40 e0       	ldi	r20, 0x00	; 0
    19a0:	63 e0       	ldi	r22, 0x03	; 3
    19a2:	80 e0       	ldi	r24, 0x00	; 0
    19a4:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
	#endif 
    
} 
    19a8:	00 00       	nop
    19aa:	df 91       	pop	r29
    19ac:	cf 91       	pop	r28
    19ae:	08 95       	ret

000019b0 <PIR_u8ExistMovement>:
	/*    Enable Peripheral Flag For INT0  */
	EXTINT_voidEnable(PIR_USING_EXTIx);
}
#else
u8 PIR_u8ExistMovement(void)
{
    19b0:	cf 93       	push	r28
    19b2:	df 93       	push	r29
    19b4:	1f 92       	push	r1
    19b6:	cd b7       	in	r28, 0x3d	; 61
    19b8:	de b7       	in	r29, 0x3e	; 62
    u8 LOC_u8Result = 0 ; 
    19ba:	19 82       	std	Y+1, r1	; 0x01
    LOC_u8Result = GPIO_u8GetPinValue(PIR_PORT_PIN); 
    19bc:	63 e0       	ldi	r22, 0x03	; 3
    19be:	80 e0       	ldi	r24, 0x00	; 0
    19c0:	0e 94 63 11 	call	0x22c6	; 0x22c6 <GPIO_u8GetPinValue>
    19c4:	89 83       	std	Y+1, r24	; 0x01
    return LOC_u8Result ; 
    19c6:	89 81       	ldd	r24, Y+1	; 0x01
}
    19c8:	0f 90       	pop	r0
    19ca:	df 91       	pop	r29
    19cc:	cf 91       	pop	r28
    19ce:	08 95       	ret

000019d0 <RFID_ReceivedData>:
    19d0:	cf 93       	push	r28
    19d2:	df 93       	push	r29
    19d4:	00 d0       	rcall	.+0      	; 0x19d6 <RFID_ReceivedData+0x6>
    19d6:	cd b7       	in	r28, 0x3d	; 61
    19d8:	de b7       	in	r29, 0x3e	; 62
    19da:	8a 83       	std	Y+2, r24	; 0x02
    19dc:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <Global_RFID_State>
    19e0:	88 23       	and	r24, r24
    19e2:	11 f5       	brne	.+68     	; 0x1a28 <RFID_ReceivedData+0x58>
    19e4:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <Global_ID_Counter>
    19e8:	88 2f       	mov	r24, r24
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	85 5c       	subi	r24, 0xC5	; 197
    19ee:	9e 4f       	sbci	r25, 0xFE	; 254
    19f0:	fc 01       	movw	r30, r24
    19f2:	10 82       	st	Z, r1
    19f4:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Global_Name_Counter>
    19f8:	88 2f       	mov	r24, r24
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	80 5d       	subi	r24, 0xD0	; 208
    19fe:	9e 4f       	sbci	r25, 0xFE	; 254
    1a00:	fc 01       	movw	r30, r24
    1a02:	10 82       	st	Z, r1
    1a04:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <Global_ID_Counter>
    1a08:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <Global_Name_Counter>
    1a0c:	81 e0       	ldi	r24, 0x01	; 1
    1a0e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <Global_RFID_State>
    1a12:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <_UART_RFID_Callback>
    1a16:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <_UART_RFID_Callback+0x1>
    1a1a:	6b e3       	ldi	r22, 0x3B	; 59
    1a1c:	71 e0       	ldi	r23, 0x01	; 1
    1a1e:	80 e3       	ldi	r24, 0x30	; 48
    1a20:	91 e0       	ldi	r25, 0x01	; 1
    1a22:	f9 01       	movw	r30, r18
    1a24:	09 95       	icall
    1a26:	50 c0       	rjmp	.+160    	; 0x1ac8 <RFID_ReceivedData+0xf8>
    1a28:	19 82       	std	Y+1, r1	; 0x01
    1a2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a2c:	89 83       	std	Y+1, r24	; 0x01
    1a2e:	89 81       	ldd	r24, Y+1	; 0x01
    1a30:	80 33       	cpi	r24, 0x30	; 48
    1a32:	c8 f0       	brcs	.+50     	; 0x1a66 <RFID_ReceivedData+0x96>
    1a34:	89 81       	ldd	r24, Y+1	; 0x01
    1a36:	8a 33       	cpi	r24, 0x3A	; 58
    1a38:	b0 f4       	brcc	.+44     	; 0x1a66 <RFID_ReceivedData+0x96>
    1a3a:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <Global_ID_Counter>
    1a3e:	87 30       	cpi	r24, 0x07	; 7
    1a40:	d1 f1       	breq	.+116    	; 0x1ab6 <RFID_ReceivedData+0xe6>
    1a42:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <Global_ID_Counter>
    1a46:	88 2f       	mov	r24, r24
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	85 5c       	subi	r24, 0xC5	; 197
    1a4c:	9e 4f       	sbci	r25, 0xFE	; 254
    1a4e:	29 81       	ldd	r18, Y+1	; 0x01
    1a50:	fc 01       	movw	r30, r24
    1a52:	20 83       	st	Z, r18
    1a54:	89 81       	ldd	r24, Y+1	; 0x01
    1a56:	0e 94 ed 15 	call	0x2bda	; 0x2bda <MCAL_USART_TxByteSynch>
    1a5a:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <Global_ID_Counter>
    1a5e:	8f 5f       	subi	r24, 0xFF	; 255
    1a60:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <Global_ID_Counter>
    1a64:	28 c0       	rjmp	.+80     	; 0x1ab6 <RFID_ReceivedData+0xe6>
    1a66:	89 81       	ldd	r24, Y+1	; 0x01
    1a68:	81 36       	cpi	r24, 0x61	; 97
    1a6a:	18 f0       	brcs	.+6      	; 0x1a72 <RFID_ReceivedData+0xa2>
    1a6c:	89 81       	ldd	r24, Y+1	; 0x01
    1a6e:	8b 37       	cpi	r24, 0x7B	; 123
    1a70:	30 f0       	brcs	.+12     	; 0x1a7e <RFID_ReceivedData+0xae>
    1a72:	89 81       	ldd	r24, Y+1	; 0x01
    1a74:	81 34       	cpi	r24, 0x41	; 65
    1a76:	c8 f0       	brcs	.+50     	; 0x1aaa <RFID_ReceivedData+0xda>
    1a78:	89 81       	ldd	r24, Y+1	; 0x01
    1a7a:	8b 35       	cpi	r24, 0x5B	; 91
    1a7c:	b0 f4       	brcc	.+44     	; 0x1aaa <RFID_ReceivedData+0xda>
    1a7e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Global_Name_Counter>
    1a82:	8a 30       	cpi	r24, 0x0A	; 10
    1a84:	c1 f0       	breq	.+48     	; 0x1ab6 <RFID_ReceivedData+0xe6>
    1a86:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Global_Name_Counter>
    1a8a:	88 2f       	mov	r24, r24
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	80 5d       	subi	r24, 0xD0	; 208
    1a90:	9e 4f       	sbci	r25, 0xFE	; 254
    1a92:	29 81       	ldd	r18, Y+1	; 0x01
    1a94:	fc 01       	movw	r30, r24
    1a96:	20 83       	st	Z, r18
    1a98:	89 81       	ldd	r24, Y+1	; 0x01
    1a9a:	0e 94 ed 15 	call	0x2bda	; 0x2bda <MCAL_USART_TxByteSynch>
    1a9e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <Global_Name_Counter>
    1aa2:	8f 5f       	subi	r24, 0xFF	; 255
    1aa4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <Global_Name_Counter>
    1aa8:	06 c0       	rjmp	.+12     	; 0x1ab6 <RFID_ReceivedData+0xe6>
    1aaa:	8d e0       	ldi	r24, 0x0D	; 13
    1aac:	0e 94 ed 15 	call	0x2bda	; 0x2bda <MCAL_USART_TxByteSynch>
    1ab0:	8a e0       	ldi	r24, 0x0A	; 10
    1ab2:	0e 94 ed 15 	call	0x2bda	; 0x2bda <MCAL_USART_TxByteSynch>
    1ab6:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <Global_ID_Counter>
    1aba:	87 30       	cpi	r24, 0x07	; 7
    1abc:	29 f4       	brne	.+10     	; 0x1ac8 <RFID_ReceivedData+0xf8>
    1abe:	89 81       	ldd	r24, Y+1	; 0x01
    1ac0:	8d 30       	cpi	r24, 0x0D	; 13
    1ac2:	11 f4       	brne	.+4      	; 0x1ac8 <RFID_ReceivedData+0xf8>
    1ac4:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <Global_RFID_State>
    1ac8:	00 00       	nop
    1aca:	0f 90       	pop	r0
    1acc:	0f 90       	pop	r0
    1ace:	df 91       	pop	r29
    1ad0:	cf 91       	pop	r28
    1ad2:	08 95       	ret

00001ad4 <RFID_voidInit>:
    1ad4:	cf 93       	push	r28
    1ad6:	df 93       	push	r29
    1ad8:	cd b7       	in	r28, 0x3d	; 61
    1ada:	de b7       	in	r29, 0x3e	; 62
    1adc:	87 e7       	ldi	r24, 0x77	; 119
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <MCAL_USART_init>
    1ae4:	00 00       	nop
    1ae6:	df 91       	pop	r29
    1ae8:	cf 91       	pop	r28
    1aea:	08 95       	ret

00001aec <RFID_voidGetData_Asynch>:
    1aec:	cf 93       	push	r28
    1aee:	df 93       	push	r29
    1af0:	00 d0       	rcall	.+0      	; 0x1af2 <RFID_voidGetData_Asynch+0x6>
    1af2:	cd b7       	in	r28, 0x3d	; 61
    1af4:	de b7       	in	r29, 0x3e	; 62
    1af6:	9a 83       	std	Y+2, r25	; 0x02
    1af8:	89 83       	std	Y+1, r24	; 0x01
    1afa:	88 ee       	ldi	r24, 0xE8	; 232
    1afc:	9c e0       	ldi	r25, 0x0C	; 12
    1afe:	0e 94 77 16 	call	0x2cee	; 0x2cee <MCAL_USART_RxByteAsynch>
    1b02:	89 81       	ldd	r24, Y+1	; 0x01
    1b04:	9a 81       	ldd	r25, Y+2	; 0x02
    1b06:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <_UART_RFID_Callback+0x1>
    1b0a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <_UART_RFID_Callback>
    1b0e:	00 00       	nop
    1b10:	0f 90       	pop	r0
    1b12:	0f 90       	pop	r0
    1b14:	df 91       	pop	r29
    1b16:	cf 91       	pop	r28
    1b18:	08 95       	ret

00001b1a <main>:
 * @brief This is the main etery point of app.
 * 
 * @return will never return 
 */
int main(void)
{
    1b1a:	cf 93       	push	r28
    1b1c:	df 93       	push	r29
    1b1e:	cd b7       	in	r28, 0x3d	; 61
    1b20:	de b7       	in	r29, 0x3e	; 62
	ECU1_Entance_APP_SETUP() ; 
    1b22:	0e 94 0a 03 	call	0x614	; 0x614 <ECU1_Entance_APP_SETUP>
    while (1) 
    {
		ECU1_Entance_APP_LOOP() ; 
    1b26:	0e 94 47 03 	call	0x68e	; 0x68e <ECU1_Entance_APP_LOOP>
    }
    1b2a:	fd cf       	rjmp	.-6      	; 0x1b26 <main+0xc>

00001b2c <__vector_1>:
    1b2c:	1f 92       	push	r1
    1b2e:	0f 92       	push	r0
    1b30:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b34:	0f 92       	push	r0
    1b36:	11 24       	eor	r1, r1
    1b38:	2f 93       	push	r18
    1b3a:	3f 93       	push	r19
    1b3c:	4f 93       	push	r20
    1b3e:	5f 93       	push	r21
    1b40:	6f 93       	push	r22
    1b42:	7f 93       	push	r23
    1b44:	8f 93       	push	r24
    1b46:	9f 93       	push	r25
    1b48:	af 93       	push	r26
    1b4a:	bf 93       	push	r27
    1b4c:	ef 93       	push	r30
    1b4e:	ff 93       	push	r31
    1b50:	cf 93       	push	r28
    1b52:	df 93       	push	r29
    1b54:	cd b7       	in	r28, 0x3d	; 61
    1b56:	de b7       	in	r29, 0x3e	; 62
    1b58:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <Callback_INT0>
    1b5c:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <Callback_INT0+0x1>
    1b60:	fc 01       	movw	r30, r24
    1b62:	09 95       	icall
    1b64:	00 00       	nop
    1b66:	df 91       	pop	r29
    1b68:	cf 91       	pop	r28
    1b6a:	ff 91       	pop	r31
    1b6c:	ef 91       	pop	r30
    1b6e:	bf 91       	pop	r27
    1b70:	af 91       	pop	r26
    1b72:	9f 91       	pop	r25
    1b74:	8f 91       	pop	r24
    1b76:	7f 91       	pop	r23
    1b78:	6f 91       	pop	r22
    1b7a:	5f 91       	pop	r21
    1b7c:	4f 91       	pop	r20
    1b7e:	3f 91       	pop	r19
    1b80:	2f 91       	pop	r18
    1b82:	0f 90       	pop	r0
    1b84:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b88:	0f 90       	pop	r0
    1b8a:	1f 90       	pop	r1
    1b8c:	18 95       	reti

00001b8e <__vector_2>:
    1b8e:	1f 92       	push	r1
    1b90:	0f 92       	push	r0
    1b92:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1b96:	0f 92       	push	r0
    1b98:	11 24       	eor	r1, r1
    1b9a:	2f 93       	push	r18
    1b9c:	3f 93       	push	r19
    1b9e:	4f 93       	push	r20
    1ba0:	5f 93       	push	r21
    1ba2:	6f 93       	push	r22
    1ba4:	7f 93       	push	r23
    1ba6:	8f 93       	push	r24
    1ba8:	9f 93       	push	r25
    1baa:	af 93       	push	r26
    1bac:	bf 93       	push	r27
    1bae:	ef 93       	push	r30
    1bb0:	ff 93       	push	r31
    1bb2:	cf 93       	push	r28
    1bb4:	df 93       	push	r29
    1bb6:	cd b7       	in	r28, 0x3d	; 61
    1bb8:	de b7       	in	r29, 0x3e	; 62
    1bba:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <Callback_INT1>
    1bbe:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <Callback_INT1+0x1>
    1bc2:	fc 01       	movw	r30, r24
    1bc4:	09 95       	icall
    1bc6:	00 00       	nop
    1bc8:	df 91       	pop	r29
    1bca:	cf 91       	pop	r28
    1bcc:	ff 91       	pop	r31
    1bce:	ef 91       	pop	r30
    1bd0:	bf 91       	pop	r27
    1bd2:	af 91       	pop	r26
    1bd4:	9f 91       	pop	r25
    1bd6:	8f 91       	pop	r24
    1bd8:	7f 91       	pop	r23
    1bda:	6f 91       	pop	r22
    1bdc:	5f 91       	pop	r21
    1bde:	4f 91       	pop	r20
    1be0:	3f 91       	pop	r19
    1be2:	2f 91       	pop	r18
    1be4:	0f 90       	pop	r0
    1be6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1bea:	0f 90       	pop	r0
    1bec:	1f 90       	pop	r1
    1bee:	18 95       	reti

00001bf0 <__vector_18>:
    1bf0:	1f 92       	push	r1
    1bf2:	0f 92       	push	r0
    1bf4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1bf8:	0f 92       	push	r0
    1bfa:	11 24       	eor	r1, r1
    1bfc:	2f 93       	push	r18
    1bfe:	3f 93       	push	r19
    1c00:	4f 93       	push	r20
    1c02:	5f 93       	push	r21
    1c04:	6f 93       	push	r22
    1c06:	7f 93       	push	r23
    1c08:	8f 93       	push	r24
    1c0a:	9f 93       	push	r25
    1c0c:	af 93       	push	r26
    1c0e:	bf 93       	push	r27
    1c10:	ef 93       	push	r30
    1c12:	ff 93       	push	r31
    1c14:	cf 93       	push	r28
    1c16:	df 93       	push	r29
    1c18:	cd b7       	in	r28, 0x3d	; 61
    1c1a:	de b7       	in	r29, 0x3e	; 62
    1c1c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <Callback_INT2>
    1c20:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Callback_INT2+0x1>
    1c24:	fc 01       	movw	r30, r24
    1c26:	09 95       	icall
    1c28:	00 00       	nop
    1c2a:	df 91       	pop	r29
    1c2c:	cf 91       	pop	r28
    1c2e:	ff 91       	pop	r31
    1c30:	ef 91       	pop	r30
    1c32:	bf 91       	pop	r27
    1c34:	af 91       	pop	r26
    1c36:	9f 91       	pop	r25
    1c38:	8f 91       	pop	r24
    1c3a:	7f 91       	pop	r23
    1c3c:	6f 91       	pop	r22
    1c3e:	5f 91       	pop	r21
    1c40:	4f 91       	pop	r20
    1c42:	3f 91       	pop	r19
    1c44:	2f 91       	pop	r18
    1c46:	0f 90       	pop	r0
    1c48:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    1c4c:	0f 90       	pop	r0
    1c4e:	1f 90       	pop	r1
    1c50:	18 95       	reti

00001c52 <GPIO_voidInit>:
    1c52:	cf 93       	push	r28
    1c54:	df 93       	push	r29
    1c56:	cd b7       	in	r28, 0x3d	; 61
    1c58:	de b7       	in	r29, 0x3e	; 62
    1c5a:	8b e3       	ldi	r24, 0x3B	; 59
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	fc 01       	movw	r30, r24
    1c60:	10 82       	st	Z, r1
    1c62:	8a e3       	ldi	r24, 0x3A	; 58
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	fc 01       	movw	r30, r24
    1c68:	10 82       	st	Z, r1
    1c6a:	89 e3       	ldi	r24, 0x39	; 57
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	fc 01       	movw	r30, r24
    1c70:	10 82       	st	Z, r1
    1c72:	88 e3       	ldi	r24, 0x38	; 56
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	fc 01       	movw	r30, r24
    1c78:	10 82       	st	Z, r1
    1c7a:	87 e3       	ldi	r24, 0x37	; 55
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	fc 01       	movw	r30, r24
    1c80:	10 82       	st	Z, r1
    1c82:	86 e3       	ldi	r24, 0x36	; 54
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	fc 01       	movw	r30, r24
    1c88:	10 82       	st	Z, r1
    1c8a:	85 e3       	ldi	r24, 0x35	; 53
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	fc 01       	movw	r30, r24
    1c90:	10 82       	st	Z, r1
    1c92:	84 e3       	ldi	r24, 0x34	; 52
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	fc 01       	movw	r30, r24
    1c98:	10 82       	st	Z, r1
    1c9a:	83 e3       	ldi	r24, 0x33	; 51
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	fc 01       	movw	r30, r24
    1ca0:	10 82       	st	Z, r1
    1ca2:	82 e3       	ldi	r24, 0x32	; 50
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	fc 01       	movw	r30, r24
    1ca8:	10 82       	st	Z, r1
    1caa:	81 e3       	ldi	r24, 0x31	; 49
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	fc 01       	movw	r30, r24
    1cb0:	10 82       	st	Z, r1
    1cb2:	80 e3       	ldi	r24, 0x30	; 48
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	fc 01       	movw	r30, r24
    1cb8:	10 82       	st	Z, r1
    1cba:	00 00       	nop
    1cbc:	df 91       	pop	r29
    1cbe:	cf 91       	pop	r28
    1cc0:	08 95       	ret

00001cc2 <GPIO_voidSetPinDirection>:
    1cc2:	cf 93       	push	r28
    1cc4:	df 93       	push	r29
    1cc6:	00 d0       	rcall	.+0      	; 0x1cc8 <GPIO_voidSetPinDirection+0x6>
    1cc8:	1f 92       	push	r1
    1cca:	cd b7       	in	r28, 0x3d	; 61
    1ccc:	de b7       	in	r29, 0x3e	; 62
    1cce:	89 83       	std	Y+1, r24	; 0x01
    1cd0:	6a 83       	std	Y+2, r22	; 0x02
    1cd2:	4b 83       	std	Y+3, r20	; 0x03
    1cd4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cd6:	88 30       	cpi	r24, 0x08	; 8
    1cd8:	08 f0       	brcs	.+2      	; 0x1cdc <GPIO_voidSetPinDirection+0x1a>
    1cda:	f5 c1       	rjmp	.+1002   	; 0x20c6 <GPIO_voidSetPinDirection+0x404>
    1cdc:	89 81       	ldd	r24, Y+1	; 0x01
    1cde:	88 2f       	mov	r24, r24
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	81 30       	cpi	r24, 0x01	; 1
    1ce4:	91 05       	cpc	r25, r1
    1ce6:	09 f4       	brne	.+2      	; 0x1cea <GPIO_voidSetPinDirection+0x28>
    1ce8:	86 c0       	rjmp	.+268    	; 0x1df6 <GPIO_voidSetPinDirection+0x134>
    1cea:	82 30       	cpi	r24, 0x02	; 2
    1cec:	91 05       	cpc	r25, r1
    1cee:	1c f4       	brge	.+6      	; 0x1cf6 <GPIO_voidSetPinDirection+0x34>
    1cf0:	89 2b       	or	r24, r25
    1cf2:	49 f0       	breq	.+18     	; 0x1d06 <GPIO_voidSetPinDirection+0x44>
    1cf4:	e8 c1       	rjmp	.+976    	; 0x20c6 <GPIO_voidSetPinDirection+0x404>
    1cf6:	82 30       	cpi	r24, 0x02	; 2
    1cf8:	91 05       	cpc	r25, r1
    1cfa:	09 f4       	brne	.+2      	; 0x1cfe <GPIO_voidSetPinDirection+0x3c>
    1cfc:	f4 c0       	rjmp	.+488    	; 0x1ee6 <GPIO_voidSetPinDirection+0x224>
    1cfe:	03 97       	sbiw	r24, 0x03	; 3
    1d00:	09 f4       	brne	.+2      	; 0x1d04 <GPIO_voidSetPinDirection+0x42>
    1d02:	69 c1       	rjmp	.+722    	; 0x1fd6 <GPIO_voidSetPinDirection+0x314>
    1d04:	e0 c1       	rjmp	.+960    	; 0x20c6 <GPIO_voidSetPinDirection+0x404>
    1d06:	8b 81       	ldd	r24, Y+3	; 0x03
    1d08:	88 2f       	mov	r24, r24
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	81 30       	cpi	r24, 0x01	; 1
    1d0e:	91 05       	cpc	r25, r1
    1d10:	09 f4       	brne	.+2      	; 0x1d14 <GPIO_voidSetPinDirection+0x52>
    1d12:	5b c0       	rjmp	.+182    	; 0x1dca <GPIO_voidSetPinDirection+0x108>
    1d14:	82 30       	cpi	r24, 0x02	; 2
    1d16:	91 05       	cpc	r25, r1
    1d18:	71 f1       	breq	.+92     	; 0x1d76 <GPIO_voidSetPinDirection+0xb4>
    1d1a:	89 2b       	or	r24, r25
    1d1c:	09 f0       	breq	.+2      	; 0x1d20 <GPIO_voidSetPinDirection+0x5e>
    1d1e:	6a c0       	rjmp	.+212    	; 0x1df4 <GPIO_voidSetPinDirection+0x132>
    1d20:	8a e3       	ldi	r24, 0x3A	; 58
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	2a e3       	ldi	r18, 0x3A	; 58
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	f9 01       	movw	r30, r18
    1d2a:	20 81       	ld	r18, Z
    1d2c:	62 2f       	mov	r22, r18
    1d2e:	2a 81       	ldd	r18, Y+2	; 0x02
    1d30:	42 2f       	mov	r20, r18
    1d32:	50 e0       	ldi	r21, 0x00	; 0
    1d34:	21 e0       	ldi	r18, 0x01	; 1
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	02 c0       	rjmp	.+4      	; 0x1d3e <GPIO_voidSetPinDirection+0x7c>
    1d3a:	22 0f       	add	r18, r18
    1d3c:	33 1f       	adc	r19, r19
    1d3e:	4a 95       	dec	r20
    1d40:	e2 f7       	brpl	.-8      	; 0x1d3a <GPIO_voidSetPinDirection+0x78>
    1d42:	20 95       	com	r18
    1d44:	26 23       	and	r18, r22
    1d46:	fc 01       	movw	r30, r24
    1d48:	20 83       	st	Z, r18
    1d4a:	8b e3       	ldi	r24, 0x3B	; 59
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	2b e3       	ldi	r18, 0x3B	; 59
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	f9 01       	movw	r30, r18
    1d54:	20 81       	ld	r18, Z
    1d56:	62 2f       	mov	r22, r18
    1d58:	2a 81       	ldd	r18, Y+2	; 0x02
    1d5a:	42 2f       	mov	r20, r18
    1d5c:	50 e0       	ldi	r21, 0x00	; 0
    1d5e:	21 e0       	ldi	r18, 0x01	; 1
    1d60:	30 e0       	ldi	r19, 0x00	; 0
    1d62:	02 c0       	rjmp	.+4      	; 0x1d68 <GPIO_voidSetPinDirection+0xa6>
    1d64:	22 0f       	add	r18, r18
    1d66:	33 1f       	adc	r19, r19
    1d68:	4a 95       	dec	r20
    1d6a:	e2 f7       	brpl	.-8      	; 0x1d64 <GPIO_voidSetPinDirection+0xa2>
    1d6c:	20 95       	com	r18
    1d6e:	26 23       	and	r18, r22
    1d70:	fc 01       	movw	r30, r24
    1d72:	20 83       	st	Z, r18
    1d74:	3f c0       	rjmp	.+126    	; 0x1df4 <GPIO_voidSetPinDirection+0x132>
    1d76:	8a e3       	ldi	r24, 0x3A	; 58
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	2a e3       	ldi	r18, 0x3A	; 58
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	f9 01       	movw	r30, r18
    1d80:	20 81       	ld	r18, Z
    1d82:	62 2f       	mov	r22, r18
    1d84:	2a 81       	ldd	r18, Y+2	; 0x02
    1d86:	42 2f       	mov	r20, r18
    1d88:	50 e0       	ldi	r21, 0x00	; 0
    1d8a:	21 e0       	ldi	r18, 0x01	; 1
    1d8c:	30 e0       	ldi	r19, 0x00	; 0
    1d8e:	02 c0       	rjmp	.+4      	; 0x1d94 <GPIO_voidSetPinDirection+0xd2>
    1d90:	22 0f       	add	r18, r18
    1d92:	33 1f       	adc	r19, r19
    1d94:	4a 95       	dec	r20
    1d96:	e2 f7       	brpl	.-8      	; 0x1d90 <GPIO_voidSetPinDirection+0xce>
    1d98:	20 95       	com	r18
    1d9a:	26 23       	and	r18, r22
    1d9c:	fc 01       	movw	r30, r24
    1d9e:	20 83       	st	Z, r18
    1da0:	8b e3       	ldi	r24, 0x3B	; 59
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	2b e3       	ldi	r18, 0x3B	; 59
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	f9 01       	movw	r30, r18
    1daa:	20 81       	ld	r18, Z
    1dac:	62 2f       	mov	r22, r18
    1dae:	2a 81       	ldd	r18, Y+2	; 0x02
    1db0:	42 2f       	mov	r20, r18
    1db2:	50 e0       	ldi	r21, 0x00	; 0
    1db4:	21 e0       	ldi	r18, 0x01	; 1
    1db6:	30 e0       	ldi	r19, 0x00	; 0
    1db8:	02 c0       	rjmp	.+4      	; 0x1dbe <GPIO_voidSetPinDirection+0xfc>
    1dba:	22 0f       	add	r18, r18
    1dbc:	33 1f       	adc	r19, r19
    1dbe:	4a 95       	dec	r20
    1dc0:	e2 f7       	brpl	.-8      	; 0x1dba <GPIO_voidSetPinDirection+0xf8>
    1dc2:	26 2b       	or	r18, r22
    1dc4:	fc 01       	movw	r30, r24
    1dc6:	20 83       	st	Z, r18
    1dc8:	15 c0       	rjmp	.+42     	; 0x1df4 <GPIO_voidSetPinDirection+0x132>
    1dca:	8a e3       	ldi	r24, 0x3A	; 58
    1dcc:	90 e0       	ldi	r25, 0x00	; 0
    1dce:	2a e3       	ldi	r18, 0x3A	; 58
    1dd0:	30 e0       	ldi	r19, 0x00	; 0
    1dd2:	f9 01       	movw	r30, r18
    1dd4:	20 81       	ld	r18, Z
    1dd6:	62 2f       	mov	r22, r18
    1dd8:	2a 81       	ldd	r18, Y+2	; 0x02
    1dda:	42 2f       	mov	r20, r18
    1ddc:	50 e0       	ldi	r21, 0x00	; 0
    1dde:	21 e0       	ldi	r18, 0x01	; 1
    1de0:	30 e0       	ldi	r19, 0x00	; 0
    1de2:	02 c0       	rjmp	.+4      	; 0x1de8 <GPIO_voidSetPinDirection+0x126>
    1de4:	22 0f       	add	r18, r18
    1de6:	33 1f       	adc	r19, r19
    1de8:	4a 95       	dec	r20
    1dea:	e2 f7       	brpl	.-8      	; 0x1de4 <GPIO_voidSetPinDirection+0x122>
    1dec:	26 2b       	or	r18, r22
    1dee:	fc 01       	movw	r30, r24
    1df0:	20 83       	st	Z, r18
    1df2:	00 00       	nop
    1df4:	68 c1       	rjmp	.+720    	; 0x20c6 <GPIO_voidSetPinDirection+0x404>
    1df6:	8b 81       	ldd	r24, Y+3	; 0x03
    1df8:	88 2f       	mov	r24, r24
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	81 30       	cpi	r24, 0x01	; 1
    1dfe:	91 05       	cpc	r25, r1
    1e00:	09 f4       	brne	.+2      	; 0x1e04 <GPIO_voidSetPinDirection+0x142>
    1e02:	5b c0       	rjmp	.+182    	; 0x1eba <GPIO_voidSetPinDirection+0x1f8>
    1e04:	82 30       	cpi	r24, 0x02	; 2
    1e06:	91 05       	cpc	r25, r1
    1e08:	71 f1       	breq	.+92     	; 0x1e66 <GPIO_voidSetPinDirection+0x1a4>
    1e0a:	89 2b       	or	r24, r25
    1e0c:	09 f0       	breq	.+2      	; 0x1e10 <GPIO_voidSetPinDirection+0x14e>
    1e0e:	6a c0       	rjmp	.+212    	; 0x1ee4 <GPIO_voidSetPinDirection+0x222>
    1e10:	87 e3       	ldi	r24, 0x37	; 55
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	27 e3       	ldi	r18, 0x37	; 55
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	f9 01       	movw	r30, r18
    1e1a:	20 81       	ld	r18, Z
    1e1c:	62 2f       	mov	r22, r18
    1e1e:	2a 81       	ldd	r18, Y+2	; 0x02
    1e20:	42 2f       	mov	r20, r18
    1e22:	50 e0       	ldi	r21, 0x00	; 0
    1e24:	21 e0       	ldi	r18, 0x01	; 1
    1e26:	30 e0       	ldi	r19, 0x00	; 0
    1e28:	02 c0       	rjmp	.+4      	; 0x1e2e <GPIO_voidSetPinDirection+0x16c>
    1e2a:	22 0f       	add	r18, r18
    1e2c:	33 1f       	adc	r19, r19
    1e2e:	4a 95       	dec	r20
    1e30:	e2 f7       	brpl	.-8      	; 0x1e2a <GPIO_voidSetPinDirection+0x168>
    1e32:	20 95       	com	r18
    1e34:	26 23       	and	r18, r22
    1e36:	fc 01       	movw	r30, r24
    1e38:	20 83       	st	Z, r18
    1e3a:	88 e3       	ldi	r24, 0x38	; 56
    1e3c:	90 e0       	ldi	r25, 0x00	; 0
    1e3e:	28 e3       	ldi	r18, 0x38	; 56
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	f9 01       	movw	r30, r18
    1e44:	20 81       	ld	r18, Z
    1e46:	62 2f       	mov	r22, r18
    1e48:	2a 81       	ldd	r18, Y+2	; 0x02
    1e4a:	42 2f       	mov	r20, r18
    1e4c:	50 e0       	ldi	r21, 0x00	; 0
    1e4e:	21 e0       	ldi	r18, 0x01	; 1
    1e50:	30 e0       	ldi	r19, 0x00	; 0
    1e52:	02 c0       	rjmp	.+4      	; 0x1e58 <GPIO_voidSetPinDirection+0x196>
    1e54:	22 0f       	add	r18, r18
    1e56:	33 1f       	adc	r19, r19
    1e58:	4a 95       	dec	r20
    1e5a:	e2 f7       	brpl	.-8      	; 0x1e54 <GPIO_voidSetPinDirection+0x192>
    1e5c:	20 95       	com	r18
    1e5e:	26 23       	and	r18, r22
    1e60:	fc 01       	movw	r30, r24
    1e62:	20 83       	st	Z, r18
    1e64:	3f c0       	rjmp	.+126    	; 0x1ee4 <GPIO_voidSetPinDirection+0x222>
    1e66:	87 e3       	ldi	r24, 0x37	; 55
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	27 e3       	ldi	r18, 0x37	; 55
    1e6c:	30 e0       	ldi	r19, 0x00	; 0
    1e6e:	f9 01       	movw	r30, r18
    1e70:	20 81       	ld	r18, Z
    1e72:	62 2f       	mov	r22, r18
    1e74:	2a 81       	ldd	r18, Y+2	; 0x02
    1e76:	42 2f       	mov	r20, r18
    1e78:	50 e0       	ldi	r21, 0x00	; 0
    1e7a:	21 e0       	ldi	r18, 0x01	; 1
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	02 c0       	rjmp	.+4      	; 0x1e84 <GPIO_voidSetPinDirection+0x1c2>
    1e80:	22 0f       	add	r18, r18
    1e82:	33 1f       	adc	r19, r19
    1e84:	4a 95       	dec	r20
    1e86:	e2 f7       	brpl	.-8      	; 0x1e80 <GPIO_voidSetPinDirection+0x1be>
    1e88:	20 95       	com	r18
    1e8a:	26 23       	and	r18, r22
    1e8c:	fc 01       	movw	r30, r24
    1e8e:	20 83       	st	Z, r18
    1e90:	88 e3       	ldi	r24, 0x38	; 56
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	28 e3       	ldi	r18, 0x38	; 56
    1e96:	30 e0       	ldi	r19, 0x00	; 0
    1e98:	f9 01       	movw	r30, r18
    1e9a:	20 81       	ld	r18, Z
    1e9c:	62 2f       	mov	r22, r18
    1e9e:	2a 81       	ldd	r18, Y+2	; 0x02
    1ea0:	42 2f       	mov	r20, r18
    1ea2:	50 e0       	ldi	r21, 0x00	; 0
    1ea4:	21 e0       	ldi	r18, 0x01	; 1
    1ea6:	30 e0       	ldi	r19, 0x00	; 0
    1ea8:	02 c0       	rjmp	.+4      	; 0x1eae <GPIO_voidSetPinDirection+0x1ec>
    1eaa:	22 0f       	add	r18, r18
    1eac:	33 1f       	adc	r19, r19
    1eae:	4a 95       	dec	r20
    1eb0:	e2 f7       	brpl	.-8      	; 0x1eaa <GPIO_voidSetPinDirection+0x1e8>
    1eb2:	26 2b       	or	r18, r22
    1eb4:	fc 01       	movw	r30, r24
    1eb6:	20 83       	st	Z, r18
    1eb8:	15 c0       	rjmp	.+42     	; 0x1ee4 <GPIO_voidSetPinDirection+0x222>
    1eba:	87 e3       	ldi	r24, 0x37	; 55
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	27 e3       	ldi	r18, 0x37	; 55
    1ec0:	30 e0       	ldi	r19, 0x00	; 0
    1ec2:	f9 01       	movw	r30, r18
    1ec4:	20 81       	ld	r18, Z
    1ec6:	62 2f       	mov	r22, r18
    1ec8:	2a 81       	ldd	r18, Y+2	; 0x02
    1eca:	42 2f       	mov	r20, r18
    1ecc:	50 e0       	ldi	r21, 0x00	; 0
    1ece:	21 e0       	ldi	r18, 0x01	; 1
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	02 c0       	rjmp	.+4      	; 0x1ed8 <GPIO_voidSetPinDirection+0x216>
    1ed4:	22 0f       	add	r18, r18
    1ed6:	33 1f       	adc	r19, r19
    1ed8:	4a 95       	dec	r20
    1eda:	e2 f7       	brpl	.-8      	; 0x1ed4 <GPIO_voidSetPinDirection+0x212>
    1edc:	26 2b       	or	r18, r22
    1ede:	fc 01       	movw	r30, r24
    1ee0:	20 83       	st	Z, r18
    1ee2:	00 00       	nop
    1ee4:	f0 c0       	rjmp	.+480    	; 0x20c6 <GPIO_voidSetPinDirection+0x404>
    1ee6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ee8:	88 2f       	mov	r24, r24
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	81 30       	cpi	r24, 0x01	; 1
    1eee:	91 05       	cpc	r25, r1
    1ef0:	09 f4       	brne	.+2      	; 0x1ef4 <GPIO_voidSetPinDirection+0x232>
    1ef2:	5b c0       	rjmp	.+182    	; 0x1faa <GPIO_voidSetPinDirection+0x2e8>
    1ef4:	82 30       	cpi	r24, 0x02	; 2
    1ef6:	91 05       	cpc	r25, r1
    1ef8:	71 f1       	breq	.+92     	; 0x1f56 <GPIO_voidSetPinDirection+0x294>
    1efa:	89 2b       	or	r24, r25
    1efc:	09 f0       	breq	.+2      	; 0x1f00 <GPIO_voidSetPinDirection+0x23e>
    1efe:	6a c0       	rjmp	.+212    	; 0x1fd4 <GPIO_voidSetPinDirection+0x312>
    1f00:	84 e3       	ldi	r24, 0x34	; 52
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	24 e3       	ldi	r18, 0x34	; 52
    1f06:	30 e0       	ldi	r19, 0x00	; 0
    1f08:	f9 01       	movw	r30, r18
    1f0a:	20 81       	ld	r18, Z
    1f0c:	62 2f       	mov	r22, r18
    1f0e:	2a 81       	ldd	r18, Y+2	; 0x02
    1f10:	42 2f       	mov	r20, r18
    1f12:	50 e0       	ldi	r21, 0x00	; 0
    1f14:	21 e0       	ldi	r18, 0x01	; 1
    1f16:	30 e0       	ldi	r19, 0x00	; 0
    1f18:	02 c0       	rjmp	.+4      	; 0x1f1e <GPIO_voidSetPinDirection+0x25c>
    1f1a:	22 0f       	add	r18, r18
    1f1c:	33 1f       	adc	r19, r19
    1f1e:	4a 95       	dec	r20
    1f20:	e2 f7       	brpl	.-8      	; 0x1f1a <GPIO_voidSetPinDirection+0x258>
    1f22:	20 95       	com	r18
    1f24:	26 23       	and	r18, r22
    1f26:	fc 01       	movw	r30, r24
    1f28:	20 83       	st	Z, r18
    1f2a:	85 e3       	ldi	r24, 0x35	; 53
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	25 e3       	ldi	r18, 0x35	; 53
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	f9 01       	movw	r30, r18
    1f34:	20 81       	ld	r18, Z
    1f36:	62 2f       	mov	r22, r18
    1f38:	2a 81       	ldd	r18, Y+2	; 0x02
    1f3a:	42 2f       	mov	r20, r18
    1f3c:	50 e0       	ldi	r21, 0x00	; 0
    1f3e:	21 e0       	ldi	r18, 0x01	; 1
    1f40:	30 e0       	ldi	r19, 0x00	; 0
    1f42:	02 c0       	rjmp	.+4      	; 0x1f48 <GPIO_voidSetPinDirection+0x286>
    1f44:	22 0f       	add	r18, r18
    1f46:	33 1f       	adc	r19, r19
    1f48:	4a 95       	dec	r20
    1f4a:	e2 f7       	brpl	.-8      	; 0x1f44 <GPIO_voidSetPinDirection+0x282>
    1f4c:	20 95       	com	r18
    1f4e:	26 23       	and	r18, r22
    1f50:	fc 01       	movw	r30, r24
    1f52:	20 83       	st	Z, r18
    1f54:	3f c0       	rjmp	.+126    	; 0x1fd4 <GPIO_voidSetPinDirection+0x312>
    1f56:	84 e3       	ldi	r24, 0x34	; 52
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	24 e3       	ldi	r18, 0x34	; 52
    1f5c:	30 e0       	ldi	r19, 0x00	; 0
    1f5e:	f9 01       	movw	r30, r18
    1f60:	20 81       	ld	r18, Z
    1f62:	62 2f       	mov	r22, r18
    1f64:	2a 81       	ldd	r18, Y+2	; 0x02
    1f66:	42 2f       	mov	r20, r18
    1f68:	50 e0       	ldi	r21, 0x00	; 0
    1f6a:	21 e0       	ldi	r18, 0x01	; 1
    1f6c:	30 e0       	ldi	r19, 0x00	; 0
    1f6e:	02 c0       	rjmp	.+4      	; 0x1f74 <GPIO_voidSetPinDirection+0x2b2>
    1f70:	22 0f       	add	r18, r18
    1f72:	33 1f       	adc	r19, r19
    1f74:	4a 95       	dec	r20
    1f76:	e2 f7       	brpl	.-8      	; 0x1f70 <GPIO_voidSetPinDirection+0x2ae>
    1f78:	20 95       	com	r18
    1f7a:	26 23       	and	r18, r22
    1f7c:	fc 01       	movw	r30, r24
    1f7e:	20 83       	st	Z, r18
    1f80:	85 e3       	ldi	r24, 0x35	; 53
    1f82:	90 e0       	ldi	r25, 0x00	; 0
    1f84:	25 e3       	ldi	r18, 0x35	; 53
    1f86:	30 e0       	ldi	r19, 0x00	; 0
    1f88:	f9 01       	movw	r30, r18
    1f8a:	20 81       	ld	r18, Z
    1f8c:	62 2f       	mov	r22, r18
    1f8e:	2a 81       	ldd	r18, Y+2	; 0x02
    1f90:	42 2f       	mov	r20, r18
    1f92:	50 e0       	ldi	r21, 0x00	; 0
    1f94:	21 e0       	ldi	r18, 0x01	; 1
    1f96:	30 e0       	ldi	r19, 0x00	; 0
    1f98:	02 c0       	rjmp	.+4      	; 0x1f9e <GPIO_voidSetPinDirection+0x2dc>
    1f9a:	22 0f       	add	r18, r18
    1f9c:	33 1f       	adc	r19, r19
    1f9e:	4a 95       	dec	r20
    1fa0:	e2 f7       	brpl	.-8      	; 0x1f9a <GPIO_voidSetPinDirection+0x2d8>
    1fa2:	26 2b       	or	r18, r22
    1fa4:	fc 01       	movw	r30, r24
    1fa6:	20 83       	st	Z, r18
    1fa8:	15 c0       	rjmp	.+42     	; 0x1fd4 <GPIO_voidSetPinDirection+0x312>
    1faa:	84 e3       	ldi	r24, 0x34	; 52
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	24 e3       	ldi	r18, 0x34	; 52
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	f9 01       	movw	r30, r18
    1fb4:	20 81       	ld	r18, Z
    1fb6:	62 2f       	mov	r22, r18
    1fb8:	2a 81       	ldd	r18, Y+2	; 0x02
    1fba:	42 2f       	mov	r20, r18
    1fbc:	50 e0       	ldi	r21, 0x00	; 0
    1fbe:	21 e0       	ldi	r18, 0x01	; 1
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	02 c0       	rjmp	.+4      	; 0x1fc8 <GPIO_voidSetPinDirection+0x306>
    1fc4:	22 0f       	add	r18, r18
    1fc6:	33 1f       	adc	r19, r19
    1fc8:	4a 95       	dec	r20
    1fca:	e2 f7       	brpl	.-8      	; 0x1fc4 <GPIO_voidSetPinDirection+0x302>
    1fcc:	26 2b       	or	r18, r22
    1fce:	fc 01       	movw	r30, r24
    1fd0:	20 83       	st	Z, r18
    1fd2:	00 00       	nop
    1fd4:	78 c0       	rjmp	.+240    	; 0x20c6 <GPIO_voidSetPinDirection+0x404>
    1fd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fd8:	88 2f       	mov	r24, r24
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	81 30       	cpi	r24, 0x01	; 1
    1fde:	91 05       	cpc	r25, r1
    1fe0:	09 f4       	brne	.+2      	; 0x1fe4 <GPIO_voidSetPinDirection+0x322>
    1fe2:	5b c0       	rjmp	.+182    	; 0x209a <GPIO_voidSetPinDirection+0x3d8>
    1fe4:	82 30       	cpi	r24, 0x02	; 2
    1fe6:	91 05       	cpc	r25, r1
    1fe8:	71 f1       	breq	.+92     	; 0x2046 <GPIO_voidSetPinDirection+0x384>
    1fea:	89 2b       	or	r24, r25
    1fec:	09 f0       	breq	.+2      	; 0x1ff0 <GPIO_voidSetPinDirection+0x32e>
    1fee:	6a c0       	rjmp	.+212    	; 0x20c4 <GPIO_voidSetPinDirection+0x402>
    1ff0:	81 e3       	ldi	r24, 0x31	; 49
    1ff2:	90 e0       	ldi	r25, 0x00	; 0
    1ff4:	21 e3       	ldi	r18, 0x31	; 49
    1ff6:	30 e0       	ldi	r19, 0x00	; 0
    1ff8:	f9 01       	movw	r30, r18
    1ffa:	20 81       	ld	r18, Z
    1ffc:	62 2f       	mov	r22, r18
    1ffe:	2a 81       	ldd	r18, Y+2	; 0x02
    2000:	42 2f       	mov	r20, r18
    2002:	50 e0       	ldi	r21, 0x00	; 0
    2004:	21 e0       	ldi	r18, 0x01	; 1
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	02 c0       	rjmp	.+4      	; 0x200e <GPIO_voidSetPinDirection+0x34c>
    200a:	22 0f       	add	r18, r18
    200c:	33 1f       	adc	r19, r19
    200e:	4a 95       	dec	r20
    2010:	e2 f7       	brpl	.-8      	; 0x200a <GPIO_voidSetPinDirection+0x348>
    2012:	20 95       	com	r18
    2014:	26 23       	and	r18, r22
    2016:	fc 01       	movw	r30, r24
    2018:	20 83       	st	Z, r18
    201a:	82 e3       	ldi	r24, 0x32	; 50
    201c:	90 e0       	ldi	r25, 0x00	; 0
    201e:	22 e3       	ldi	r18, 0x32	; 50
    2020:	30 e0       	ldi	r19, 0x00	; 0
    2022:	f9 01       	movw	r30, r18
    2024:	20 81       	ld	r18, Z
    2026:	62 2f       	mov	r22, r18
    2028:	2a 81       	ldd	r18, Y+2	; 0x02
    202a:	42 2f       	mov	r20, r18
    202c:	50 e0       	ldi	r21, 0x00	; 0
    202e:	21 e0       	ldi	r18, 0x01	; 1
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	02 c0       	rjmp	.+4      	; 0x2038 <GPIO_voidSetPinDirection+0x376>
    2034:	22 0f       	add	r18, r18
    2036:	33 1f       	adc	r19, r19
    2038:	4a 95       	dec	r20
    203a:	e2 f7       	brpl	.-8      	; 0x2034 <GPIO_voidSetPinDirection+0x372>
    203c:	20 95       	com	r18
    203e:	26 23       	and	r18, r22
    2040:	fc 01       	movw	r30, r24
    2042:	20 83       	st	Z, r18
    2044:	3f c0       	rjmp	.+126    	; 0x20c4 <GPIO_voidSetPinDirection+0x402>
    2046:	81 e3       	ldi	r24, 0x31	; 49
    2048:	90 e0       	ldi	r25, 0x00	; 0
    204a:	21 e3       	ldi	r18, 0x31	; 49
    204c:	30 e0       	ldi	r19, 0x00	; 0
    204e:	f9 01       	movw	r30, r18
    2050:	20 81       	ld	r18, Z
    2052:	62 2f       	mov	r22, r18
    2054:	2a 81       	ldd	r18, Y+2	; 0x02
    2056:	42 2f       	mov	r20, r18
    2058:	50 e0       	ldi	r21, 0x00	; 0
    205a:	21 e0       	ldi	r18, 0x01	; 1
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	02 c0       	rjmp	.+4      	; 0x2064 <GPIO_voidSetPinDirection+0x3a2>
    2060:	22 0f       	add	r18, r18
    2062:	33 1f       	adc	r19, r19
    2064:	4a 95       	dec	r20
    2066:	e2 f7       	brpl	.-8      	; 0x2060 <GPIO_voidSetPinDirection+0x39e>
    2068:	20 95       	com	r18
    206a:	26 23       	and	r18, r22
    206c:	fc 01       	movw	r30, r24
    206e:	20 83       	st	Z, r18
    2070:	82 e3       	ldi	r24, 0x32	; 50
    2072:	90 e0       	ldi	r25, 0x00	; 0
    2074:	22 e3       	ldi	r18, 0x32	; 50
    2076:	30 e0       	ldi	r19, 0x00	; 0
    2078:	f9 01       	movw	r30, r18
    207a:	20 81       	ld	r18, Z
    207c:	62 2f       	mov	r22, r18
    207e:	2a 81       	ldd	r18, Y+2	; 0x02
    2080:	42 2f       	mov	r20, r18
    2082:	50 e0       	ldi	r21, 0x00	; 0
    2084:	21 e0       	ldi	r18, 0x01	; 1
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	02 c0       	rjmp	.+4      	; 0x208e <GPIO_voidSetPinDirection+0x3cc>
    208a:	22 0f       	add	r18, r18
    208c:	33 1f       	adc	r19, r19
    208e:	4a 95       	dec	r20
    2090:	e2 f7       	brpl	.-8      	; 0x208a <GPIO_voidSetPinDirection+0x3c8>
    2092:	26 2b       	or	r18, r22
    2094:	fc 01       	movw	r30, r24
    2096:	20 83       	st	Z, r18
    2098:	15 c0       	rjmp	.+42     	; 0x20c4 <GPIO_voidSetPinDirection+0x402>
    209a:	81 e3       	ldi	r24, 0x31	; 49
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	21 e3       	ldi	r18, 0x31	; 49
    20a0:	30 e0       	ldi	r19, 0x00	; 0
    20a2:	f9 01       	movw	r30, r18
    20a4:	20 81       	ld	r18, Z
    20a6:	62 2f       	mov	r22, r18
    20a8:	2a 81       	ldd	r18, Y+2	; 0x02
    20aa:	42 2f       	mov	r20, r18
    20ac:	50 e0       	ldi	r21, 0x00	; 0
    20ae:	21 e0       	ldi	r18, 0x01	; 1
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	02 c0       	rjmp	.+4      	; 0x20b8 <GPIO_voidSetPinDirection+0x3f6>
    20b4:	22 0f       	add	r18, r18
    20b6:	33 1f       	adc	r19, r19
    20b8:	4a 95       	dec	r20
    20ba:	e2 f7       	brpl	.-8      	; 0x20b4 <GPIO_voidSetPinDirection+0x3f2>
    20bc:	26 2b       	or	r18, r22
    20be:	fc 01       	movw	r30, r24
    20c0:	20 83       	st	Z, r18
    20c2:	00 00       	nop
    20c4:	00 00       	nop
    20c6:	00 00       	nop
    20c8:	0f 90       	pop	r0
    20ca:	0f 90       	pop	r0
    20cc:	0f 90       	pop	r0
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	08 95       	ret

000020d4 <GPIO_voidSetPinValue>:
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
    20d8:	00 d0       	rcall	.+0      	; 0x20da <GPIO_voidSetPinValue+0x6>
    20da:	1f 92       	push	r1
    20dc:	cd b7       	in	r28, 0x3d	; 61
    20de:	de b7       	in	r29, 0x3e	; 62
    20e0:	89 83       	std	Y+1, r24	; 0x01
    20e2:	6a 83       	std	Y+2, r22	; 0x02
    20e4:	4b 83       	std	Y+3, r20	; 0x03
    20e6:	8a 81       	ldd	r24, Y+2	; 0x02
    20e8:	88 30       	cpi	r24, 0x08	; 8
    20ea:	08 f0       	brcs	.+2      	; 0x20ee <GPIO_voidSetPinValue+0x1a>
    20ec:	e5 c0       	rjmp	.+458    	; 0x22b8 <GPIO_voidSetPinValue+0x1e4>
    20ee:	89 81       	ldd	r24, Y+1	; 0x01
    20f0:	88 2f       	mov	r24, r24
    20f2:	90 e0       	ldi	r25, 0x00	; 0
    20f4:	81 30       	cpi	r24, 0x01	; 1
    20f6:	91 05       	cpc	r25, r1
    20f8:	09 f4       	brne	.+2      	; 0x20fc <GPIO_voidSetPinValue+0x28>
    20fa:	42 c0       	rjmp	.+132    	; 0x2180 <GPIO_voidSetPinValue+0xac>
    20fc:	82 30       	cpi	r24, 0x02	; 2
    20fe:	91 05       	cpc	r25, r1
    2100:	1c f4       	brge	.+6      	; 0x2108 <GPIO_voidSetPinValue+0x34>
    2102:	89 2b       	or	r24, r25
    2104:	49 f0       	breq	.+18     	; 0x2118 <GPIO_voidSetPinValue+0x44>
    2106:	d8 c0       	rjmp	.+432    	; 0x22b8 <GPIO_voidSetPinValue+0x1e4>
    2108:	82 30       	cpi	r24, 0x02	; 2
    210a:	91 05       	cpc	r25, r1
    210c:	09 f4       	brne	.+2      	; 0x2110 <GPIO_voidSetPinValue+0x3c>
    210e:	6c c0       	rjmp	.+216    	; 0x21e8 <GPIO_voidSetPinValue+0x114>
    2110:	03 97       	sbiw	r24, 0x03	; 3
    2112:	09 f4       	brne	.+2      	; 0x2116 <GPIO_voidSetPinValue+0x42>
    2114:	9d c0       	rjmp	.+314    	; 0x2250 <GPIO_voidSetPinValue+0x17c>
    2116:	d0 c0       	rjmp	.+416    	; 0x22b8 <GPIO_voidSetPinValue+0x1e4>
    2118:	8b 81       	ldd	r24, Y+3	; 0x03
    211a:	88 2f       	mov	r24, r24
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	00 97       	sbiw	r24, 0x00	; 0
    2120:	c1 f0       	breq	.+48     	; 0x2152 <GPIO_voidSetPinValue+0x7e>
    2122:	01 97       	sbiw	r24, 0x01	; 1
    2124:	09 f0       	breq	.+2      	; 0x2128 <GPIO_voidSetPinValue+0x54>
    2126:	2b c0       	rjmp	.+86     	; 0x217e <GPIO_voidSetPinValue+0xaa>
    2128:	8b e3       	ldi	r24, 0x3B	; 59
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	2b e3       	ldi	r18, 0x3B	; 59
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	f9 01       	movw	r30, r18
    2132:	20 81       	ld	r18, Z
    2134:	62 2f       	mov	r22, r18
    2136:	2a 81       	ldd	r18, Y+2	; 0x02
    2138:	42 2f       	mov	r20, r18
    213a:	50 e0       	ldi	r21, 0x00	; 0
    213c:	21 e0       	ldi	r18, 0x01	; 1
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	02 c0       	rjmp	.+4      	; 0x2146 <GPIO_voidSetPinValue+0x72>
    2142:	22 0f       	add	r18, r18
    2144:	33 1f       	adc	r19, r19
    2146:	4a 95       	dec	r20
    2148:	e2 f7       	brpl	.-8      	; 0x2142 <GPIO_voidSetPinValue+0x6e>
    214a:	26 2b       	or	r18, r22
    214c:	fc 01       	movw	r30, r24
    214e:	20 83       	st	Z, r18
    2150:	16 c0       	rjmp	.+44     	; 0x217e <GPIO_voidSetPinValue+0xaa>
    2152:	8b e3       	ldi	r24, 0x3B	; 59
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	2b e3       	ldi	r18, 0x3B	; 59
    2158:	30 e0       	ldi	r19, 0x00	; 0
    215a:	f9 01       	movw	r30, r18
    215c:	20 81       	ld	r18, Z
    215e:	62 2f       	mov	r22, r18
    2160:	2a 81       	ldd	r18, Y+2	; 0x02
    2162:	42 2f       	mov	r20, r18
    2164:	50 e0       	ldi	r21, 0x00	; 0
    2166:	21 e0       	ldi	r18, 0x01	; 1
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	02 c0       	rjmp	.+4      	; 0x2170 <GPIO_voidSetPinValue+0x9c>
    216c:	22 0f       	add	r18, r18
    216e:	33 1f       	adc	r19, r19
    2170:	4a 95       	dec	r20
    2172:	e2 f7       	brpl	.-8      	; 0x216c <GPIO_voidSetPinValue+0x98>
    2174:	20 95       	com	r18
    2176:	26 23       	and	r18, r22
    2178:	fc 01       	movw	r30, r24
    217a:	20 83       	st	Z, r18
    217c:	00 00       	nop
    217e:	9c c0       	rjmp	.+312    	; 0x22b8 <GPIO_voidSetPinValue+0x1e4>
    2180:	8b 81       	ldd	r24, Y+3	; 0x03
    2182:	88 2f       	mov	r24, r24
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	00 97       	sbiw	r24, 0x00	; 0
    2188:	c1 f0       	breq	.+48     	; 0x21ba <GPIO_voidSetPinValue+0xe6>
    218a:	01 97       	sbiw	r24, 0x01	; 1
    218c:	09 f0       	breq	.+2      	; 0x2190 <GPIO_voidSetPinValue+0xbc>
    218e:	2b c0       	rjmp	.+86     	; 0x21e6 <GPIO_voidSetPinValue+0x112>
    2190:	88 e3       	ldi	r24, 0x38	; 56
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	28 e3       	ldi	r18, 0x38	; 56
    2196:	30 e0       	ldi	r19, 0x00	; 0
    2198:	f9 01       	movw	r30, r18
    219a:	20 81       	ld	r18, Z
    219c:	62 2f       	mov	r22, r18
    219e:	2a 81       	ldd	r18, Y+2	; 0x02
    21a0:	42 2f       	mov	r20, r18
    21a2:	50 e0       	ldi	r21, 0x00	; 0
    21a4:	21 e0       	ldi	r18, 0x01	; 1
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	02 c0       	rjmp	.+4      	; 0x21ae <GPIO_voidSetPinValue+0xda>
    21aa:	22 0f       	add	r18, r18
    21ac:	33 1f       	adc	r19, r19
    21ae:	4a 95       	dec	r20
    21b0:	e2 f7       	brpl	.-8      	; 0x21aa <GPIO_voidSetPinValue+0xd6>
    21b2:	26 2b       	or	r18, r22
    21b4:	fc 01       	movw	r30, r24
    21b6:	20 83       	st	Z, r18
    21b8:	16 c0       	rjmp	.+44     	; 0x21e6 <GPIO_voidSetPinValue+0x112>
    21ba:	88 e3       	ldi	r24, 0x38	; 56
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	28 e3       	ldi	r18, 0x38	; 56
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	f9 01       	movw	r30, r18
    21c4:	20 81       	ld	r18, Z
    21c6:	62 2f       	mov	r22, r18
    21c8:	2a 81       	ldd	r18, Y+2	; 0x02
    21ca:	42 2f       	mov	r20, r18
    21cc:	50 e0       	ldi	r21, 0x00	; 0
    21ce:	21 e0       	ldi	r18, 0x01	; 1
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	02 c0       	rjmp	.+4      	; 0x21d8 <GPIO_voidSetPinValue+0x104>
    21d4:	22 0f       	add	r18, r18
    21d6:	33 1f       	adc	r19, r19
    21d8:	4a 95       	dec	r20
    21da:	e2 f7       	brpl	.-8      	; 0x21d4 <GPIO_voidSetPinValue+0x100>
    21dc:	20 95       	com	r18
    21de:	26 23       	and	r18, r22
    21e0:	fc 01       	movw	r30, r24
    21e2:	20 83       	st	Z, r18
    21e4:	00 00       	nop
    21e6:	68 c0       	rjmp	.+208    	; 0x22b8 <GPIO_voidSetPinValue+0x1e4>
    21e8:	8b 81       	ldd	r24, Y+3	; 0x03
    21ea:	88 2f       	mov	r24, r24
    21ec:	90 e0       	ldi	r25, 0x00	; 0
    21ee:	00 97       	sbiw	r24, 0x00	; 0
    21f0:	c1 f0       	breq	.+48     	; 0x2222 <GPIO_voidSetPinValue+0x14e>
    21f2:	01 97       	sbiw	r24, 0x01	; 1
    21f4:	09 f0       	breq	.+2      	; 0x21f8 <GPIO_voidSetPinValue+0x124>
    21f6:	2b c0       	rjmp	.+86     	; 0x224e <GPIO_voidSetPinValue+0x17a>
    21f8:	85 e3       	ldi	r24, 0x35	; 53
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	25 e3       	ldi	r18, 0x35	; 53
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	f9 01       	movw	r30, r18
    2202:	20 81       	ld	r18, Z
    2204:	62 2f       	mov	r22, r18
    2206:	2a 81       	ldd	r18, Y+2	; 0x02
    2208:	42 2f       	mov	r20, r18
    220a:	50 e0       	ldi	r21, 0x00	; 0
    220c:	21 e0       	ldi	r18, 0x01	; 1
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	02 c0       	rjmp	.+4      	; 0x2216 <GPIO_voidSetPinValue+0x142>
    2212:	22 0f       	add	r18, r18
    2214:	33 1f       	adc	r19, r19
    2216:	4a 95       	dec	r20
    2218:	e2 f7       	brpl	.-8      	; 0x2212 <GPIO_voidSetPinValue+0x13e>
    221a:	26 2b       	or	r18, r22
    221c:	fc 01       	movw	r30, r24
    221e:	20 83       	st	Z, r18
    2220:	16 c0       	rjmp	.+44     	; 0x224e <GPIO_voidSetPinValue+0x17a>
    2222:	85 e3       	ldi	r24, 0x35	; 53
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	25 e3       	ldi	r18, 0x35	; 53
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	f9 01       	movw	r30, r18
    222c:	20 81       	ld	r18, Z
    222e:	62 2f       	mov	r22, r18
    2230:	2a 81       	ldd	r18, Y+2	; 0x02
    2232:	42 2f       	mov	r20, r18
    2234:	50 e0       	ldi	r21, 0x00	; 0
    2236:	21 e0       	ldi	r18, 0x01	; 1
    2238:	30 e0       	ldi	r19, 0x00	; 0
    223a:	02 c0       	rjmp	.+4      	; 0x2240 <GPIO_voidSetPinValue+0x16c>
    223c:	22 0f       	add	r18, r18
    223e:	33 1f       	adc	r19, r19
    2240:	4a 95       	dec	r20
    2242:	e2 f7       	brpl	.-8      	; 0x223c <GPIO_voidSetPinValue+0x168>
    2244:	20 95       	com	r18
    2246:	26 23       	and	r18, r22
    2248:	fc 01       	movw	r30, r24
    224a:	20 83       	st	Z, r18
    224c:	00 00       	nop
    224e:	34 c0       	rjmp	.+104    	; 0x22b8 <GPIO_voidSetPinValue+0x1e4>
    2250:	8b 81       	ldd	r24, Y+3	; 0x03
    2252:	88 2f       	mov	r24, r24
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	00 97       	sbiw	r24, 0x00	; 0
    2258:	c1 f0       	breq	.+48     	; 0x228a <GPIO_voidSetPinValue+0x1b6>
    225a:	01 97       	sbiw	r24, 0x01	; 1
    225c:	09 f0       	breq	.+2      	; 0x2260 <GPIO_voidSetPinValue+0x18c>
    225e:	2b c0       	rjmp	.+86     	; 0x22b6 <GPIO_voidSetPinValue+0x1e2>
    2260:	82 e3       	ldi	r24, 0x32	; 50
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	22 e3       	ldi	r18, 0x32	; 50
    2266:	30 e0       	ldi	r19, 0x00	; 0
    2268:	f9 01       	movw	r30, r18
    226a:	20 81       	ld	r18, Z
    226c:	62 2f       	mov	r22, r18
    226e:	2a 81       	ldd	r18, Y+2	; 0x02
    2270:	42 2f       	mov	r20, r18
    2272:	50 e0       	ldi	r21, 0x00	; 0
    2274:	21 e0       	ldi	r18, 0x01	; 1
    2276:	30 e0       	ldi	r19, 0x00	; 0
    2278:	02 c0       	rjmp	.+4      	; 0x227e <GPIO_voidSetPinValue+0x1aa>
    227a:	22 0f       	add	r18, r18
    227c:	33 1f       	adc	r19, r19
    227e:	4a 95       	dec	r20
    2280:	e2 f7       	brpl	.-8      	; 0x227a <GPIO_voidSetPinValue+0x1a6>
    2282:	26 2b       	or	r18, r22
    2284:	fc 01       	movw	r30, r24
    2286:	20 83       	st	Z, r18
    2288:	16 c0       	rjmp	.+44     	; 0x22b6 <GPIO_voidSetPinValue+0x1e2>
    228a:	82 e3       	ldi	r24, 0x32	; 50
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	22 e3       	ldi	r18, 0x32	; 50
    2290:	30 e0       	ldi	r19, 0x00	; 0
    2292:	f9 01       	movw	r30, r18
    2294:	20 81       	ld	r18, Z
    2296:	62 2f       	mov	r22, r18
    2298:	2a 81       	ldd	r18, Y+2	; 0x02
    229a:	42 2f       	mov	r20, r18
    229c:	50 e0       	ldi	r21, 0x00	; 0
    229e:	21 e0       	ldi	r18, 0x01	; 1
    22a0:	30 e0       	ldi	r19, 0x00	; 0
    22a2:	02 c0       	rjmp	.+4      	; 0x22a8 <GPIO_voidSetPinValue+0x1d4>
    22a4:	22 0f       	add	r18, r18
    22a6:	33 1f       	adc	r19, r19
    22a8:	4a 95       	dec	r20
    22aa:	e2 f7       	brpl	.-8      	; 0x22a4 <GPIO_voidSetPinValue+0x1d0>
    22ac:	20 95       	com	r18
    22ae:	26 23       	and	r18, r22
    22b0:	fc 01       	movw	r30, r24
    22b2:	20 83       	st	Z, r18
    22b4:	00 00       	nop
    22b6:	00 00       	nop
    22b8:	00 00       	nop
    22ba:	0f 90       	pop	r0
    22bc:	0f 90       	pop	r0
    22be:	0f 90       	pop	r0
    22c0:	df 91       	pop	r29
    22c2:	cf 91       	pop	r28
    22c4:	08 95       	ret

000022c6 <GPIO_u8GetPinValue>:
    22c6:	cf 93       	push	r28
    22c8:	df 93       	push	r29
    22ca:	00 d0       	rcall	.+0      	; 0x22cc <GPIO_u8GetPinValue+0x6>
    22cc:	1f 92       	push	r1
    22ce:	cd b7       	in	r28, 0x3d	; 61
    22d0:	de b7       	in	r29, 0x3e	; 62
    22d2:	8a 83       	std	Y+2, r24	; 0x02
    22d4:	6b 83       	std	Y+3, r22	; 0x03
    22d6:	19 82       	std	Y+1, r1	; 0x01
    22d8:	8b 81       	ldd	r24, Y+3	; 0x03
    22da:	88 30       	cpi	r24, 0x08	; 8
    22dc:	08 f0       	brcs	.+2      	; 0x22e0 <GPIO_u8GetPinValue+0x1a>
    22de:	56 c0       	rjmp	.+172    	; 0x238c <GPIO_u8GetPinValue+0xc6>
    22e0:	8a 81       	ldd	r24, Y+2	; 0x02
    22e2:	88 2f       	mov	r24, r24
    22e4:	90 e0       	ldi	r25, 0x00	; 0
    22e6:	81 30       	cpi	r24, 0x01	; 1
    22e8:	91 05       	cpc	r25, r1
    22ea:	e9 f0       	breq	.+58     	; 0x2326 <GPIO_u8GetPinValue+0x60>
    22ec:	82 30       	cpi	r24, 0x02	; 2
    22ee:	91 05       	cpc	r25, r1
    22f0:	1c f4       	brge	.+6      	; 0x22f8 <GPIO_u8GetPinValue+0x32>
    22f2:	89 2b       	or	r24, r25
    22f4:	39 f0       	breq	.+14     	; 0x2304 <GPIO_u8GetPinValue+0x3e>
    22f6:	4a c0       	rjmp	.+148    	; 0x238c <GPIO_u8GetPinValue+0xc6>
    22f8:	82 30       	cpi	r24, 0x02	; 2
    22fa:	91 05       	cpc	r25, r1
    22fc:	29 f1       	breq	.+74     	; 0x2348 <GPIO_u8GetPinValue+0x82>
    22fe:	03 97       	sbiw	r24, 0x03	; 3
    2300:	a1 f1       	breq	.+104    	; 0x236a <GPIO_u8GetPinValue+0xa4>
    2302:	44 c0       	rjmp	.+136    	; 0x238c <GPIO_u8GetPinValue+0xc6>
    2304:	89 e3       	ldi	r24, 0x39	; 57
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	fc 01       	movw	r30, r24
    230a:	80 81       	ld	r24, Z
    230c:	88 2f       	mov	r24, r24
    230e:	90 e0       	ldi	r25, 0x00	; 0
    2310:	2b 81       	ldd	r18, Y+3	; 0x03
    2312:	22 2f       	mov	r18, r18
    2314:	30 e0       	ldi	r19, 0x00	; 0
    2316:	02 c0       	rjmp	.+4      	; 0x231c <GPIO_u8GetPinValue+0x56>
    2318:	95 95       	asr	r25
    231a:	87 95       	ror	r24
    231c:	2a 95       	dec	r18
    231e:	e2 f7       	brpl	.-8      	; 0x2318 <GPIO_u8GetPinValue+0x52>
    2320:	81 70       	andi	r24, 0x01	; 1
    2322:	89 83       	std	Y+1, r24	; 0x01
    2324:	33 c0       	rjmp	.+102    	; 0x238c <GPIO_u8GetPinValue+0xc6>
    2326:	86 e3       	ldi	r24, 0x36	; 54
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	fc 01       	movw	r30, r24
    232c:	80 81       	ld	r24, Z
    232e:	88 2f       	mov	r24, r24
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	2b 81       	ldd	r18, Y+3	; 0x03
    2334:	22 2f       	mov	r18, r18
    2336:	30 e0       	ldi	r19, 0x00	; 0
    2338:	02 c0       	rjmp	.+4      	; 0x233e <GPIO_u8GetPinValue+0x78>
    233a:	95 95       	asr	r25
    233c:	87 95       	ror	r24
    233e:	2a 95       	dec	r18
    2340:	e2 f7       	brpl	.-8      	; 0x233a <GPIO_u8GetPinValue+0x74>
    2342:	81 70       	andi	r24, 0x01	; 1
    2344:	89 83       	std	Y+1, r24	; 0x01
    2346:	22 c0       	rjmp	.+68     	; 0x238c <GPIO_u8GetPinValue+0xc6>
    2348:	83 e3       	ldi	r24, 0x33	; 51
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	fc 01       	movw	r30, r24
    234e:	80 81       	ld	r24, Z
    2350:	88 2f       	mov	r24, r24
    2352:	90 e0       	ldi	r25, 0x00	; 0
    2354:	2b 81       	ldd	r18, Y+3	; 0x03
    2356:	22 2f       	mov	r18, r18
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	02 c0       	rjmp	.+4      	; 0x2360 <GPIO_u8GetPinValue+0x9a>
    235c:	95 95       	asr	r25
    235e:	87 95       	ror	r24
    2360:	2a 95       	dec	r18
    2362:	e2 f7       	brpl	.-8      	; 0x235c <GPIO_u8GetPinValue+0x96>
    2364:	81 70       	andi	r24, 0x01	; 1
    2366:	89 83       	std	Y+1, r24	; 0x01
    2368:	11 c0       	rjmp	.+34     	; 0x238c <GPIO_u8GetPinValue+0xc6>
    236a:	80 e3       	ldi	r24, 0x30	; 48
    236c:	90 e0       	ldi	r25, 0x00	; 0
    236e:	fc 01       	movw	r30, r24
    2370:	80 81       	ld	r24, Z
    2372:	88 2f       	mov	r24, r24
    2374:	90 e0       	ldi	r25, 0x00	; 0
    2376:	2b 81       	ldd	r18, Y+3	; 0x03
    2378:	22 2f       	mov	r18, r18
    237a:	30 e0       	ldi	r19, 0x00	; 0
    237c:	02 c0       	rjmp	.+4      	; 0x2382 <GPIO_u8GetPinValue+0xbc>
    237e:	95 95       	asr	r25
    2380:	87 95       	ror	r24
    2382:	2a 95       	dec	r18
    2384:	e2 f7       	brpl	.-8      	; 0x237e <GPIO_u8GetPinValue+0xb8>
    2386:	81 70       	andi	r24, 0x01	; 1
    2388:	89 83       	std	Y+1, r24	; 0x01
    238a:	00 00       	nop
    238c:	89 81       	ldd	r24, Y+1	; 0x01
    238e:	0f 90       	pop	r0
    2390:	0f 90       	pop	r0
    2392:	0f 90       	pop	r0
    2394:	df 91       	pop	r29
    2396:	cf 91       	pop	r28
    2398:	08 95       	ret

0000239a <GPIO_voidTogglePin>:
    239a:	cf 93       	push	r28
    239c:	df 93       	push	r29
    239e:	00 d0       	rcall	.+0      	; 0x23a0 <GPIO_voidTogglePin+0x6>
    23a0:	cd b7       	in	r28, 0x3d	; 61
    23a2:	de b7       	in	r29, 0x3e	; 62
    23a4:	89 83       	std	Y+1, r24	; 0x01
    23a6:	6a 83       	std	Y+2, r22	; 0x02
    23a8:	8a 81       	ldd	r24, Y+2	; 0x02
    23aa:	88 30       	cpi	r24, 0x08	; 8
    23ac:	08 f0       	brcs	.+2      	; 0x23b0 <GPIO_voidTogglePin+0x16>
    23ae:	67 c0       	rjmp	.+206    	; 0x247e <GPIO_voidTogglePin+0xe4>
    23b0:	89 81       	ldd	r24, Y+1	; 0x01
    23b2:	88 2f       	mov	r24, r24
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	81 30       	cpi	r24, 0x01	; 1
    23b8:	91 05       	cpc	r25, r1
    23ba:	11 f1       	breq	.+68     	; 0x2400 <GPIO_voidTogglePin+0x66>
    23bc:	82 30       	cpi	r24, 0x02	; 2
    23be:	91 05       	cpc	r25, r1
    23c0:	1c f4       	brge	.+6      	; 0x23c8 <GPIO_voidTogglePin+0x2e>
    23c2:	89 2b       	or	r24, r25
    23c4:	41 f0       	breq	.+16     	; 0x23d6 <GPIO_voidTogglePin+0x3c>
    23c6:	5b c0       	rjmp	.+182    	; 0x247e <GPIO_voidTogglePin+0xe4>
    23c8:	82 30       	cpi	r24, 0x02	; 2
    23ca:	91 05       	cpc	r25, r1
    23cc:	71 f1       	breq	.+92     	; 0x242a <GPIO_voidTogglePin+0x90>
    23ce:	03 97       	sbiw	r24, 0x03	; 3
    23d0:	09 f4       	brne	.+2      	; 0x23d4 <GPIO_voidTogglePin+0x3a>
    23d2:	40 c0       	rjmp	.+128    	; 0x2454 <GPIO_voidTogglePin+0xba>
    23d4:	54 c0       	rjmp	.+168    	; 0x247e <GPIO_voidTogglePin+0xe4>
    23d6:	8b e3       	ldi	r24, 0x3B	; 59
    23d8:	90 e0       	ldi	r25, 0x00	; 0
    23da:	2b e3       	ldi	r18, 0x3B	; 59
    23dc:	30 e0       	ldi	r19, 0x00	; 0
    23de:	f9 01       	movw	r30, r18
    23e0:	20 81       	ld	r18, Z
    23e2:	62 2f       	mov	r22, r18
    23e4:	2a 81       	ldd	r18, Y+2	; 0x02
    23e6:	42 2f       	mov	r20, r18
    23e8:	50 e0       	ldi	r21, 0x00	; 0
    23ea:	21 e0       	ldi	r18, 0x01	; 1
    23ec:	30 e0       	ldi	r19, 0x00	; 0
    23ee:	02 c0       	rjmp	.+4      	; 0x23f4 <GPIO_voidTogglePin+0x5a>
    23f0:	22 0f       	add	r18, r18
    23f2:	33 1f       	adc	r19, r19
    23f4:	4a 95       	dec	r20
    23f6:	e2 f7       	brpl	.-8      	; 0x23f0 <GPIO_voidTogglePin+0x56>
    23f8:	26 27       	eor	r18, r22
    23fa:	fc 01       	movw	r30, r24
    23fc:	20 83       	st	Z, r18
    23fe:	3f c0       	rjmp	.+126    	; 0x247e <GPIO_voidTogglePin+0xe4>
    2400:	88 e3       	ldi	r24, 0x38	; 56
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	28 e3       	ldi	r18, 0x38	; 56
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	f9 01       	movw	r30, r18
    240a:	20 81       	ld	r18, Z
    240c:	62 2f       	mov	r22, r18
    240e:	2a 81       	ldd	r18, Y+2	; 0x02
    2410:	42 2f       	mov	r20, r18
    2412:	50 e0       	ldi	r21, 0x00	; 0
    2414:	21 e0       	ldi	r18, 0x01	; 1
    2416:	30 e0       	ldi	r19, 0x00	; 0
    2418:	02 c0       	rjmp	.+4      	; 0x241e <GPIO_voidTogglePin+0x84>
    241a:	22 0f       	add	r18, r18
    241c:	33 1f       	adc	r19, r19
    241e:	4a 95       	dec	r20
    2420:	e2 f7       	brpl	.-8      	; 0x241a <GPIO_voidTogglePin+0x80>
    2422:	26 27       	eor	r18, r22
    2424:	fc 01       	movw	r30, r24
    2426:	20 83       	st	Z, r18
    2428:	2a c0       	rjmp	.+84     	; 0x247e <GPIO_voidTogglePin+0xe4>
    242a:	85 e3       	ldi	r24, 0x35	; 53
    242c:	90 e0       	ldi	r25, 0x00	; 0
    242e:	25 e3       	ldi	r18, 0x35	; 53
    2430:	30 e0       	ldi	r19, 0x00	; 0
    2432:	f9 01       	movw	r30, r18
    2434:	20 81       	ld	r18, Z
    2436:	62 2f       	mov	r22, r18
    2438:	2a 81       	ldd	r18, Y+2	; 0x02
    243a:	42 2f       	mov	r20, r18
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	21 e0       	ldi	r18, 0x01	; 1
    2440:	30 e0       	ldi	r19, 0x00	; 0
    2442:	02 c0       	rjmp	.+4      	; 0x2448 <GPIO_voidTogglePin+0xae>
    2444:	22 0f       	add	r18, r18
    2446:	33 1f       	adc	r19, r19
    2448:	4a 95       	dec	r20
    244a:	e2 f7       	brpl	.-8      	; 0x2444 <GPIO_voidTogglePin+0xaa>
    244c:	26 27       	eor	r18, r22
    244e:	fc 01       	movw	r30, r24
    2450:	20 83       	st	Z, r18
    2452:	15 c0       	rjmp	.+42     	; 0x247e <GPIO_voidTogglePin+0xe4>
    2454:	82 e3       	ldi	r24, 0x32	; 50
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	22 e3       	ldi	r18, 0x32	; 50
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	f9 01       	movw	r30, r18
    245e:	20 81       	ld	r18, Z
    2460:	62 2f       	mov	r22, r18
    2462:	2a 81       	ldd	r18, Y+2	; 0x02
    2464:	42 2f       	mov	r20, r18
    2466:	50 e0       	ldi	r21, 0x00	; 0
    2468:	21 e0       	ldi	r18, 0x01	; 1
    246a:	30 e0       	ldi	r19, 0x00	; 0
    246c:	02 c0       	rjmp	.+4      	; 0x2472 <GPIO_voidTogglePin+0xd8>
    246e:	22 0f       	add	r18, r18
    2470:	33 1f       	adc	r19, r19
    2472:	4a 95       	dec	r20
    2474:	e2 f7       	brpl	.-8      	; 0x246e <GPIO_voidTogglePin+0xd4>
    2476:	26 27       	eor	r18, r22
    2478:	fc 01       	movw	r30, r24
    247a:	20 83       	st	Z, r18
    247c:	00 00       	nop
    247e:	00 00       	nop
    2480:	0f 90       	pop	r0
    2482:	0f 90       	pop	r0
    2484:	df 91       	pop	r29
    2486:	cf 91       	pop	r28
    2488:	08 95       	ret

0000248a <GPIO_voidSPI_SlaveInit>:
    248a:	cf 93       	push	r28
    248c:	df 93       	push	r29
    248e:	cd b7       	in	r28, 0x3d	; 61
    2490:	de b7       	in	r29, 0x3e	; 62
    2492:	40 e0       	ldi	r20, 0x00	; 0
    2494:	65 e0       	ldi	r22, 0x05	; 5
    2496:	81 e0       	ldi	r24, 0x01	; 1
    2498:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
    249c:	40 e0       	ldi	r20, 0x00	; 0
    249e:	67 e0       	ldi	r22, 0x07	; 7
    24a0:	81 e0       	ldi	r24, 0x01	; 1
    24a2:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
    24a6:	41 e0       	ldi	r20, 0x01	; 1
    24a8:	66 e0       	ldi	r22, 0x06	; 6
    24aa:	81 e0       	ldi	r24, 0x01	; 1
    24ac:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
    24b0:	40 e0       	ldi	r20, 0x00	; 0
    24b2:	64 e0       	ldi	r22, 0x04	; 4
    24b4:	81 e0       	ldi	r24, 0x01	; 1
    24b6:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <GPIO_voidSetPinDirection>
    24ba:	00 00       	nop
    24bc:	df 91       	pop	r29
    24be:	cf 91       	pop	r28
    24c0:	08 95       	ret

000024c2 <PWM_voidInit>:
    24c2:	cf 93       	push	r28
    24c4:	df 93       	push	r29
    24c6:	00 d0       	rcall	.+0      	; 0x24c8 <PWM_voidInit+0x6>
    24c8:	cd b7       	in	r28, 0x3d	; 61
    24ca:	de b7       	in	r29, 0x3e	; 62
    24cc:	9a 83       	std	Y+2, r25	; 0x02
    24ce:	89 83       	std	Y+1, r24	; 0x01
    24d0:	89 81       	ldd	r24, Y+1	; 0x01
    24d2:	9a 81       	ldd	r25, Y+2	; 0x02
    24d4:	fc 01       	movw	r30, r24
    24d6:	80 81       	ld	r24, Z
    24d8:	88 2f       	mov	r24, r24
    24da:	90 e0       	ldi	r25, 0x00	; 0
    24dc:	81 30       	cpi	r24, 0x01	; 1
    24de:	91 05       	cpc	r25, r1
    24e0:	09 f4       	brne	.+2      	; 0x24e4 <PWM_voidInit+0x22>
    24e2:	6d c0       	rjmp	.+218    	; 0x25be <PWM_voidInit+0xfc>
    24e4:	82 30       	cpi	r24, 0x02	; 2
    24e6:	91 05       	cpc	r25, r1
    24e8:	09 f4       	brne	.+2      	; 0x24ec <PWM_voidInit+0x2a>
    24ea:	e9 c0       	rjmp	.+466    	; 0x26be <PWM_voidInit+0x1fc>
    24ec:	89 2b       	or	r24, r25
    24ee:	09 f0       	breq	.+2      	; 0x24f2 <PWM_voidInit+0x30>
    24f0:	59 c1       	rjmp	.+690    	; 0x27a4 <PWM_voidInit+0x2e2>
    24f2:	83 e5       	ldi	r24, 0x53	; 83
    24f4:	90 e0       	ldi	r25, 0x00	; 0
    24f6:	23 e5       	ldi	r18, 0x53	; 83
    24f8:	30 e0       	ldi	r19, 0x00	; 0
    24fa:	f9 01       	movw	r30, r18
    24fc:	40 81       	ld	r20, Z
    24fe:	29 81       	ldd	r18, Y+1	; 0x01
    2500:	3a 81       	ldd	r19, Y+2	; 0x02
    2502:	f9 01       	movw	r30, r18
    2504:	21 81       	ldd	r18, Z+1	; 0x01
    2506:	24 2b       	or	r18, r20
    2508:	fc 01       	movw	r30, r24
    250a:	20 83       	st	Z, r18
    250c:	89 81       	ldd	r24, Y+1	; 0x01
    250e:	9a 81       	ldd	r25, Y+2	; 0x02
    2510:	fc 01       	movw	r30, r24
    2512:	82 81       	ldd	r24, Z+2	; 0x02
    2514:	88 2f       	mov	r24, r24
    2516:	90 e0       	ldi	r25, 0x00	; 0
    2518:	82 30       	cpi	r24, 0x02	; 2
    251a:	91 05       	cpc	r25, r1
    251c:	e9 f0       	breq	.+58     	; 0x2558 <PWM_voidInit+0x96>
    251e:	83 30       	cpi	r24, 0x03	; 3
    2520:	91 05       	cpc	r25, r1
    2522:	2c f4       	brge	.+10     	; 0x252e <PWM_voidInit+0x6c>
    2524:	00 97       	sbiw	r24, 0x00	; 0
    2526:	61 f0       	breq	.+24     	; 0x2540 <PWM_voidInit+0x7e>
    2528:	01 97       	sbiw	r24, 0x01	; 1
    252a:	79 f0       	breq	.+30     	; 0x254a <PWM_voidInit+0x88>
    252c:	31 c0       	rjmp	.+98     	; 0x2590 <PWM_voidInit+0xce>
    252e:	84 30       	cpi	r24, 0x04	; 4
    2530:	91 05       	cpc	r25, r1
    2532:	01 f1       	breq	.+64     	; 0x2574 <PWM_voidInit+0xb2>
    2534:	84 30       	cpi	r24, 0x04	; 4
    2536:	91 05       	cpc	r25, r1
    2538:	b4 f0       	brlt	.+44     	; 0x2566 <PWM_voidInit+0xa4>
    253a:	05 97       	sbiw	r24, 0x05	; 5
    253c:	11 f1       	breq	.+68     	; 0x2582 <PWM_voidInit+0xc0>
    253e:	28 c0       	rjmp	.+80     	; 0x2590 <PWM_voidInit+0xce>
    2540:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <TIMER0_Prescaler+0x1>
    2544:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <TIMER0_Prescaler>
    2548:	23 c0       	rjmp	.+70     	; 0x2590 <PWM_voidInit+0xce>
    254a:	81 e0       	ldi	r24, 0x01	; 1
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <TIMER0_Prescaler+0x1>
    2552:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <TIMER0_Prescaler>
    2556:	1c c0       	rjmp	.+56     	; 0x2590 <PWM_voidInit+0xce>
    2558:	88 e0       	ldi	r24, 0x08	; 8
    255a:	90 e0       	ldi	r25, 0x00	; 0
    255c:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <TIMER0_Prescaler+0x1>
    2560:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <TIMER0_Prescaler>
    2564:	15 c0       	rjmp	.+42     	; 0x2590 <PWM_voidInit+0xce>
    2566:	80 e4       	ldi	r24, 0x40	; 64
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <TIMER0_Prescaler+0x1>
    256e:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <TIMER0_Prescaler>
    2572:	0e c0       	rjmp	.+28     	; 0x2590 <PWM_voidInit+0xce>
    2574:	80 e0       	ldi	r24, 0x00	; 0
    2576:	91 e0       	ldi	r25, 0x01	; 1
    2578:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <TIMER0_Prescaler+0x1>
    257c:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <TIMER0_Prescaler>
    2580:	07 c0       	rjmp	.+14     	; 0x2590 <PWM_voidInit+0xce>
    2582:	80 e0       	ldi	r24, 0x00	; 0
    2584:	94 e0       	ldi	r25, 0x04	; 4
    2586:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <TIMER0_Prescaler+0x1>
    258a:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <TIMER0_Prescaler>
    258e:	00 00       	nop
    2590:	83 e5       	ldi	r24, 0x53	; 83
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	23 e5       	ldi	r18, 0x53	; 83
    2596:	30 e0       	ldi	r19, 0x00	; 0
    2598:	f9 01       	movw	r30, r18
    259a:	20 81       	ld	r18, Z
    259c:	28 7f       	andi	r18, 0xF8	; 248
    259e:	fc 01       	movw	r30, r24
    25a0:	20 83       	st	Z, r18
    25a2:	83 e5       	ldi	r24, 0x53	; 83
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	23 e5       	ldi	r18, 0x53	; 83
    25a8:	30 e0       	ldi	r19, 0x00	; 0
    25aa:	f9 01       	movw	r30, r18
    25ac:	40 81       	ld	r20, Z
    25ae:	29 81       	ldd	r18, Y+1	; 0x01
    25b0:	3a 81       	ldd	r19, Y+2	; 0x02
    25b2:	f9 01       	movw	r30, r18
    25b4:	22 81       	ldd	r18, Z+2	; 0x02
    25b6:	24 2b       	or	r18, r20
    25b8:	fc 01       	movw	r30, r24
    25ba:	20 83       	st	Z, r18
    25bc:	f3 c0       	rjmp	.+486    	; 0x27a4 <PWM_voidInit+0x2e2>
    25be:	8f e4       	ldi	r24, 0x4F	; 79
    25c0:	90 e0       	ldi	r25, 0x00	; 0
    25c2:	2f e4       	ldi	r18, 0x4F	; 79
    25c4:	30 e0       	ldi	r19, 0x00	; 0
    25c6:	f9 01       	movw	r30, r18
    25c8:	20 81       	ld	r18, Z
    25ca:	42 2f       	mov	r20, r18
    25cc:	29 81       	ldd	r18, Y+1	; 0x01
    25ce:	3a 81       	ldd	r19, Y+2	; 0x02
    25d0:	f9 01       	movw	r30, r18
    25d2:	21 81       	ldd	r18, Z+1	; 0x01
    25d4:	23 70       	andi	r18, 0x03	; 3
    25d6:	24 2b       	or	r18, r20
    25d8:	fc 01       	movw	r30, r24
    25da:	20 83       	st	Z, r18
    25dc:	8e e4       	ldi	r24, 0x4E	; 78
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	2e e4       	ldi	r18, 0x4E	; 78
    25e2:	30 e0       	ldi	r19, 0x00	; 0
    25e4:	f9 01       	movw	r30, r18
    25e6:	20 81       	ld	r18, Z
    25e8:	42 2f       	mov	r20, r18
    25ea:	29 81       	ldd	r18, Y+1	; 0x01
    25ec:	3a 81       	ldd	r19, Y+2	; 0x02
    25ee:	f9 01       	movw	r30, r18
    25f0:	21 81       	ldd	r18, Z+1	; 0x01
    25f2:	26 95       	lsr	r18
    25f4:	26 95       	lsr	r18
    25f6:	22 2f       	mov	r18, r18
    25f8:	30 e0       	ldi	r19, 0x00	; 0
    25fa:	22 0f       	add	r18, r18
    25fc:	33 1f       	adc	r19, r19
    25fe:	22 0f       	add	r18, r18
    2600:	33 1f       	adc	r19, r19
    2602:	22 0f       	add	r18, r18
    2604:	33 1f       	adc	r19, r19
    2606:	24 2b       	or	r18, r20
    2608:	fc 01       	movw	r30, r24
    260a:	20 83       	st	Z, r18
    260c:	89 81       	ldd	r24, Y+1	; 0x01
    260e:	9a 81       	ldd	r25, Y+2	; 0x02
    2610:	fc 01       	movw	r30, r24
    2612:	82 81       	ldd	r24, Z+2	; 0x02
    2614:	88 2f       	mov	r24, r24
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	82 30       	cpi	r24, 0x02	; 2
    261a:	91 05       	cpc	r25, r1
    261c:	e9 f0       	breq	.+58     	; 0x2658 <PWM_voidInit+0x196>
    261e:	83 30       	cpi	r24, 0x03	; 3
    2620:	91 05       	cpc	r25, r1
    2622:	2c f4       	brge	.+10     	; 0x262e <PWM_voidInit+0x16c>
    2624:	00 97       	sbiw	r24, 0x00	; 0
    2626:	61 f0       	breq	.+24     	; 0x2640 <PWM_voidInit+0x17e>
    2628:	01 97       	sbiw	r24, 0x01	; 1
    262a:	79 f0       	breq	.+30     	; 0x264a <PWM_voidInit+0x188>
    262c:	31 c0       	rjmp	.+98     	; 0x2690 <PWM_voidInit+0x1ce>
    262e:	84 30       	cpi	r24, 0x04	; 4
    2630:	91 05       	cpc	r25, r1
    2632:	01 f1       	breq	.+64     	; 0x2674 <PWM_voidInit+0x1b2>
    2634:	84 30       	cpi	r24, 0x04	; 4
    2636:	91 05       	cpc	r25, r1
    2638:	b4 f0       	brlt	.+44     	; 0x2666 <PWM_voidInit+0x1a4>
    263a:	05 97       	sbiw	r24, 0x05	; 5
    263c:	11 f1       	breq	.+68     	; 0x2682 <PWM_voidInit+0x1c0>
    263e:	28 c0       	rjmp	.+80     	; 0x2690 <PWM_voidInit+0x1ce>
    2640:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <TIMER1_Prescaler+0x1>
    2644:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <TIMER1_Prescaler>
    2648:	23 c0       	rjmp	.+70     	; 0x2690 <PWM_voidInit+0x1ce>
    264a:	81 e0       	ldi	r24, 0x01	; 1
    264c:	90 e0       	ldi	r25, 0x00	; 0
    264e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <TIMER1_Prescaler+0x1>
    2652:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <TIMER1_Prescaler>
    2656:	1c c0       	rjmp	.+56     	; 0x2690 <PWM_voidInit+0x1ce>
    2658:	88 e0       	ldi	r24, 0x08	; 8
    265a:	90 e0       	ldi	r25, 0x00	; 0
    265c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <TIMER1_Prescaler+0x1>
    2660:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <TIMER1_Prescaler>
    2664:	15 c0       	rjmp	.+42     	; 0x2690 <PWM_voidInit+0x1ce>
    2666:	80 e4       	ldi	r24, 0x40	; 64
    2668:	90 e0       	ldi	r25, 0x00	; 0
    266a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <TIMER1_Prescaler+0x1>
    266e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <TIMER1_Prescaler>
    2672:	0e c0       	rjmp	.+28     	; 0x2690 <PWM_voidInit+0x1ce>
    2674:	80 e0       	ldi	r24, 0x00	; 0
    2676:	91 e0       	ldi	r25, 0x01	; 1
    2678:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <TIMER1_Prescaler+0x1>
    267c:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <TIMER1_Prescaler>
    2680:	07 c0       	rjmp	.+14     	; 0x2690 <PWM_voidInit+0x1ce>
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	94 e0       	ldi	r25, 0x04	; 4
    2686:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <TIMER1_Prescaler+0x1>
    268a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <TIMER1_Prescaler>
    268e:	00 00       	nop
    2690:	8e e4       	ldi	r24, 0x4E	; 78
    2692:	90 e0       	ldi	r25, 0x00	; 0
    2694:	2e e4       	ldi	r18, 0x4E	; 78
    2696:	30 e0       	ldi	r19, 0x00	; 0
    2698:	f9 01       	movw	r30, r18
    269a:	20 81       	ld	r18, Z
    269c:	28 7f       	andi	r18, 0xF8	; 248
    269e:	fc 01       	movw	r30, r24
    26a0:	20 83       	st	Z, r18
    26a2:	8e e4       	ldi	r24, 0x4E	; 78
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	2e e4       	ldi	r18, 0x4E	; 78
    26a8:	30 e0       	ldi	r19, 0x00	; 0
    26aa:	f9 01       	movw	r30, r18
    26ac:	40 81       	ld	r20, Z
    26ae:	29 81       	ldd	r18, Y+1	; 0x01
    26b0:	3a 81       	ldd	r19, Y+2	; 0x02
    26b2:	f9 01       	movw	r30, r18
    26b4:	22 81       	ldd	r18, Z+2	; 0x02
    26b6:	24 2b       	or	r18, r20
    26b8:	fc 01       	movw	r30, r24
    26ba:	20 83       	st	Z, r18
    26bc:	73 c0       	rjmp	.+230    	; 0x27a4 <PWM_voidInit+0x2e2>
    26be:	85 e4       	ldi	r24, 0x45	; 69
    26c0:	90 e0       	ldi	r25, 0x00	; 0
    26c2:	25 e4       	ldi	r18, 0x45	; 69
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	f9 01       	movw	r30, r18
    26c8:	40 81       	ld	r20, Z
    26ca:	29 81       	ldd	r18, Y+1	; 0x01
    26cc:	3a 81       	ldd	r19, Y+2	; 0x02
    26ce:	f9 01       	movw	r30, r18
    26d0:	21 81       	ldd	r18, Z+1	; 0x01
    26d2:	24 2b       	or	r18, r20
    26d4:	fc 01       	movw	r30, r24
    26d6:	20 83       	st	Z, r18
    26d8:	89 81       	ldd	r24, Y+1	; 0x01
    26da:	9a 81       	ldd	r25, Y+2	; 0x02
    26dc:	fc 01       	movw	r30, r24
    26de:	82 81       	ldd	r24, Z+2	; 0x02
    26e0:	88 2f       	mov	r24, r24
    26e2:	90 e0       	ldi	r25, 0x00	; 0
    26e4:	09 2e       	mov	r0, r25
    26e6:	00 0c       	add	r0, r0
    26e8:	aa 0b       	sbc	r26, r26
    26ea:	bb 0b       	sbc	r27, r27
    26ec:	40 e0       	ldi	r20, 0x00	; 0
    26ee:	50 e0       	ldi	r21, 0x00	; 0
    26f0:	27 e0       	ldi	r18, 0x07	; 7
    26f2:	30 e0       	ldi	r19, 0x00	; 0
    26f4:	84 1b       	sub	r24, r20
    26f6:	95 0b       	sbc	r25, r21
    26f8:	28 17       	cp	r18, r24
    26fa:	39 07       	cpc	r19, r25
    26fc:	d8 f1       	brcs	.+118    	; 0x2774 <PWM_voidInit+0x2b2>
    26fe:	86 5d       	subi	r24, 0xD6	; 214
    2700:	9f 4f       	sbci	r25, 0xFF	; 255
    2702:	fc 01       	movw	r30, r24
    2704:	0c 94 54 18 	jmp	0x30a8	; 0x30a8 <__tablejump2__>
    2708:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <TIMER2_Prescaler+0x1>
    270c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <TIMER2_Prescaler>
    2710:	32 c0       	rjmp	.+100    	; 0x2776 <PWM_voidInit+0x2b4>
    2712:	81 e0       	ldi	r24, 0x01	; 1
    2714:	90 e0       	ldi	r25, 0x00	; 0
    2716:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    271a:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    271e:	2b c0       	rjmp	.+86     	; 0x2776 <PWM_voidInit+0x2b4>
    2720:	88 e0       	ldi	r24, 0x08	; 8
    2722:	90 e0       	ldi	r25, 0x00	; 0
    2724:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    2728:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    272c:	24 c0       	rjmp	.+72     	; 0x2776 <PWM_voidInit+0x2b4>
    272e:	80 e2       	ldi	r24, 0x20	; 32
    2730:	90 e0       	ldi	r25, 0x00	; 0
    2732:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    2736:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    273a:	1d c0       	rjmp	.+58     	; 0x2776 <PWM_voidInit+0x2b4>
    273c:	80 e4       	ldi	r24, 0x40	; 64
    273e:	90 e0       	ldi	r25, 0x00	; 0
    2740:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    2744:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    2748:	16 c0       	rjmp	.+44     	; 0x2776 <PWM_voidInit+0x2b4>
    274a:	80 e8       	ldi	r24, 0x80	; 128
    274c:	90 e0       	ldi	r25, 0x00	; 0
    274e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    2752:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    2756:	0f c0       	rjmp	.+30     	; 0x2776 <PWM_voidInit+0x2b4>
    2758:	80 e0       	ldi	r24, 0x00	; 0
    275a:	91 e0       	ldi	r25, 0x01	; 1
    275c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    2760:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    2764:	08 c0       	rjmp	.+16     	; 0x2776 <PWM_voidInit+0x2b4>
    2766:	80 e0       	ldi	r24, 0x00	; 0
    2768:	94 e0       	ldi	r25, 0x04	; 4
    276a:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <TIMER2_Prescaler+0x1>
    276e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <TIMER2_Prescaler>
    2772:	01 c0       	rjmp	.+2      	; 0x2776 <PWM_voidInit+0x2b4>
    2774:	00 00       	nop
    2776:	85 e4       	ldi	r24, 0x45	; 69
    2778:	90 e0       	ldi	r25, 0x00	; 0
    277a:	25 e4       	ldi	r18, 0x45	; 69
    277c:	30 e0       	ldi	r19, 0x00	; 0
    277e:	f9 01       	movw	r30, r18
    2780:	20 81       	ld	r18, Z
    2782:	28 7f       	andi	r18, 0xF8	; 248
    2784:	fc 01       	movw	r30, r24
    2786:	20 83       	st	Z, r18
    2788:	85 e4       	ldi	r24, 0x45	; 69
    278a:	90 e0       	ldi	r25, 0x00	; 0
    278c:	25 e4       	ldi	r18, 0x45	; 69
    278e:	30 e0       	ldi	r19, 0x00	; 0
    2790:	f9 01       	movw	r30, r18
    2792:	40 81       	ld	r20, Z
    2794:	29 81       	ldd	r18, Y+1	; 0x01
    2796:	3a 81       	ldd	r19, Y+2	; 0x02
    2798:	f9 01       	movw	r30, r18
    279a:	22 81       	ldd	r18, Z+2	; 0x02
    279c:	24 2b       	or	r18, r20
    279e:	fc 01       	movw	r30, r24
    27a0:	20 83       	st	Z, r18
    27a2:	00 00       	nop
    27a4:	00 00       	nop
    27a6:	0f 90       	pop	r0
    27a8:	0f 90       	pop	r0
    27aa:	df 91       	pop	r29
    27ac:	cf 91       	pop	r28
    27ae:	08 95       	ret

000027b0 <PWM_voidSetOCPin>:
    27b0:	cf 93       	push	r28
    27b2:	df 93       	push	r29
    27b4:	00 d0       	rcall	.+0      	; 0x27b6 <PWM_voidSetOCPin+0x6>
    27b6:	1f 92       	push	r1
    27b8:	cd b7       	in	r28, 0x3d	; 61
    27ba:	de b7       	in	r29, 0x3e	; 62
    27bc:	9a 83       	std	Y+2, r25	; 0x02
    27be:	89 83       	std	Y+1, r24	; 0x01
    27c0:	6b 83       	std	Y+3, r22	; 0x03
    27c2:	89 81       	ldd	r24, Y+1	; 0x01
    27c4:	9a 81       	ldd	r25, Y+2	; 0x02
    27c6:	fc 01       	movw	r30, r24
    27c8:	80 81       	ld	r24, Z
    27ca:	88 2f       	mov	r24, r24
    27cc:	90 e0       	ldi	r25, 0x00	; 0
    27ce:	81 30       	cpi	r24, 0x01	; 1
    27d0:	91 05       	cpc	r25, r1
    27d2:	89 f0       	breq	.+34     	; 0x27f6 <PWM_voidSetOCPin+0x46>
    27d4:	82 30       	cpi	r24, 0x02	; 2
    27d6:	91 05       	cpc	r25, r1
    27d8:	c9 f0       	breq	.+50     	; 0x280c <PWM_voidSetOCPin+0x5c>
    27da:	89 2b       	or	r24, r25
    27dc:	09 f0       	breq	.+2      	; 0x27e0 <PWM_voidSetOCPin+0x30>
    27de:	21 c0       	rjmp	.+66     	; 0x2822 <PWM_voidSetOCPin+0x72>
    27e0:	83 e5       	ldi	r24, 0x53	; 83
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	23 e5       	ldi	r18, 0x53	; 83
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	f9 01       	movw	r30, r18
    27ea:	30 81       	ld	r19, Z
    27ec:	2b 81       	ldd	r18, Y+3	; 0x03
    27ee:	23 2b       	or	r18, r19
    27f0:	fc 01       	movw	r30, r24
    27f2:	20 83       	st	Z, r18
    27f4:	16 c0       	rjmp	.+44     	; 0x2822 <PWM_voidSetOCPin+0x72>
    27f6:	8f e4       	ldi	r24, 0x4F	; 79
    27f8:	90 e0       	ldi	r25, 0x00	; 0
    27fa:	2f e4       	ldi	r18, 0x4F	; 79
    27fc:	30 e0       	ldi	r19, 0x00	; 0
    27fe:	f9 01       	movw	r30, r18
    2800:	30 81       	ld	r19, Z
    2802:	2b 81       	ldd	r18, Y+3	; 0x03
    2804:	23 2b       	or	r18, r19
    2806:	fc 01       	movw	r30, r24
    2808:	20 83       	st	Z, r18
    280a:	0b c0       	rjmp	.+22     	; 0x2822 <PWM_voidSetOCPin+0x72>
    280c:	85 e4       	ldi	r24, 0x45	; 69
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	25 e4       	ldi	r18, 0x45	; 69
    2812:	30 e0       	ldi	r19, 0x00	; 0
    2814:	f9 01       	movw	r30, r18
    2816:	30 81       	ld	r19, Z
    2818:	2b 81       	ldd	r18, Y+3	; 0x03
    281a:	23 2b       	or	r18, r19
    281c:	fc 01       	movw	r30, r24
    281e:	20 83       	st	Z, r18
    2820:	00 00       	nop
    2822:	00 00       	nop
    2824:	0f 90       	pop	r0
    2826:	0f 90       	pop	r0
    2828:	0f 90       	pop	r0
    282a:	df 91       	pop	r29
    282c:	cf 91       	pop	r28
    282e:	08 95       	ret

00002830 <PWM_voidPhaseFrequencyCorrectSetValues>:
    2830:	cf 93       	push	r28
    2832:	df 93       	push	r29
    2834:	cd b7       	in	r28, 0x3d	; 61
    2836:	de b7       	in	r29, 0x3e	; 62
    2838:	27 97       	sbiw	r28, 0x07	; 7
    283a:	0f b6       	in	r0, 0x3f	; 63
    283c:	f8 94       	cli
    283e:	de bf       	out	0x3e, r29	; 62
    2840:	0f be       	out	0x3f, r0	; 63
    2842:	cd bf       	out	0x3d, r28	; 61
    2844:	9a 83       	std	Y+2, r25	; 0x02
    2846:	89 83       	std	Y+1, r24	; 0x01
    2848:	6b 83       	std	Y+3, r22	; 0x03
    284a:	5d 83       	std	Y+5, r21	; 0x05
    284c:	4c 83       	std	Y+4, r20	; 0x04
    284e:	3f 83       	std	Y+7, r19	; 0x07
    2850:	2e 83       	std	Y+6, r18	; 0x06
    2852:	8e e4       	ldi	r24, 0x4E	; 78
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	2e e4       	ldi	r18, 0x4E	; 78
    2858:	30 e0       	ldi	r19, 0x00	; 0
    285a:	f9 01       	movw	r30, r18
    285c:	20 81       	ld	r18, Z
    285e:	20 61       	ori	r18, 0x10	; 16
    2860:	fc 01       	movw	r30, r24
    2862:	20 83       	st	Z, r18
    2864:	8e e4       	ldi	r24, 0x4E	; 78
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	2e e4       	ldi	r18, 0x4E	; 78
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	f9 01       	movw	r30, r18
    286e:	20 81       	ld	r18, Z
    2870:	27 7f       	andi	r18, 0xF7	; 247
    2872:	fc 01       	movw	r30, r24
    2874:	20 83       	st	Z, r18
    2876:	8f e4       	ldi	r24, 0x4F	; 79
    2878:	90 e0       	ldi	r25, 0x00	; 0
    287a:	2f e4       	ldi	r18, 0x4F	; 79
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	f9 01       	movw	r30, r18
    2880:	20 81       	ld	r18, Z
    2882:	2e 7f       	andi	r18, 0xFE	; 254
    2884:	fc 01       	movw	r30, r24
    2886:	20 83       	st	Z, r18
    2888:	8f e4       	ldi	r24, 0x4F	; 79
    288a:	90 e0       	ldi	r25, 0x00	; 0
    288c:	2f e4       	ldi	r18, 0x4F	; 79
    288e:	30 e0       	ldi	r19, 0x00	; 0
    2890:	f9 01       	movw	r30, r18
    2892:	20 81       	ld	r18, Z
    2894:	2d 7f       	andi	r18, 0xFD	; 253
    2896:	fc 01       	movw	r30, r24
    2898:	20 83       	st	Z, r18
    289a:	86 e4       	ldi	r24, 0x46	; 70
    289c:	90 e0       	ldi	r25, 0x00	; 0
    289e:	2c 81       	ldd	r18, Y+4	; 0x04
    28a0:	3d 81       	ldd	r19, Y+5	; 0x05
    28a2:	fc 01       	movw	r30, r24
    28a4:	31 83       	std	Z+1, r19	; 0x01
    28a6:	20 83       	st	Z, r18
    28a8:	8b 81       	ldd	r24, Y+3	; 0x03
    28aa:	80 32       	cpi	r24, 0x20	; 32
    28ac:	19 f0       	breq	.+6      	; 0x28b4 <PWM_voidPhaseFrequencyCorrectSetValues+0x84>
    28ae:	8b 81       	ldd	r24, Y+3	; 0x03
    28b0:	80 33       	cpi	r24, 0x30	; 48
    28b2:	41 f4       	brne	.+16     	; 0x28c4 <PWM_voidPhaseFrequencyCorrectSetValues+0x94>
    28b4:	88 e4       	ldi	r24, 0x48	; 72
    28b6:	90 e0       	ldi	r25, 0x00	; 0
    28b8:	2e 81       	ldd	r18, Y+6	; 0x06
    28ba:	3f 81       	ldd	r19, Y+7	; 0x07
    28bc:	fc 01       	movw	r30, r24
    28be:	31 83       	std	Z+1, r19	; 0x01
    28c0:	20 83       	st	Z, r18
    28c2:	0d c0       	rjmp	.+26     	; 0x28de <PWM_voidPhaseFrequencyCorrectSetValues+0xae>
    28c4:	8b 81       	ldd	r24, Y+3	; 0x03
    28c6:	80 38       	cpi	r24, 0x80	; 128
    28c8:	19 f0       	breq	.+6      	; 0x28d0 <PWM_voidPhaseFrequencyCorrectSetValues+0xa0>
    28ca:	8b 81       	ldd	r24, Y+3	; 0x03
    28cc:	80 3c       	cpi	r24, 0xC0	; 192
    28ce:	39 f4       	brne	.+14     	; 0x28de <PWM_voidPhaseFrequencyCorrectSetValues+0xae>
    28d0:	8a e4       	ldi	r24, 0x4A	; 74
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	2e 81       	ldd	r18, Y+6	; 0x06
    28d6:	3f 81       	ldd	r19, Y+7	; 0x07
    28d8:	fc 01       	movw	r30, r24
    28da:	31 83       	std	Z+1, r19	; 0x01
    28dc:	20 83       	st	Z, r18
    28de:	00 00       	nop
    28e0:	27 96       	adiw	r28, 0x07	; 7
    28e2:	0f b6       	in	r0, 0x3f	; 63
    28e4:	f8 94       	cli
    28e6:	de bf       	out	0x3e, r29	; 62
    28e8:	0f be       	out	0x3f, r0	; 63
    28ea:	cd bf       	out	0x3d, r28	; 61
    28ec:	df 91       	pop	r29
    28ee:	cf 91       	pop	r28
    28f0:	08 95       	ret

000028f2 <MCAL_SPI_voidInit>:
    28f2:	cf 93       	push	r28
    28f4:	df 93       	push	r29
    28f6:	00 d0       	rcall	.+0      	; 0x28f8 <MCAL_SPI_voidInit+0x6>
    28f8:	cd b7       	in	r28, 0x3d	; 61
    28fa:	de b7       	in	r29, 0x3e	; 62
    28fc:	9a 83       	std	Y+2, r25	; 0x02
    28fe:	89 83       	std	Y+1, r24	; 0x01
    2900:	89 81       	ldd	r24, Y+1	; 0x01
    2902:	9a 81       	ldd	r25, Y+2	; 0x02
    2904:	fc 01       	movw	r30, r24
    2906:	85 81       	ldd	r24, Z+5	; 0x05
    2908:	86 95       	lsr	r24
    290a:	86 95       	lsr	r24
    290c:	88 2f       	mov	r24, r24
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	81 70       	andi	r24, 0x01	; 1
    2912:	99 27       	eor	r25, r25
    2914:	89 2b       	or	r24, r25
    2916:	51 f0       	breq	.+20     	; 0x292c <MCAL_SPI_voidInit+0x3a>
    2918:	8e e2       	ldi	r24, 0x2E	; 46
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	2e e2       	ldi	r18, 0x2E	; 46
    291e:	30 e0       	ldi	r19, 0x00	; 0
    2920:	f9 01       	movw	r30, r18
    2922:	20 81       	ld	r18, Z
    2924:	21 60       	ori	r18, 0x01	; 1
    2926:	fc 01       	movw	r30, r24
    2928:	20 83       	st	Z, r18
    292a:	09 c0       	rjmp	.+18     	; 0x293e <MCAL_SPI_voidInit+0x4c>
    292c:	8e e2       	ldi	r24, 0x2E	; 46
    292e:	90 e0       	ldi	r25, 0x00	; 0
    2930:	2e e2       	ldi	r18, 0x2E	; 46
    2932:	30 e0       	ldi	r19, 0x00	; 0
    2934:	f9 01       	movw	r30, r18
    2936:	20 81       	ld	r18, Z
    2938:	2e 7f       	andi	r18, 0xFE	; 254
    293a:	fc 01       	movw	r30, r24
    293c:	20 83       	st	Z, r18
    293e:	8d e2       	ldi	r24, 0x2D	; 45
    2940:	90 e0       	ldi	r25, 0x00	; 0
    2942:	29 81       	ldd	r18, Y+1	; 0x01
    2944:	3a 81       	ldd	r19, Y+2	; 0x02
    2946:	f9 01       	movw	r30, r18
    2948:	40 81       	ld	r20, Z
    294a:	29 81       	ldd	r18, Y+1	; 0x01
    294c:	3a 81       	ldd	r19, Y+2	; 0x02
    294e:	f9 01       	movw	r30, r18
    2950:	21 81       	ldd	r18, Z+1	; 0x01
    2952:	42 2b       	or	r20, r18
    2954:	29 81       	ldd	r18, Y+1	; 0x01
    2956:	3a 81       	ldd	r19, Y+2	; 0x02
    2958:	f9 01       	movw	r30, r18
    295a:	22 81       	ldd	r18, Z+2	; 0x02
    295c:	42 2b       	or	r20, r18
    295e:	29 81       	ldd	r18, Y+1	; 0x01
    2960:	3a 81       	ldd	r19, Y+2	; 0x02
    2962:	f9 01       	movw	r30, r18
    2964:	23 81       	ldd	r18, Z+3	; 0x03
    2966:	42 2b       	or	r20, r18
    2968:	29 81       	ldd	r18, Y+1	; 0x01
    296a:	3a 81       	ldd	r19, Y+2	; 0x02
    296c:	f9 01       	movw	r30, r18
    296e:	24 81       	ldd	r18, Z+4	; 0x04
    2970:	42 2b       	or	r20, r18
    2972:	29 81       	ldd	r18, Y+1	; 0x01
    2974:	3a 81       	ldd	r19, Y+2	; 0x02
    2976:	f9 01       	movw	r30, r18
    2978:	25 81       	ldd	r18, Z+5	; 0x05
    297a:	23 70       	andi	r18, 0x03	; 3
    297c:	24 2b       	or	r18, r20
    297e:	20 64       	ori	r18, 0x40	; 64
    2980:	fc 01       	movw	r30, r24
    2982:	20 83       	st	Z, r18
    2984:	00 00       	nop
    2986:	0f 90       	pop	r0
    2988:	0f 90       	pop	r0
    298a:	df 91       	pop	r29
    298c:	cf 91       	pop	r28
    298e:	08 95       	ret

00002990 <MCAL_SPI_voidByteExchangeAsynch>:
    2990:	cf 93       	push	r28
    2992:	df 93       	push	r29
    2994:	00 d0       	rcall	.+0      	; 0x2996 <MCAL_SPI_voidByteExchangeAsynch+0x6>
    2996:	1f 92       	push	r1
    2998:	cd b7       	in	r28, 0x3d	; 61
    299a:	de b7       	in	r29, 0x3e	; 62
    299c:	89 83       	std	Y+1, r24	; 0x01
    299e:	7b 83       	std	Y+3, r23	; 0x03
    29a0:	6a 83       	std	Y+2, r22	; 0x02
    29a2:	8d e2       	ldi	r24, 0x2D	; 45
    29a4:	90 e0       	ldi	r25, 0x00	; 0
    29a6:	fc 01       	movw	r30, r24
    29a8:	80 81       	ld	r24, Z
    29aa:	88 2f       	mov	r24, r24
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	80 74       	andi	r24, 0x40	; 64
    29b0:	99 27       	eor	r25, r25
    29b2:	89 2b       	or	r24, r25
    29b4:	a1 f0       	breq	.+40     	; 0x29de <MCAL_SPI_voidByteExchangeAsynch+0x4e>
    29b6:	8f e2       	ldi	r24, 0x2F	; 47
    29b8:	90 e0       	ldi	r25, 0x00	; 0
    29ba:	29 81       	ldd	r18, Y+1	; 0x01
    29bc:	fc 01       	movw	r30, r24
    29be:	20 83       	st	Z, r18
    29c0:	00 00       	nop
    29c2:	8e e2       	ldi	r24, 0x2E	; 46
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	fc 01       	movw	r30, r24
    29c8:	80 81       	ld	r24, Z
    29ca:	88 23       	and	r24, r24
    29cc:	d4 f7       	brge	.-12     	; 0x29c2 <MCAL_SPI_voidByteExchangeAsynch+0x32>
    29ce:	8f e2       	ldi	r24, 0x2F	; 47
    29d0:	90 e0       	ldi	r25, 0x00	; 0
    29d2:	fc 01       	movw	r30, r24
    29d4:	20 81       	ld	r18, Z
    29d6:	8a 81       	ldd	r24, Y+2	; 0x02
    29d8:	9b 81       	ldd	r25, Y+3	; 0x03
    29da:	fc 01       	movw	r30, r24
    29dc:	20 83       	st	Z, r18
    29de:	00 00       	nop
    29e0:	0f 90       	pop	r0
    29e2:	0f 90       	pop	r0
    29e4:	0f 90       	pop	r0
    29e6:	df 91       	pop	r29
    29e8:	cf 91       	pop	r28
    29ea:	08 95       	ret

000029ec <__vector_10>:
    29ec:	1f 92       	push	r1
    29ee:	0f 92       	push	r0
    29f0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    29f4:	0f 92       	push	r0
    29f6:	11 24       	eor	r1, r1
    29f8:	2f 93       	push	r18
    29fa:	3f 93       	push	r19
    29fc:	4f 93       	push	r20
    29fe:	5f 93       	push	r21
    2a00:	6f 93       	push	r22
    2a02:	7f 93       	push	r23
    2a04:	8f 93       	push	r24
    2a06:	9f 93       	push	r25
    2a08:	af 93       	push	r26
    2a0a:	bf 93       	push	r27
    2a0c:	ef 93       	push	r30
    2a0e:	ff 93       	push	r31
    2a10:	cf 93       	push	r28
    2a12:	df 93       	push	r29
    2a14:	cd b7       	in	r28, 0x3d	; 61
    2a16:	de b7       	in	r29, 0x3e	; 62
    2a18:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <Global_ExchangeComplate>
    2a1c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <Global_ExchangeComplate+0x1>
    2a20:	fc 01       	movw	r30, r24
    2a22:	09 95       	icall
    2a24:	00 00       	nop
    2a26:	df 91       	pop	r29
    2a28:	cf 91       	pop	r28
    2a2a:	ff 91       	pop	r31
    2a2c:	ef 91       	pop	r30
    2a2e:	bf 91       	pop	r27
    2a30:	af 91       	pop	r26
    2a32:	9f 91       	pop	r25
    2a34:	8f 91       	pop	r24
    2a36:	7f 91       	pop	r23
    2a38:	6f 91       	pop	r22
    2a3a:	5f 91       	pop	r21
    2a3c:	4f 91       	pop	r20
    2a3e:	3f 91       	pop	r19
    2a40:	2f 91       	pop	r18
    2a42:	0f 90       	pop	r0
    2a44:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2a48:	0f 90       	pop	r0
    2a4a:	1f 90       	pop	r1
    2a4c:	18 95       	reti

00002a4e <MCAL_USART_init>:
    2a4e:	0f 93       	push	r16
    2a50:	1f 93       	push	r17
    2a52:	cf 93       	push	r28
    2a54:	df 93       	push	r29
    2a56:	00 d0       	rcall	.+0      	; 0x2a58 <MCAL_USART_init+0xa>
    2a58:	cd b7       	in	r28, 0x3d	; 61
    2a5a:	de b7       	in	r29, 0x3e	; 62
    2a5c:	9a 83       	std	Y+2, r25	; 0x02
    2a5e:	89 83       	std	Y+1, r24	; 0x01
    2a60:	89 81       	ldd	r24, Y+1	; 0x01
    2a62:	9a 81       	ldd	r25, Y+2	; 0x02
    2a64:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <Global_uartcfg+0x1>
    2a68:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <Global_uartcfg>
    2a6c:	8a e2       	ldi	r24, 0x2A	; 42
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	2a e2       	ldi	r18, 0x2A	; 42
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	f9 01       	movw	r30, r18
    2a76:	20 81       	ld	r18, Z
    2a78:	27 7e       	andi	r18, 0xE7	; 231
    2a7a:	fc 01       	movw	r30, r24
    2a7c:	20 83       	st	Z, r18
    2a7e:	8a e2       	ldi	r24, 0x2A	; 42
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	2a e2       	ldi	r18, 0x2A	; 42
    2a84:	30 e0       	ldi	r19, 0x00	; 0
    2a86:	f9 01       	movw	r30, r18
    2a88:	20 81       	ld	r18, Z
    2a8a:	42 2f       	mov	r20, r18
    2a8c:	29 81       	ldd	r18, Y+1	; 0x01
    2a8e:	3a 81       	ldd	r19, Y+2	; 0x02
    2a90:	f9 01       	movw	r30, r18
    2a92:	25 81       	ldd	r18, Z+5	; 0x05
    2a94:	22 2f       	mov	r18, r18
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	22 0f       	add	r18, r18
    2a9a:	33 1f       	adc	r19, r19
    2a9c:	22 0f       	add	r18, r18
    2a9e:	33 1f       	adc	r19, r19
    2aa0:	22 0f       	add	r18, r18
    2aa2:	33 1f       	adc	r19, r19
    2aa4:	24 2b       	or	r18, r20
    2aa6:	fc 01       	movw	r30, r24
    2aa8:	20 83       	st	Z, r18
    2aaa:	89 81       	ldd	r24, Y+1	; 0x01
    2aac:	9a 81       	ldd	r25, Y+2	; 0x02
    2aae:	fc 01       	movw	r30, r24
    2ab0:	82 81       	ldd	r24, Z+2	; 0x02
    2ab2:	86 95       	lsr	r24
    2ab4:	86 95       	lsr	r24
    2ab6:	88 2f       	mov	r24, r24
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	81 70       	andi	r24, 0x01	; 1
    2abc:	99 27       	eor	r25, r25
    2abe:	89 2b       	or	r24, r25
    2ac0:	51 f0       	breq	.+20     	; 0x2ad6 <MCAL_USART_init+0x88>
    2ac2:	8a e2       	ldi	r24, 0x2A	; 42
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	2a e2       	ldi	r18, 0x2A	; 42
    2ac8:	30 e0       	ldi	r19, 0x00	; 0
    2aca:	f9 01       	movw	r30, r18
    2acc:	20 81       	ld	r18, Z
    2ace:	24 60       	ori	r18, 0x04	; 4
    2ad0:	fc 01       	movw	r30, r24
    2ad2:	20 83       	st	Z, r18
    2ad4:	09 c0       	rjmp	.+18     	; 0x2ae8 <MCAL_USART_init+0x9a>
    2ad6:	8a e2       	ldi	r24, 0x2A	; 42
    2ad8:	90 e0       	ldi	r25, 0x00	; 0
    2ada:	2a e2       	ldi	r18, 0x2A	; 42
    2adc:	30 e0       	ldi	r19, 0x00	; 0
    2ade:	f9 01       	movw	r30, r18
    2ae0:	20 81       	ld	r18, Z
    2ae2:	2b 7f       	andi	r18, 0xFB	; 251
    2ae4:	fc 01       	movw	r30, r24
    2ae6:	20 83       	st	Z, r18
    2ae8:	80 e4       	ldi	r24, 0x40	; 64
    2aea:	90 e0       	ldi	r25, 0x00	; 0
    2aec:	29 81       	ldd	r18, Y+1	; 0x01
    2aee:	3a 81       	ldd	r19, Y+2	; 0x02
    2af0:	f9 01       	movw	r30, r18
    2af2:	22 81       	ldd	r18, Z+2	; 0x02
    2af4:	22 2f       	mov	r18, r18
    2af6:	30 e0       	ldi	r19, 0x00	; 0
    2af8:	23 70       	andi	r18, 0x03	; 3
    2afa:	33 27       	eor	r19, r19
    2afc:	22 0f       	add	r18, r18
    2afe:	33 1f       	adc	r19, r19
    2b00:	42 2f       	mov	r20, r18
    2b02:	29 81       	ldd	r18, Y+1	; 0x01
    2b04:	3a 81       	ldd	r19, Y+2	; 0x02
    2b06:	f9 01       	movw	r30, r18
    2b08:	23 81       	ldd	r18, Z+3	; 0x03
    2b0a:	42 2b       	or	r20, r18
    2b0c:	29 81       	ldd	r18, Y+1	; 0x01
    2b0e:	3a 81       	ldd	r19, Y+2	; 0x02
    2b10:	f9 01       	movw	r30, r18
    2b12:	24 81       	ldd	r18, Z+4	; 0x04
    2b14:	24 2b       	or	r18, r20
    2b16:	20 68       	ori	r18, 0x80	; 128
    2b18:	fc 01       	movw	r30, r24
    2b1a:	20 83       	st	Z, r18
    2b1c:	09 e2       	ldi	r16, 0x29	; 41
    2b1e:	10 e0       	ldi	r17, 0x00	; 0
    2b20:	89 81       	ldd	r24, Y+1	; 0x01
    2b22:	9a 81       	ldd	r25, Y+2	; 0x02
    2b24:	fc 01       	movw	r30, r24
    2b26:	80 81       	ld	r24, Z
    2b28:	91 81       	ldd	r25, Z+1	; 0x01
    2b2a:	cc 01       	movw	r24, r24
    2b2c:	a0 e0       	ldi	r26, 0x00	; 0
    2b2e:	b0 e0       	ldi	r27, 0x00	; 0
    2b30:	88 0f       	add	r24, r24
    2b32:	99 1f       	adc	r25, r25
    2b34:	aa 1f       	adc	r26, r26
    2b36:	bb 1f       	adc	r27, r27
    2b38:	88 0f       	add	r24, r24
    2b3a:	99 1f       	adc	r25, r25
    2b3c:	aa 1f       	adc	r26, r26
    2b3e:	bb 1f       	adc	r27, r27
    2b40:	88 0f       	add	r24, r24
    2b42:	99 1f       	adc	r25, r25
    2b44:	aa 1f       	adc	r26, r26
    2b46:	bb 1f       	adc	r27, r27
    2b48:	88 0f       	add	r24, r24
    2b4a:	99 1f       	adc	r25, r25
    2b4c:	aa 1f       	adc	r26, r26
    2b4e:	bb 1f       	adc	r27, r27
    2b50:	9c 01       	movw	r18, r24
    2b52:	ad 01       	movw	r20, r26
    2b54:	80 e0       	ldi	r24, 0x00	; 0
    2b56:	94 e2       	ldi	r25, 0x24	; 36
    2b58:	a4 ef       	ldi	r26, 0xF4	; 244
    2b5a:	b0 e0       	ldi	r27, 0x00	; 0
    2b5c:	bc 01       	movw	r22, r24
    2b5e:	cd 01       	movw	r24, r26
    2b60:	0e 94 32 18 	call	0x3064	; 0x3064 <__udivmodsi4>
    2b64:	da 01       	movw	r26, r20
    2b66:	c9 01       	movw	r24, r18
    2b68:	81 50       	subi	r24, 0x01	; 1
    2b6a:	f8 01       	movw	r30, r16
    2b6c:	80 83       	st	Z, r24
    2b6e:	00 e4       	ldi	r16, 0x40	; 64
    2b70:	10 e0       	ldi	r17, 0x00	; 0
    2b72:	89 81       	ldd	r24, Y+1	; 0x01
    2b74:	9a 81       	ldd	r25, Y+2	; 0x02
    2b76:	fc 01       	movw	r30, r24
    2b78:	80 81       	ld	r24, Z
    2b7a:	91 81       	ldd	r25, Z+1	; 0x01
    2b7c:	cc 01       	movw	r24, r24
    2b7e:	a0 e0       	ldi	r26, 0x00	; 0
    2b80:	b0 e0       	ldi	r27, 0x00	; 0
    2b82:	88 0f       	add	r24, r24
    2b84:	99 1f       	adc	r25, r25
    2b86:	aa 1f       	adc	r26, r26
    2b88:	bb 1f       	adc	r27, r27
    2b8a:	88 0f       	add	r24, r24
    2b8c:	99 1f       	adc	r25, r25
    2b8e:	aa 1f       	adc	r26, r26
    2b90:	bb 1f       	adc	r27, r27
    2b92:	88 0f       	add	r24, r24
    2b94:	99 1f       	adc	r25, r25
    2b96:	aa 1f       	adc	r26, r26
    2b98:	bb 1f       	adc	r27, r27
    2b9a:	88 0f       	add	r24, r24
    2b9c:	99 1f       	adc	r25, r25
    2b9e:	aa 1f       	adc	r26, r26
    2ba0:	bb 1f       	adc	r27, r27
    2ba2:	9c 01       	movw	r18, r24
    2ba4:	ad 01       	movw	r20, r26
    2ba6:	80 e0       	ldi	r24, 0x00	; 0
    2ba8:	94 e2       	ldi	r25, 0x24	; 36
    2baa:	a4 ef       	ldi	r26, 0xF4	; 244
    2bac:	b0 e0       	ldi	r27, 0x00	; 0
    2bae:	bc 01       	movw	r22, r24
    2bb0:	cd 01       	movw	r24, r26
    2bb2:	0e 94 32 18 	call	0x3064	; 0x3064 <__udivmodsi4>
    2bb6:	da 01       	movw	r26, r20
    2bb8:	c9 01       	movw	r24, r18
    2bba:	81 50       	subi	r24, 0x01	; 1
    2bbc:	88 2f       	mov	r24, r24
    2bbe:	90 e0       	ldi	r25, 0x00	; 0
    2bc0:	89 2f       	mov	r24, r25
    2bc2:	99 0f       	add	r25, r25
    2bc4:	99 0b       	sbc	r25, r25
    2bc6:	f8 01       	movw	r30, r16
    2bc8:	80 83       	st	Z, r24
    2bca:	00 00       	nop
    2bcc:	0f 90       	pop	r0
    2bce:	0f 90       	pop	r0
    2bd0:	df 91       	pop	r29
    2bd2:	cf 91       	pop	r28
    2bd4:	1f 91       	pop	r17
    2bd6:	0f 91       	pop	r16
    2bd8:	08 95       	ret

00002bda <MCAL_USART_TxByteSynch>:
    2bda:	cf 93       	push	r28
    2bdc:	df 93       	push	r29
    2bde:	1f 92       	push	r1
    2be0:	cd b7       	in	r28, 0x3d	; 61
    2be2:	de b7       	in	r29, 0x3e	; 62
    2be4:	89 83       	std	Y+1, r24	; 0x01
    2be6:	00 00       	nop
    2be8:	8b e2       	ldi	r24, 0x2B	; 43
    2bea:	90 e0       	ldi	r25, 0x00	; 0
    2bec:	fc 01       	movw	r30, r24
    2bee:	80 81       	ld	r24, Z
    2bf0:	88 2f       	mov	r24, r24
    2bf2:	90 e0       	ldi	r25, 0x00	; 0
    2bf4:	80 72       	andi	r24, 0x20	; 32
    2bf6:	99 27       	eor	r25, r25
    2bf8:	89 2b       	or	r24, r25
    2bfa:	b1 f3       	breq	.-20     	; 0x2be8 <MCAL_USART_TxByteSynch+0xe>
    2bfc:	89 81       	ldd	r24, Y+1	; 0x01
    2bfe:	0e 94 44 16 	call	0x2c88	; 0x2c88 <MCAL_u8PrivateEffectiveData>
    2c02:	89 83       	std	Y+1, r24	; 0x01
    2c04:	8c e2       	ldi	r24, 0x2C	; 44
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	29 81       	ldd	r18, Y+1	; 0x01
    2c0a:	fc 01       	movw	r30, r24
    2c0c:	20 83       	st	Z, r18
    2c0e:	00 00       	nop
    2c10:	0f 90       	pop	r0
    2c12:	df 91       	pop	r29
    2c14:	cf 91       	pop	r28
    2c16:	08 95       	ret

00002c18 <MCAL_USART_TxChar>:
    2c18:	cf 93       	push	r28
    2c1a:	df 93       	push	r29
    2c1c:	1f 92       	push	r1
    2c1e:	cd b7       	in	r28, 0x3d	; 61
    2c20:	de b7       	in	r29, 0x3e	; 62
    2c22:	89 83       	std	Y+1, r24	; 0x01
    2c24:	89 81       	ldd	r24, Y+1	; 0x01
    2c26:	0e 94 ed 15 	call	0x2bda	; 0x2bda <MCAL_USART_TxByteSynch>
    2c2a:	00 00       	nop
    2c2c:	0f 90       	pop	r0
    2c2e:	df 91       	pop	r29
    2c30:	cf 91       	pop	r28
    2c32:	08 95       	ret

00002c34 <MCAL_USART_SendString>:
    2c34:	cf 93       	push	r28
    2c36:	df 93       	push	r29
    2c38:	00 d0       	rcall	.+0      	; 0x2c3a <MCAL_USART_SendString+0x6>
    2c3a:	1f 92       	push	r1
    2c3c:	cd b7       	in	r28, 0x3d	; 61
    2c3e:	de b7       	in	r29, 0x3e	; 62
    2c40:	9b 83       	std	Y+3, r25	; 0x03
    2c42:	8a 83       	std	Y+2, r24	; 0x02
    2c44:	19 82       	std	Y+1, r1	; 0x01
    2c46:	0e c0       	rjmp	.+28     	; 0x2c64 <MCAL_USART_SendString+0x30>
    2c48:	89 81       	ldd	r24, Y+1	; 0x01
    2c4a:	88 2f       	mov	r24, r24
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	2a 81       	ldd	r18, Y+2	; 0x02
    2c50:	3b 81       	ldd	r19, Y+3	; 0x03
    2c52:	82 0f       	add	r24, r18
    2c54:	93 1f       	adc	r25, r19
    2c56:	fc 01       	movw	r30, r24
    2c58:	80 81       	ld	r24, Z
    2c5a:	0e 94 0c 16 	call	0x2c18	; 0x2c18 <MCAL_USART_TxChar>
    2c5e:	89 81       	ldd	r24, Y+1	; 0x01
    2c60:	8f 5f       	subi	r24, 0xFF	; 255
    2c62:	89 83       	std	Y+1, r24	; 0x01
    2c64:	89 81       	ldd	r24, Y+1	; 0x01
    2c66:	88 2f       	mov	r24, r24
    2c68:	90 e0       	ldi	r25, 0x00	; 0
    2c6a:	2a 81       	ldd	r18, Y+2	; 0x02
    2c6c:	3b 81       	ldd	r19, Y+3	; 0x03
    2c6e:	82 0f       	add	r24, r18
    2c70:	93 1f       	adc	r25, r19
    2c72:	fc 01       	movw	r30, r24
    2c74:	80 81       	ld	r24, Z
    2c76:	88 23       	and	r24, r24
    2c78:	39 f7       	brne	.-50     	; 0x2c48 <MCAL_USART_SendString+0x14>
    2c7a:	00 00       	nop
    2c7c:	0f 90       	pop	r0
    2c7e:	0f 90       	pop	r0
    2c80:	0f 90       	pop	r0
    2c82:	df 91       	pop	r29
    2c84:	cf 91       	pop	r28
    2c86:	08 95       	ret

00002c88 <MCAL_u8PrivateEffectiveData>:
    2c88:	cf 93       	push	r28
    2c8a:	df 93       	push	r29
    2c8c:	00 d0       	rcall	.+0      	; 0x2c8e <MCAL_u8PrivateEffectiveData+0x6>
    2c8e:	cd b7       	in	r28, 0x3d	; 61
    2c90:	de b7       	in	r29, 0x3e	; 62
    2c92:	8a 83       	std	Y+2, r24	; 0x02
    2c94:	19 82       	std	Y+1, r1	; 0x01
    2c96:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <Global_uartcfg>
    2c9a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <Global_uartcfg+0x1>
    2c9e:	fc 01       	movw	r30, r24
    2ca0:	82 81       	ldd	r24, Z+2	; 0x02
    2ca2:	88 2f       	mov	r24, r24
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	81 30       	cpi	r24, 0x01	; 1
    2ca8:	91 05       	cpc	r25, r1
    2caa:	81 f0       	breq	.+32     	; 0x2ccc <MCAL_u8PrivateEffectiveData+0x44>
    2cac:	82 30       	cpi	r24, 0x02	; 2
    2cae:	91 05       	cpc	r25, r1
    2cb0:	1c f4       	brge	.+6      	; 0x2cb8 <MCAL_u8PrivateEffectiveData+0x30>
    2cb2:	89 2b       	or	r24, r25
    2cb4:	39 f0       	breq	.+14     	; 0x2cc4 <MCAL_u8PrivateEffectiveData+0x3c>
    2cb6:	15 c0       	rjmp	.+42     	; 0x2ce2 <MCAL_u8PrivateEffectiveData+0x5a>
    2cb8:	82 30       	cpi	r24, 0x02	; 2
    2cba:	91 05       	cpc	r25, r1
    2cbc:	59 f0       	breq	.+22     	; 0x2cd4 <MCAL_u8PrivateEffectiveData+0x4c>
    2cbe:	03 97       	sbiw	r24, 0x03	; 3
    2cc0:	69 f0       	breq	.+26     	; 0x2cdc <MCAL_u8PrivateEffectiveData+0x54>
    2cc2:	0f c0       	rjmp	.+30     	; 0x2ce2 <MCAL_u8PrivateEffectiveData+0x5a>
    2cc4:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc6:	8f 71       	andi	r24, 0x1F	; 31
    2cc8:	89 83       	std	Y+1, r24	; 0x01
    2cca:	0b c0       	rjmp	.+22     	; 0x2ce2 <MCAL_u8PrivateEffectiveData+0x5a>
    2ccc:	8a 81       	ldd	r24, Y+2	; 0x02
    2cce:	8f 73       	andi	r24, 0x3F	; 63
    2cd0:	89 83       	std	Y+1, r24	; 0x01
    2cd2:	07 c0       	rjmp	.+14     	; 0x2ce2 <MCAL_u8PrivateEffectiveData+0x5a>
    2cd4:	8a 81       	ldd	r24, Y+2	; 0x02
    2cd6:	8f 77       	andi	r24, 0x7F	; 127
    2cd8:	89 83       	std	Y+1, r24	; 0x01
    2cda:	03 c0       	rjmp	.+6      	; 0x2ce2 <MCAL_u8PrivateEffectiveData+0x5a>
    2cdc:	8a 81       	ldd	r24, Y+2	; 0x02
    2cde:	89 83       	std	Y+1, r24	; 0x01
    2ce0:	00 00       	nop
    2ce2:	89 81       	ldd	r24, Y+1	; 0x01
    2ce4:	0f 90       	pop	r0
    2ce6:	0f 90       	pop	r0
    2ce8:	df 91       	pop	r29
    2cea:	cf 91       	pop	r28
    2cec:	08 95       	ret

00002cee <MCAL_USART_RxByteAsynch>:
    2cee:	cf 93       	push	r28
    2cf0:	df 93       	push	r29
    2cf2:	00 d0       	rcall	.+0      	; 0x2cf4 <MCAL_USART_RxByteAsynch+0x6>
    2cf4:	cd b7       	in	r28, 0x3d	; 61
    2cf6:	de b7       	in	r29, 0x3e	; 62
    2cf8:	9a 83       	std	Y+2, r25	; 0x02
    2cfa:	89 83       	std	Y+1, r24	; 0x01
    2cfc:	89 81       	ldd	r24, Y+1	; 0x01
    2cfe:	9a 81       	ldd	r25, Y+2	; 0x02
    2d00:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <Global_RxComplate+0x1>
    2d04:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <Global_RxComplate>
    2d08:	8a e2       	ldi	r24, 0x2A	; 42
    2d0a:	90 e0       	ldi	r25, 0x00	; 0
    2d0c:	2a e2       	ldi	r18, 0x2A	; 42
    2d0e:	30 e0       	ldi	r19, 0x00	; 0
    2d10:	f9 01       	movw	r30, r18
    2d12:	20 81       	ld	r18, Z
    2d14:	20 68       	ori	r18, 0x80	; 128
    2d16:	fc 01       	movw	r30, r24
    2d18:	20 83       	st	Z, r18
    2d1a:	00 00       	nop
    2d1c:	0f 90       	pop	r0
    2d1e:	0f 90       	pop	r0
    2d20:	df 91       	pop	r29
    2d22:	cf 91       	pop	r28
    2d24:	08 95       	ret

00002d26 <MCAL_voidClearFlags>:
    2d26:	cf 93       	push	r28
    2d28:	df 93       	push	r29
    2d2a:	cd b7       	in	r28, 0x3d	; 61
    2d2c:	de b7       	in	r29, 0x3e	; 62
    2d2e:	04 c0       	rjmp	.+8      	; 0x2d38 <MCAL_voidClearFlags+0x12>
    2d30:	8c e2       	ldi	r24, 0x2C	; 44
    2d32:	90 e0       	ldi	r25, 0x00	; 0
    2d34:	fc 01       	movw	r30, r24
    2d36:	80 81       	ld	r24, Z
    2d38:	8b e2       	ldi	r24, 0x2B	; 43
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	fc 01       	movw	r30, r24
    2d3e:	80 81       	ld	r24, Z
    2d40:	88 1f       	adc	r24, r24
    2d42:	88 27       	eor	r24, r24
    2d44:	88 1f       	adc	r24, r24
    2d46:	88 2f       	mov	r24, r24
    2d48:	90 e0       	ldi	r25, 0x00	; 0
    2d4a:	81 70       	andi	r24, 0x01	; 1
    2d4c:	99 27       	eor	r25, r25
    2d4e:	89 2b       	or	r24, r25
    2d50:	79 f7       	brne	.-34     	; 0x2d30 <MCAL_voidClearFlags+0xa>
    2d52:	00 00       	nop
    2d54:	df 91       	pop	r29
    2d56:	cf 91       	pop	r28
    2d58:	08 95       	ret

00002d5a <__vector_11>:
    2d5a:	1f 92       	push	r1
    2d5c:	0f 92       	push	r0
    2d5e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2d62:	0f 92       	push	r0
    2d64:	11 24       	eor	r1, r1
    2d66:	2f 93       	push	r18
    2d68:	3f 93       	push	r19
    2d6a:	4f 93       	push	r20
    2d6c:	5f 93       	push	r21
    2d6e:	6f 93       	push	r22
    2d70:	7f 93       	push	r23
    2d72:	8f 93       	push	r24
    2d74:	9f 93       	push	r25
    2d76:	af 93       	push	r26
    2d78:	bf 93       	push	r27
    2d7a:	ef 93       	push	r30
    2d7c:	ff 93       	push	r31
    2d7e:	cf 93       	push	r28
    2d80:	df 93       	push	r29
    2d82:	1f 92       	push	r1
    2d84:	cd b7       	in	r28, 0x3d	; 61
    2d86:	de b7       	in	r29, 0x3e	; 62
    2d88:	8c e2       	ldi	r24, 0x2C	; 44
    2d8a:	90 e0       	ldi	r25, 0x00	; 0
    2d8c:	fc 01       	movw	r30, r24
    2d8e:	80 81       	ld	r24, Z
    2d90:	89 83       	std	Y+1, r24	; 0x01
    2d92:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <Global_RxComplate>
    2d96:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <Global_RxComplate+0x1>
    2d9a:	89 81       	ldd	r24, Y+1	; 0x01
    2d9c:	f9 01       	movw	r30, r18
    2d9e:	09 95       	icall
    2da0:	00 00       	nop
    2da2:	0f 90       	pop	r0
    2da4:	df 91       	pop	r29
    2da6:	cf 91       	pop	r28
    2da8:	ff 91       	pop	r31
    2daa:	ef 91       	pop	r30
    2dac:	bf 91       	pop	r27
    2dae:	af 91       	pop	r26
    2db0:	9f 91       	pop	r25
    2db2:	8f 91       	pop	r24
    2db4:	7f 91       	pop	r23
    2db6:	6f 91       	pop	r22
    2db8:	5f 91       	pop	r21
    2dba:	4f 91       	pop	r20
    2dbc:	3f 91       	pop	r19
    2dbe:	2f 91       	pop	r18
    2dc0:	0f 90       	pop	r0
    2dc2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2dc6:	0f 90       	pop	r0
    2dc8:	1f 90       	pop	r1
    2dca:	18 95       	reti

00002dcc <__vector_13>:
    2dcc:	1f 92       	push	r1
    2dce:	0f 92       	push	r0
    2dd0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2dd4:	0f 92       	push	r0
    2dd6:	11 24       	eor	r1, r1
    2dd8:	2f 93       	push	r18
    2dda:	3f 93       	push	r19
    2ddc:	4f 93       	push	r20
    2dde:	5f 93       	push	r21
    2de0:	6f 93       	push	r22
    2de2:	7f 93       	push	r23
    2de4:	8f 93       	push	r24
    2de6:	9f 93       	push	r25
    2de8:	af 93       	push	r26
    2dea:	bf 93       	push	r27
    2dec:	ef 93       	push	r30
    2dee:	ff 93       	push	r31
    2df0:	cf 93       	push	r28
    2df2:	df 93       	push	r29
    2df4:	cd b7       	in	r28, 0x3d	; 61
    2df6:	de b7       	in	r29, 0x3e	; 62
    2df8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <Global_TxComplate>
    2dfc:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <Global_TxComplate+0x1>
    2e00:	fc 01       	movw	r30, r24
    2e02:	09 95       	icall
    2e04:	00 00       	nop
    2e06:	df 91       	pop	r29
    2e08:	cf 91       	pop	r28
    2e0a:	ff 91       	pop	r31
    2e0c:	ef 91       	pop	r30
    2e0e:	bf 91       	pop	r27
    2e10:	af 91       	pop	r26
    2e12:	9f 91       	pop	r25
    2e14:	8f 91       	pop	r24
    2e16:	7f 91       	pop	r23
    2e18:	6f 91       	pop	r22
    2e1a:	5f 91       	pop	r21
    2e1c:	4f 91       	pop	r20
    2e1e:	3f 91       	pop	r19
    2e20:	2f 91       	pop	r18
    2e22:	0f 90       	pop	r0
    2e24:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7fc05f>
    2e28:	0f 90       	pop	r0
    2e2a:	1f 90       	pop	r1
    2e2c:	18 95       	reti

00002e2e <__cmpsf2>:
    2e2e:	0e 94 4b 17 	call	0x2e96	; 0x2e96 <__fp_cmp>
    2e32:	08 f4       	brcc	.+2      	; 0x2e36 <__cmpsf2+0x8>
    2e34:	81 e0       	ldi	r24, 0x01	; 1
    2e36:	08 95       	ret

00002e38 <__fixunssfsi>:
    2e38:	0e 94 77 17 	call	0x2eee	; 0x2eee <__fp_splitA>
    2e3c:	88 f0       	brcs	.+34     	; 0x2e60 <__fixunssfsi+0x28>
    2e3e:	9f 57       	subi	r25, 0x7F	; 127
    2e40:	98 f0       	brcs	.+38     	; 0x2e68 <__fixunssfsi+0x30>
    2e42:	b9 2f       	mov	r27, r25
    2e44:	99 27       	eor	r25, r25
    2e46:	b7 51       	subi	r27, 0x17	; 23
    2e48:	b0 f0       	brcs	.+44     	; 0x2e76 <__fixunssfsi+0x3e>
    2e4a:	e1 f0       	breq	.+56     	; 0x2e84 <__fixunssfsi+0x4c>
    2e4c:	66 0f       	add	r22, r22
    2e4e:	77 1f       	adc	r23, r23
    2e50:	88 1f       	adc	r24, r24
    2e52:	99 1f       	adc	r25, r25
    2e54:	1a f0       	brmi	.+6      	; 0x2e5c <__fixunssfsi+0x24>
    2e56:	ba 95       	dec	r27
    2e58:	c9 f7       	brne	.-14     	; 0x2e4c <__fixunssfsi+0x14>
    2e5a:	14 c0       	rjmp	.+40     	; 0x2e84 <__fixunssfsi+0x4c>
    2e5c:	b1 30       	cpi	r27, 0x01	; 1
    2e5e:	91 f0       	breq	.+36     	; 0x2e84 <__fixunssfsi+0x4c>
    2e60:	0e 94 91 17 	call	0x2f22	; 0x2f22 <__fp_zero>
    2e64:	b1 e0       	ldi	r27, 0x01	; 1
    2e66:	08 95       	ret
    2e68:	0c 94 91 17 	jmp	0x2f22	; 0x2f22 <__fp_zero>
    2e6c:	67 2f       	mov	r22, r23
    2e6e:	78 2f       	mov	r23, r24
    2e70:	88 27       	eor	r24, r24
    2e72:	b8 5f       	subi	r27, 0xF8	; 248
    2e74:	39 f0       	breq	.+14     	; 0x2e84 <__fixunssfsi+0x4c>
    2e76:	b9 3f       	cpi	r27, 0xF9	; 249
    2e78:	cc f3       	brlt	.-14     	; 0x2e6c <__fixunssfsi+0x34>
    2e7a:	86 95       	lsr	r24
    2e7c:	77 95       	ror	r23
    2e7e:	67 95       	ror	r22
    2e80:	b3 95       	inc	r27
    2e82:	d9 f7       	brne	.-10     	; 0x2e7a <__fixunssfsi+0x42>
    2e84:	3e f4       	brtc	.+14     	; 0x2e94 <__fixunssfsi+0x5c>
    2e86:	90 95       	com	r25
    2e88:	80 95       	com	r24
    2e8a:	70 95       	com	r23
    2e8c:	61 95       	neg	r22
    2e8e:	7f 4f       	sbci	r23, 0xFF	; 255
    2e90:	8f 4f       	sbci	r24, 0xFF	; 255
    2e92:	9f 4f       	sbci	r25, 0xFF	; 255
    2e94:	08 95       	ret

00002e96 <__fp_cmp>:
    2e96:	99 0f       	add	r25, r25
    2e98:	00 08       	sbc	r0, r0
    2e9a:	55 0f       	add	r21, r21
    2e9c:	aa 0b       	sbc	r26, r26
    2e9e:	e0 e8       	ldi	r30, 0x80	; 128
    2ea0:	fe ef       	ldi	r31, 0xFE	; 254
    2ea2:	16 16       	cp	r1, r22
    2ea4:	17 06       	cpc	r1, r23
    2ea6:	e8 07       	cpc	r30, r24
    2ea8:	f9 07       	cpc	r31, r25
    2eaa:	c0 f0       	brcs	.+48     	; 0x2edc <__fp_cmp+0x46>
    2eac:	12 16       	cp	r1, r18
    2eae:	13 06       	cpc	r1, r19
    2eb0:	e4 07       	cpc	r30, r20
    2eb2:	f5 07       	cpc	r31, r21
    2eb4:	98 f0       	brcs	.+38     	; 0x2edc <__fp_cmp+0x46>
    2eb6:	62 1b       	sub	r22, r18
    2eb8:	73 0b       	sbc	r23, r19
    2eba:	84 0b       	sbc	r24, r20
    2ebc:	95 0b       	sbc	r25, r21
    2ebe:	39 f4       	brne	.+14     	; 0x2ece <__fp_cmp+0x38>
    2ec0:	0a 26       	eor	r0, r26
    2ec2:	61 f0       	breq	.+24     	; 0x2edc <__fp_cmp+0x46>
    2ec4:	23 2b       	or	r18, r19
    2ec6:	24 2b       	or	r18, r20
    2ec8:	25 2b       	or	r18, r21
    2eca:	21 f4       	brne	.+8      	; 0x2ed4 <__fp_cmp+0x3e>
    2ecc:	08 95       	ret
    2ece:	0a 26       	eor	r0, r26
    2ed0:	09 f4       	brne	.+2      	; 0x2ed4 <__fp_cmp+0x3e>
    2ed2:	a1 40       	sbci	r26, 0x01	; 1
    2ed4:	a6 95       	lsr	r26
    2ed6:	8f ef       	ldi	r24, 0xFF	; 255
    2ed8:	81 1d       	adc	r24, r1
    2eda:	81 1d       	adc	r24, r1
    2edc:	08 95       	ret

00002ede <__fp_split3>:
    2ede:	57 fd       	sbrc	r21, 7
    2ee0:	90 58       	subi	r25, 0x80	; 128
    2ee2:	44 0f       	add	r20, r20
    2ee4:	55 1f       	adc	r21, r21
    2ee6:	59 f0       	breq	.+22     	; 0x2efe <__fp_splitA+0x10>
    2ee8:	5f 3f       	cpi	r21, 0xFF	; 255
    2eea:	71 f0       	breq	.+28     	; 0x2f08 <__fp_splitA+0x1a>
    2eec:	47 95       	ror	r20

00002eee <__fp_splitA>:
    2eee:	88 0f       	add	r24, r24
    2ef0:	97 fb       	bst	r25, 7
    2ef2:	99 1f       	adc	r25, r25
    2ef4:	61 f0       	breq	.+24     	; 0x2f0e <__fp_splitA+0x20>
    2ef6:	9f 3f       	cpi	r25, 0xFF	; 255
    2ef8:	79 f0       	breq	.+30     	; 0x2f18 <__fp_splitA+0x2a>
    2efa:	87 95       	ror	r24
    2efc:	08 95       	ret
    2efe:	12 16       	cp	r1, r18
    2f00:	13 06       	cpc	r1, r19
    2f02:	14 06       	cpc	r1, r20
    2f04:	55 1f       	adc	r21, r21
    2f06:	f2 cf       	rjmp	.-28     	; 0x2eec <__fp_split3+0xe>
    2f08:	46 95       	lsr	r20
    2f0a:	f1 df       	rcall	.-30     	; 0x2eee <__fp_splitA>
    2f0c:	08 c0       	rjmp	.+16     	; 0x2f1e <__fp_splitA+0x30>
    2f0e:	16 16       	cp	r1, r22
    2f10:	17 06       	cpc	r1, r23
    2f12:	18 06       	cpc	r1, r24
    2f14:	99 1f       	adc	r25, r25
    2f16:	f1 cf       	rjmp	.-30     	; 0x2efa <__fp_splitA+0xc>
    2f18:	86 95       	lsr	r24
    2f1a:	71 05       	cpc	r23, r1
    2f1c:	61 05       	cpc	r22, r1
    2f1e:	08 94       	sec
    2f20:	08 95       	ret

00002f22 <__fp_zero>:
    2f22:	e8 94       	clt

00002f24 <__fp_szero>:
    2f24:	bb 27       	eor	r27, r27
    2f26:	66 27       	eor	r22, r22
    2f28:	77 27       	eor	r23, r23
    2f2a:	cb 01       	movw	r24, r22
    2f2c:	97 f9       	bld	r25, 7
    2f2e:	08 95       	ret

00002f30 <__gesf2>:
    2f30:	0e 94 4b 17 	call	0x2e96	; 0x2e96 <__fp_cmp>
    2f34:	08 f4       	brcc	.+2      	; 0x2f38 <__gesf2+0x8>
    2f36:	8f ef       	ldi	r24, 0xFF	; 255
    2f38:	08 95       	ret

00002f3a <__mulsf3>:
    2f3a:	0e 94 b0 17 	call	0x2f60	; 0x2f60 <__mulsf3x>
    2f3e:	0c 94 21 18 	jmp	0x3042	; 0x3042 <__fp_round>
    2f42:	0e 94 13 18 	call	0x3026	; 0x3026 <__fp_pscA>
    2f46:	38 f0       	brcs	.+14     	; 0x2f56 <__mulsf3+0x1c>
    2f48:	0e 94 1a 18 	call	0x3034	; 0x3034 <__fp_pscB>
    2f4c:	20 f0       	brcs	.+8      	; 0x2f56 <__mulsf3+0x1c>
    2f4e:	95 23       	and	r25, r21
    2f50:	11 f0       	breq	.+4      	; 0x2f56 <__mulsf3+0x1c>
    2f52:	0c 94 0a 18 	jmp	0x3014	; 0x3014 <__fp_inf>
    2f56:	0c 94 10 18 	jmp	0x3020	; 0x3020 <__fp_nan>
    2f5a:	11 24       	eor	r1, r1
    2f5c:	0c 94 92 17 	jmp	0x2f24	; 0x2f24 <__fp_szero>

00002f60 <__mulsf3x>:
    2f60:	0e 94 6f 17 	call	0x2ede	; 0x2ede <__fp_split3>
    2f64:	70 f3       	brcs	.-36     	; 0x2f42 <__mulsf3+0x8>

00002f66 <__mulsf3_pse>:
    2f66:	95 9f       	mul	r25, r21
    2f68:	c1 f3       	breq	.-16     	; 0x2f5a <__mulsf3+0x20>
    2f6a:	95 0f       	add	r25, r21
    2f6c:	50 e0       	ldi	r21, 0x00	; 0
    2f6e:	55 1f       	adc	r21, r21
    2f70:	62 9f       	mul	r22, r18
    2f72:	f0 01       	movw	r30, r0
    2f74:	72 9f       	mul	r23, r18
    2f76:	bb 27       	eor	r27, r27
    2f78:	f0 0d       	add	r31, r0
    2f7a:	b1 1d       	adc	r27, r1
    2f7c:	63 9f       	mul	r22, r19
    2f7e:	aa 27       	eor	r26, r26
    2f80:	f0 0d       	add	r31, r0
    2f82:	b1 1d       	adc	r27, r1
    2f84:	aa 1f       	adc	r26, r26
    2f86:	64 9f       	mul	r22, r20
    2f88:	66 27       	eor	r22, r22
    2f8a:	b0 0d       	add	r27, r0
    2f8c:	a1 1d       	adc	r26, r1
    2f8e:	66 1f       	adc	r22, r22
    2f90:	82 9f       	mul	r24, r18
    2f92:	22 27       	eor	r18, r18
    2f94:	b0 0d       	add	r27, r0
    2f96:	a1 1d       	adc	r26, r1
    2f98:	62 1f       	adc	r22, r18
    2f9a:	73 9f       	mul	r23, r19
    2f9c:	b0 0d       	add	r27, r0
    2f9e:	a1 1d       	adc	r26, r1
    2fa0:	62 1f       	adc	r22, r18
    2fa2:	83 9f       	mul	r24, r19
    2fa4:	a0 0d       	add	r26, r0
    2fa6:	61 1d       	adc	r22, r1
    2fa8:	22 1f       	adc	r18, r18
    2faa:	74 9f       	mul	r23, r20
    2fac:	33 27       	eor	r19, r19
    2fae:	a0 0d       	add	r26, r0
    2fb0:	61 1d       	adc	r22, r1
    2fb2:	23 1f       	adc	r18, r19
    2fb4:	84 9f       	mul	r24, r20
    2fb6:	60 0d       	add	r22, r0
    2fb8:	21 1d       	adc	r18, r1
    2fba:	82 2f       	mov	r24, r18
    2fbc:	76 2f       	mov	r23, r22
    2fbe:	6a 2f       	mov	r22, r26
    2fc0:	11 24       	eor	r1, r1
    2fc2:	9f 57       	subi	r25, 0x7F	; 127
    2fc4:	50 40       	sbci	r21, 0x00	; 0
    2fc6:	9a f0       	brmi	.+38     	; 0x2fee <__mulsf3_pse+0x88>
    2fc8:	f1 f0       	breq	.+60     	; 0x3006 <__mulsf3_pse+0xa0>
    2fca:	88 23       	and	r24, r24
    2fcc:	4a f0       	brmi	.+18     	; 0x2fe0 <__mulsf3_pse+0x7a>
    2fce:	ee 0f       	add	r30, r30
    2fd0:	ff 1f       	adc	r31, r31
    2fd2:	bb 1f       	adc	r27, r27
    2fd4:	66 1f       	adc	r22, r22
    2fd6:	77 1f       	adc	r23, r23
    2fd8:	88 1f       	adc	r24, r24
    2fda:	91 50       	subi	r25, 0x01	; 1
    2fdc:	50 40       	sbci	r21, 0x00	; 0
    2fde:	a9 f7       	brne	.-22     	; 0x2fca <__mulsf3_pse+0x64>
    2fe0:	9e 3f       	cpi	r25, 0xFE	; 254
    2fe2:	51 05       	cpc	r21, r1
    2fe4:	80 f0       	brcs	.+32     	; 0x3006 <__mulsf3_pse+0xa0>
    2fe6:	0c 94 0a 18 	jmp	0x3014	; 0x3014 <__fp_inf>
    2fea:	0c 94 92 17 	jmp	0x2f24	; 0x2f24 <__fp_szero>
    2fee:	5f 3f       	cpi	r21, 0xFF	; 255
    2ff0:	e4 f3       	brlt	.-8      	; 0x2fea <__mulsf3_pse+0x84>
    2ff2:	98 3e       	cpi	r25, 0xE8	; 232
    2ff4:	d4 f3       	brlt	.-12     	; 0x2fea <__mulsf3_pse+0x84>
    2ff6:	86 95       	lsr	r24
    2ff8:	77 95       	ror	r23
    2ffa:	67 95       	ror	r22
    2ffc:	b7 95       	ror	r27
    2ffe:	f7 95       	ror	r31
    3000:	e7 95       	ror	r30
    3002:	9f 5f       	subi	r25, 0xFF	; 255
    3004:	c1 f7       	brne	.-16     	; 0x2ff6 <__mulsf3_pse+0x90>
    3006:	fe 2b       	or	r31, r30
    3008:	88 0f       	add	r24, r24
    300a:	91 1d       	adc	r25, r1
    300c:	96 95       	lsr	r25
    300e:	87 95       	ror	r24
    3010:	97 f9       	bld	r25, 7
    3012:	08 95       	ret

00003014 <__fp_inf>:
    3014:	97 f9       	bld	r25, 7
    3016:	9f 67       	ori	r25, 0x7F	; 127
    3018:	80 e8       	ldi	r24, 0x80	; 128
    301a:	70 e0       	ldi	r23, 0x00	; 0
    301c:	60 e0       	ldi	r22, 0x00	; 0
    301e:	08 95       	ret

00003020 <__fp_nan>:
    3020:	9f ef       	ldi	r25, 0xFF	; 255
    3022:	80 ec       	ldi	r24, 0xC0	; 192
    3024:	08 95       	ret

00003026 <__fp_pscA>:
    3026:	00 24       	eor	r0, r0
    3028:	0a 94       	dec	r0
    302a:	16 16       	cp	r1, r22
    302c:	17 06       	cpc	r1, r23
    302e:	18 06       	cpc	r1, r24
    3030:	09 06       	cpc	r0, r25
    3032:	08 95       	ret

00003034 <__fp_pscB>:
    3034:	00 24       	eor	r0, r0
    3036:	0a 94       	dec	r0
    3038:	12 16       	cp	r1, r18
    303a:	13 06       	cpc	r1, r19
    303c:	14 06       	cpc	r1, r20
    303e:	05 06       	cpc	r0, r21
    3040:	08 95       	ret

00003042 <__fp_round>:
    3042:	09 2e       	mov	r0, r25
    3044:	03 94       	inc	r0
    3046:	00 0c       	add	r0, r0
    3048:	11 f4       	brne	.+4      	; 0x304e <__fp_round+0xc>
    304a:	88 23       	and	r24, r24
    304c:	52 f0       	brmi	.+20     	; 0x3062 <__fp_round+0x20>
    304e:	bb 0f       	add	r27, r27
    3050:	40 f4       	brcc	.+16     	; 0x3062 <__fp_round+0x20>
    3052:	bf 2b       	or	r27, r31
    3054:	11 f4       	brne	.+4      	; 0x305a <__fp_round+0x18>
    3056:	60 ff       	sbrs	r22, 0
    3058:	04 c0       	rjmp	.+8      	; 0x3062 <__fp_round+0x20>
    305a:	6f 5f       	subi	r22, 0xFF	; 255
    305c:	7f 4f       	sbci	r23, 0xFF	; 255
    305e:	8f 4f       	sbci	r24, 0xFF	; 255
    3060:	9f 4f       	sbci	r25, 0xFF	; 255
    3062:	08 95       	ret

00003064 <__udivmodsi4>:
    3064:	a1 e2       	ldi	r26, 0x21	; 33
    3066:	1a 2e       	mov	r1, r26
    3068:	aa 1b       	sub	r26, r26
    306a:	bb 1b       	sub	r27, r27
    306c:	fd 01       	movw	r30, r26
    306e:	0d c0       	rjmp	.+26     	; 0x308a <__udivmodsi4_ep>

00003070 <__udivmodsi4_loop>:
    3070:	aa 1f       	adc	r26, r26
    3072:	bb 1f       	adc	r27, r27
    3074:	ee 1f       	adc	r30, r30
    3076:	ff 1f       	adc	r31, r31
    3078:	a2 17       	cp	r26, r18
    307a:	b3 07       	cpc	r27, r19
    307c:	e4 07       	cpc	r30, r20
    307e:	f5 07       	cpc	r31, r21
    3080:	20 f0       	brcs	.+8      	; 0x308a <__udivmodsi4_ep>
    3082:	a2 1b       	sub	r26, r18
    3084:	b3 0b       	sbc	r27, r19
    3086:	e4 0b       	sbc	r30, r20
    3088:	f5 0b       	sbc	r31, r21

0000308a <__udivmodsi4_ep>:
    308a:	66 1f       	adc	r22, r22
    308c:	77 1f       	adc	r23, r23
    308e:	88 1f       	adc	r24, r24
    3090:	99 1f       	adc	r25, r25
    3092:	1a 94       	dec	r1
    3094:	69 f7       	brne	.-38     	; 0x3070 <__udivmodsi4_loop>
    3096:	60 95       	com	r22
    3098:	70 95       	com	r23
    309a:	80 95       	com	r24
    309c:	90 95       	com	r25
    309e:	9b 01       	movw	r18, r22
    30a0:	ac 01       	movw	r20, r24
    30a2:	bd 01       	movw	r22, r26
    30a4:	cf 01       	movw	r24, r30
    30a6:	08 95       	ret

000030a8 <__tablejump2__>:
    30a8:	ee 0f       	add	r30, r30
    30aa:	ff 1f       	adc	r31, r31
    30ac:	05 90       	lpm	r0, Z+
    30ae:	f4 91       	lpm	r31, Z
    30b0:	e0 2d       	mov	r30, r0
    30b2:	09 94       	ijmp

000030b4 <_exit>:
    30b4:	f8 94       	cli

000030b6 <__stop_program>:
    30b6:	ff cf       	rjmp	.-2      	; 0x30b6 <__stop_program>
